ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"EFFECTOR_PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	EFFECTOR_PWM_initVar
  18              		.bss
  19              		.type	EFFECTOR_PWM_initVar, %object
  20              		.size	EFFECTOR_PWM_initVar, 1
  21              	EFFECTOR_PWM_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.EFFECTOR_PWM_Start,"ax",%progbits
  24              		.align	2
  25              		.global	EFFECTOR_PWM_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	EFFECTOR_PWM_Start, %function
  29              	EFFECTOR_PWM_Start:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\EFFECTOR_PWM.c"
   1:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * File Name: EFFECTOR_PWM.c
   3:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Version 3.10
   4:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
   5:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  15:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Note:
  16:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  17:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  24:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #include "EFFECTOR_PWM.h"
  25:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  26:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /* Error message for removed <resource> through optimization */
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 2


  27:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #ifdef EFFECTOR_PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #error PWM_v3_10 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* EFFECTOR_PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  32:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** uint8 EFFECTOR_PWM_initVar = 0u;
  33:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  34:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  35:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Function Name: EFFECTOR_PWM_Start
  37:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  39:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Summary:
  40:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  44:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Parameters:
  45:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
  46:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  47:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Return:
  48:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
  49:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  50:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Global variables:
  51:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  EFFECTOR_PWM_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  54:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** void EFFECTOR_PWM_Start(void) 
  56:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** {
  32              		.loc 1 56 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     if(EFFECTOR_PWM_initVar == 0u)
  40              		.loc 1 58 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
  60:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_Init();
  45              		.loc 1 60 0
  46 000c FFF7FEFF 		bl	EFFECTOR_PWM_Init
  61:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_initVar = 1u;
  47              		.loc 1 61 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  62:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
  63:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     EFFECTOR_PWM_Enable();
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 3


  52              		.loc 1 63 0
  53 0016 FFF7FEFF 		bl	EFFECTOR_PWM_Enable
  64:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  65:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** }
  54              		.loc 1 65 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	EFFECTOR_PWM_initVar
  62              		.cfi_endproc
  63              	.LFE0:
  64              		.size	EFFECTOR_PWM_Start, .-EFFECTOR_PWM_Start
  65              		.section	.text.EFFECTOR_PWM_Init,"ax",%progbits
  66              		.align	2
  67              		.global	EFFECTOR_PWM_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	EFFECTOR_PWM_Init, %function
  71              	EFFECTOR_PWM_Init:
  72              	.LFB1:
  66:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  67:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  68:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Function Name: EFFECTOR_PWM_Init
  70:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  72:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Summary:
  73:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  EFFECTOR_PWM_Start().
  76:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  77:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Parameters:
  78:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
  79:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  80:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Return:
  81:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
  82:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  83:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** void EFFECTOR_PWM_Init(void) 
  85:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** {
  73              		.loc 1 85 0
  74              		.cfi_startproc
  75 0000 90B5     		push	{r4, r7, lr}
  76              		.cfi_def_cfa_offset 12
  77              		.cfi_offset 4, -12
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UsingFixedFunction || EFFECTOR_PWM_UseControl)
  87:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UsingFixedFunction || EFFECTOR_PWM_UseControl) */
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 4


  89:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  90:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if(!EFFECTOR_PWM_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(EFFECTOR_PWM_UseStatus)
  92:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             uint8 EFFECTOR_PWM_interruptState;
  94:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UseStatus) */
  95:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (!EFFECTOR_PWM_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  97:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_CONTROL |= EFFECTOR_PWM_CFG0_MODE;
 100:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if (EFFECTOR_PWM_DeadBand2_4)
 101:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_CONTROL |= EFFECTOR_PWM_CFG0_DB;
 102:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 104:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         ctrl = EFFECTOR_PWM_CONTROL3 & ((uint8 )(~EFFECTOR_PWM_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_CONTROL3 = ctrl | EFFECTOR_PWM_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 107:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_RT1 &= ((uint8)(~EFFECTOR_PWM_RT1_MASK));
 109:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_RT1 |= EFFECTOR_PWM_SYNC;
 110:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 111:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_RT1 &= ((uint8)(~EFFECTOR_PWM_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_RT1 |= EFFECTOR_PWM_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 115:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #elif (EFFECTOR_PWM_UseControl)
 116:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         ctrl = EFFECTOR_PWM_CONTROL & ((uint8)(~EFFECTOR_PWM_CTRL_CMPMODE2_MASK)) &
  84              		.loc 1 117 0
  85 0006 224B     		ldr	r3, .L6
  86 0008 1B78     		ldrb	r3, [r3]
  87 000a DAB2     		uxtb	r2, r3
  88 000c FB1D     		add	r3, r7, #7
  89 000e 3F21     		mov	r1, #63
  90 0010 8A43     		bic	r2, r1
  91 0012 1A70     		strb	r2, [r3]
 118:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 ((uint8)(~EFFECTOR_PWM_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_CONTROL = ctrl | EFFECTOR_PWM_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0014 1E4B     		ldr	r3, .L6
  94 0016 FA1D     		add	r2, r7, #7
  95 0018 1278     		ldrb	r2, [r2]
  96 001a 0B21     		mov	r1, #11
  97 001c 0A43     		orr	r2, r1
  98 001e D2B2     		uxtb	r2, r2
  99 0020 1A70     		strb	r2, [r3]
 120:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                    EFFECTOR_PWM_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 123:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (!EFFECTOR_PWM_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if (EFFECTOR_PWM_Resolution == 8)
 125:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_AUX_CONTROLDP0 |= (EFFECTOR_PWM_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else /* (EFFECTOR_PWM_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_AUX_CONTROLDP0 |= (EFFECTOR_PWM_AUX_CTRL_FIFO0_CLR);
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 5


 100              		.loc 1 129 0
 101 0022 1C4B     		ldr	r3, .L6+4
 102 0024 1B4A     		ldr	r2, .L6+4
 103 0026 1278     		ldrb	r2, [r2]
 104 0028 D2B2     		uxtb	r2, r2
 105 002a 0121     		mov	r1, #1
 106 002c 0A43     		orr	r2, r1
 107 002e D2B2     		uxtb	r2, r2
 108 0030 1A70     		strb	r2, [r3]
 130:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_AUX_CONTROLDP1 |= (EFFECTOR_PWM_AUX_CTRL_FIFO0_CLR);
 109              		.loc 1 130 0
 110 0032 194B     		ldr	r3, .L6+8
 111 0034 184A     		ldr	r2, .L6+8
 112 0036 1278     		ldrb	r2, [r2]
 113 0038 D2B2     		uxtb	r2, r2
 114 003a 0121     		mov	r1, #1
 115 003c 0A43     		orr	r2, r1
 116 003e D2B2     		uxtb	r2, r2
 117 0040 1A70     		strb	r2, [r3]
 131:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_Resolution == 8) */
 132:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 133:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_WriteCounter(EFFECTOR_PWM_INIT_PERIOD_VALUE);
 118              		.loc 1 133 0
 119 0042 164B     		ldr	r3, .L6+12
 120 0044 181C     		mov	r0, r3
 121 0046 FFF7FEFF 		bl	EFFECTOR_PWM_WriteCounter
 134:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (!EFFECTOR_PWM_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 136:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     EFFECTOR_PWM_WritePeriod(EFFECTOR_PWM_INIT_PERIOD_VALUE);
 122              		.loc 1 136 0
 123 004a 144B     		ldr	r3, .L6+12
 124 004c 181C     		mov	r0, r3
 125 004e FFF7FEFF 		bl	EFFECTOR_PWM_WritePeriod
 137:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 138:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if (EFFECTOR_PWM_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_WriteCompare(EFFECTOR_PWM_INIT_COMPARE_VALUE1);
 126              		.loc 1 139 0
 127 0052 134B     		ldr	r3, .L6+16
 128 0054 181C     		mov	r0, r3
 129 0056 FFF7FEFF 		bl	EFFECTOR_PWM_WriteCompare
 140:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
 141:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_WriteCompare1(EFFECTOR_PWM_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_WriteCompare2(EFFECTOR_PWM_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 145:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if (EFFECTOR_PWM_KillModeMinTime)
 146:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_WriteKillTime(EFFECTOR_PWM_MinimumKillTime);
 147:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 149:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if (EFFECTOR_PWM_DeadBandUsed)
 150:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_WriteDeadTime(EFFECTOR_PWM_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 153:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UseStatus || EFFECTOR_PWM_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_SetInterruptMode(EFFECTOR_PWM_INIT_INTERRUPTS_MODE);
 130              		.loc 1 154 0
 131 005a 0020     		mov	r0, #0
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 6


 132 005c FFF7FEFF 		bl	EFFECTOR_PWM_SetInterruptMode
 155:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UseStatus || EFFECTOR_PWM_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 157:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_GLOBAL_ENABLE |= EFFECTOR_PWM_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_CONTROL2 |= EFFECTOR_PWM_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #else
 163:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(EFFECTOR_PWM_UseStatus)
 164:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 165:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_interruptState = CyEnterCriticalSection();
 133              		.loc 1 167 0
 134 0060 BC1D     		add	r4, r7, #6
 135 0062 FFF7FEFF 		bl	CyEnterCriticalSection
 136 0066 031C     		mov	r3, r0
 137 0068 2370     		strb	r3, [r4]
 168:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_STATUS_AUX_CTRL |= EFFECTOR_PWM_STATUS_ACTL_INT_EN_MASK;
 138              		.loc 1 169 0
 139 006a 0A4B     		ldr	r3, .L6+4
 140 006c 094A     		ldr	r2, .L6+4
 141 006e 1278     		ldrb	r2, [r2]
 142 0070 D2B2     		uxtb	r2, r2
 143 0072 1021     		mov	r1, #16
 144 0074 0A43     		orr	r2, r1
 145 0076 D2B2     		uxtb	r2, r2
 146 0078 1A70     		strb	r2, [r3]
 170:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 171:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CyExitCriticalSection(EFFECTOR_PWM_interruptState);
 147              		.loc 1 172 0
 148 007a BB1D     		add	r3, r7, #6
 149 007c 1B78     		ldrb	r3, [r3]
 150 007e 181C     		mov	r0, r3
 151 0080 FFF7FEFF 		bl	CyExitCriticalSection
 173:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 174:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Clear the FIFO to enable the EFFECTOR_PWM_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_ClearFIFO();
 152              		.loc 1 176 0
 153 0084 FFF7FEFF 		bl	EFFECTOR_PWM_ClearFIFO
 177:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UseStatus) */
 178:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** }
 154              		.loc 1 179 0
 155 0088 BD46     		mov	sp, r7
 156 008a 03B0     		add	sp, sp, #12
 157              		@ sp needed
 158 008c 90BD     		pop	{r4, r7, pc}
 159              	.L7:
 160 008e C046     		.align	2
 161              	.L6:
 162 0090 70000F40 		.word	1074724976
 163 0094 90000F40 		.word	1074725008
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 7


 164 0098 91000F40 		.word	1074725009
 165 009c 204E0000 		.word	20000
 166 00a0 44480000 		.word	18500
 167              		.cfi_endproc
 168              	.LFE1:
 169              		.size	EFFECTOR_PWM_Init, .-EFFECTOR_PWM_Init
 170              		.section	.text.EFFECTOR_PWM_Enable,"ax",%progbits
 171              		.align	2
 172              		.global	EFFECTOR_PWM_Enable
 173              		.code	16
 174              		.thumb_func
 175              		.type	EFFECTOR_PWM_Enable, %function
 176              	EFFECTOR_PWM_Enable:
 177              	.LFB2:
 180:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 181:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 182:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Function Name: EFFECTOR_PWM_Enable
 184:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 186:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Summary:
 187:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 189:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Parameters:
 190:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
 191:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 192:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Return:
 193:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
 194:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 195:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 198:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** void EFFECTOR_PWM_Enable(void) 
 200:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** {
 178              		.loc 1 200 0
 179              		.cfi_startproc
 180 0000 80B5     		push	{r7, lr}
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 7, -8
 183              		.cfi_offset 14, -4
 184 0002 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_GLOBAL_ENABLE |= EFFECTOR_PWM_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_GLOBAL_STBY_ENABLE |= EFFECTOR_PWM_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 207:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UseControl || EFFECTOR_PWM_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_CONTROL |= EFFECTOR_PWM_CTRL_ENABLE;
 186              		.loc 1 209 0
 187 0004 054B     		ldr	r3, .L9
 188 0006 054A     		ldr	r2, .L9
 189 0008 1278     		ldrb	r2, [r2]
 190 000a D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 8


 191 000c 8021     		mov	r1, #128
 192 000e 4942     		neg	r1, r1
 193 0010 0A43     		orr	r2, r1
 194 0012 D2B2     		uxtb	r2, r2
 195 0014 1A70     		strb	r2, [r3]
 210:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UseControl || EFFECTOR_PWM_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** }
 196              		.loc 1 211 0
 197 0016 BD46     		mov	sp, r7
 198              		@ sp needed
 199 0018 80BD     		pop	{r7, pc}
 200              	.L10:
 201 001a C046     		.align	2
 202              	.L9:
 203 001c 70000F40 		.word	1074724976
 204              		.cfi_endproc
 205              	.LFE2:
 206              		.size	EFFECTOR_PWM_Enable, .-EFFECTOR_PWM_Enable
 207              		.section	.text.EFFECTOR_PWM_Stop,"ax",%progbits
 208              		.align	2
 209              		.global	EFFECTOR_PWM_Stop
 210              		.code	16
 211              		.thumb_func
 212              		.type	EFFECTOR_PWM_Stop, %function
 213              	EFFECTOR_PWM_Stop:
 214              	.LFB3:
 212:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 213:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 214:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Function Name: EFFECTOR_PWM_Stop
 216:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 218:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Summary:
 219:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 222:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Parameters:
 223:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
 224:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 225:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Return:
 226:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
 227:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 228:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 232:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** void EFFECTOR_PWM_Stop(void) 
 234:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** {
 215              		.loc 1 234 0
 216              		.cfi_startproc
 217 0000 80B5     		push	{r7, lr}
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 7, -8
 220              		.cfi_offset 14, -4
 221 0002 00AF     		add	r7, sp, #0
 222              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 9


 235:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UseControl || EFFECTOR_PWM_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_CONTROL &= ((uint8)(~EFFECTOR_PWM_CTRL_ENABLE));
 223              		.loc 1 236 0
 224 0004 044B     		ldr	r3, .L12
 225 0006 044A     		ldr	r2, .L12
 226 0008 1278     		ldrb	r2, [r2]
 227 000a D1B2     		uxtb	r1, r2
 228 000c 7F22     		mov	r2, #127
 229 000e 0A40     		and	r2, r1
 230 0010 D2B2     		uxtb	r2, r2
 231 0012 1A70     		strb	r2, [r3]
 237:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UseControl || EFFECTOR_PWM_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 239:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_GLOBAL_ENABLE &= ((uint8)(~EFFECTOR_PWM_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~EFFECTOR_PWM_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** }
 232              		.loc 1 244 0
 233 0014 BD46     		mov	sp, r7
 234              		@ sp needed
 235 0016 80BD     		pop	{r7, pc}
 236              	.L13:
 237              		.align	2
 238              	.L12:
 239 0018 70000F40 		.word	1074724976
 240              		.cfi_endproc
 241              	.LFE3:
 242              		.size	EFFECTOR_PWM_Stop, .-EFFECTOR_PWM_Stop
 243              		.section	.text.EFFECTOR_PWM_WriteCounter,"ax",%progbits
 244              		.align	2
 245              		.global	EFFECTOR_PWM_WriteCounter
 246              		.code	16
 247              		.thumb_func
 248              		.type	EFFECTOR_PWM_WriteCounter, %function
 249              	EFFECTOR_PWM_WriteCounter:
 250              	.LFB4:
 245:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 246:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (EFFECTOR_PWM_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_CompareMode1SW)
 248:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 249:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 250:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Function Name: EFFECTOR_PWM_SetCompareMode
 252:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 254:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Summary:
 255:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 258:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 262:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Return:
 263:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  None
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 10


 264:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 265:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         void EFFECTOR_PWM_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         {
 268:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #if(EFFECTOR_PWM_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 270:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #if(0 != EFFECTOR_PWM_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << EFFECTOR_PWM_CTRL_CMPM
 272:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #else
 273:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #endif /* (0 != EFFECTOR_PWM_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 276:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_CONTROL3 &= ((uint8)(~EFFECTOR_PWM_CTRL_CMPMODE1_MASK)); /*Clear Exist
 277:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 279:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #elif (EFFECTOR_PWM_UseControl)
 280:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 281:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #if(0 != EFFECTOR_PWM_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << EFFECTOR_PWM_CTRL_CMP
 283:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                                 EFFECTOR_PWM_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #else
 285:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                     uint8 comparemode1masked = comparemode & EFFECTOR_PWM_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #endif /* (0 != EFFECTOR_PWM_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 288:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #if(0 != EFFECTOR_PWM_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << EFFECTOR_PWM_CTRL_CMP
 290:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                                EFFECTOR_PWM_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #else
 292:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                     uint8 comparemode2masked = comparemode & EFFECTOR_PWM_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #endif /* (0 != EFFECTOR_PWM_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 295:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_CONTROL &= ((uint8)(~(EFFECTOR_PWM_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                             EFFECTOR_PWM_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 300:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #else
 301:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         }
 304:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* EFFECTOR_PWM_CompareMode1SW */
 305:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 306:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 308:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_CompareMode1SW)
 309:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 310:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 311:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Function Name: EFFECTOR_PWM_SetCompareMode1
 313:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 315:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Summary:
 316:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 318:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 11


 321:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 322:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Return:
 323:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  None
 324:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 325:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         void EFFECTOR_PWM_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         {
 328:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #if(0 != EFFECTOR_PWM_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << EFFECTOR_PWM_CTRL_CMPMODE1
 330:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                            EFFECTOR_PWM_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #else
 332:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 uint8 comparemodemasked = comparemode & EFFECTOR_PWM_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #endif /* (0 != EFFECTOR_PWM_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 335:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #if (EFFECTOR_PWM_UseControl)
 336:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_CONTROL &= ((uint8)(~EFFECTOR_PWM_CTRL_CMPMODE1_MASK)); /*Clear existi
 337:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #endif /* (EFFECTOR_PWM_UseControl) */
 339:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         }
 340:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* EFFECTOR_PWM_CompareMode1SW */
 341:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 342:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (EFFECTOR_PWM_CompareMode2SW)
 343:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 344:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 345:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_SetCompareMode2
 347:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 349:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 350:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 352:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 356:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 357:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 358:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 359:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 362:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 363:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(0 != EFFECTOR_PWM_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << EFFECTOR_PWM_CTRL_CMPMODE2_SHI
 365:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                                  EFFECTOR_PWM_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
 367:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             uint8 comparemodemasked = comparemode & EFFECTOR_PWM_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (0 != EFFECTOR_PWM_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 370:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if (EFFECTOR_PWM_UseControl)
 371:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_CONTROL &= ((uint8)(~EFFECTOR_PWM_CTRL_CMPMODE2_MASK)); /*Clear existing m
 372:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UseControl) */
 374:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 375:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /*EFFECTOR_PWM_CompareMode2SW */
 376:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 377:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 12


 378:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 379:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 380:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (!EFFECTOR_PWM_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 382:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 383:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_WriteCounter
 385:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 387:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 388:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 393:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 396:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 397:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 398:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 399:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 402:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                        
 405:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 251              		.loc 1 405 0
 252              		.cfi_startproc
 253 0000 80B5     		push	{r7, lr}
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 7, -8
 256              		.cfi_offset 14, -4
 257 0002 82B0     		sub	sp, sp, #8
 258              		.cfi_def_cfa_offset 16
 259 0004 00AF     		add	r7, sp, #0
 260              		.cfi_def_cfa_register 7
 261 0006 021C     		mov	r2, r0
 262 0008 BB1D     		add	r3, r7, #6
 263 000a 1A80     		strh	r2, [r3]
 406:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         CY_SET_REG16(EFFECTOR_PWM_COUNTER_LSB_PTR, counter);
 264              		.loc 1 406 0
 265 000c 034B     		ldr	r3, .L15
 266 000e BA1D     		add	r2, r7, #6
 267 0010 1288     		ldrh	r2, [r2]
 268 0012 1A80     		strh	r2, [r3]
 407:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 269              		.loc 1 407 0
 270 0014 BD46     		mov	sp, r7
 271 0016 02B0     		add	sp, sp, #8
 272              		@ sp needed
 273 0018 80BD     		pop	{r7, pc}
 274              	.L16:
 275 001a C046     		.align	2
 276              	.L15:
 277 001c 00100F40 		.word	1074728960
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 13


 278              		.cfi_endproc
 279              	.LFE4:
 280              		.size	EFFECTOR_PWM_WriteCounter, .-EFFECTOR_PWM_WriteCounter
 281              		.section	.text.EFFECTOR_PWM_ReadCounter,"ax",%progbits
 282              		.align	2
 283              		.global	EFFECTOR_PWM_ReadCounter
 284              		.code	16
 285              		.thumb_func
 286              		.type	EFFECTOR_PWM_ReadCounter, %function
 287              	EFFECTOR_PWM_ReadCounter:
 288              	.LFB5:
 408:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 409:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 410:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadCounter
 412:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 414:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 415:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 418:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 420:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 421:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 422:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 424:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint16 EFFECTOR_PWM_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 289              		.loc 1 426 0
 290              		.cfi_startproc
 291 0000 80B5     		push	{r7, lr}
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 7, -8
 294              		.cfi_offset 14, -4
 295 0002 00AF     		add	r7, sp, #0
 296              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****           (void)CY_GET_REG8(EFFECTOR_PWM_COUNTERCAP_LSB_PTR_8BIT);
 297              		.loc 1 430 0
 298 0004 034B     		ldr	r3, .L19
 299 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 432:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return (CY_GET_REG16(EFFECTOR_PWM_CAPTURE_LSB_PTR));
 300              		.loc 1 433 0
 301 0008 034B     		ldr	r3, .L19+4
 302 000a 1B88     		ldrh	r3, [r3]
 303 000c 9BB2     		uxth	r3, r3
 434:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 304              		.loc 1 434 0
 305 000e 181C     		mov	r0, r3
 306 0010 BD46     		mov	sp, r7
 307              		@ sp needed
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 14


 308 0012 80BD     		pop	{r7, pc}
 309              	.L20:
 310              		.align	2
 311              	.L19:
 312 0014 10000F40 		.word	1074724880
 313 0018 A0100F40 		.word	1074729120
 314              		.cfi_endproc
 315              	.LFE5:
 316              		.size	EFFECTOR_PWM_ReadCounter, .-EFFECTOR_PWM_ReadCounter
 317              		.section	.text.EFFECTOR_PWM_ClearFIFO,"ax",%progbits
 318              		.align	2
 319              		.global	EFFECTOR_PWM_ClearFIFO
 320              		.code	16
 321              		.thumb_func
 322              		.type	EFFECTOR_PWM_ClearFIFO, %function
 323              	EFFECTOR_PWM_ClearFIFO:
 324              	.LFB6:
 435:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 436:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UseStatus)
 437:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 438:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 439:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Function Name: EFFECTOR_PWM_ClearFIFO
 441:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 443:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Summary:
 444:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 446:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  None
 448:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 449:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Return:
 450:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  None
 451:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 452:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         void EFFECTOR_PWM_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         {
 325              		.loc 1 454 0
 326              		.cfi_startproc
 327 0000 80B5     		push	{r7, lr}
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 7, -8
 330              		.cfi_offset 14, -4
 331 0002 00AF     		add	r7, sp, #0
 332              		.cfi_def_cfa_register 7
 455:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             while(0u != (EFFECTOR_PWM_ReadStatusRegister() & EFFECTOR_PWM_STATUS_FIFONEMPTY))
 333              		.loc 1 455 0
 334 0004 01E0     		b	.L22
 335              	.L23:
 456:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             {
 457:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 (void)EFFECTOR_PWM_ReadCapture();
 336              		.loc 1 457 0
 337 0006 FFF7FEFF 		bl	EFFECTOR_PWM_ReadCapture
 338              	.L22:
 455:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             while(0u != (EFFECTOR_PWM_ReadStatusRegister() & EFFECTOR_PWM_STATUS_FIFONEMPTY))
 339              		.loc 1 455 0 discriminator 1
 340 000a FFF7FEFF 		bl	EFFECTOR_PWM_ReadStatusRegister
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 15


 341 000e 031C     		mov	r3, r0
 342 0010 1A1C     		mov	r2, r3
 343 0012 1023     		mov	r3, #16
 344 0014 1340     		and	r3, r2
 345 0016 F6D1     		bne	.L23
 458:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             }
 459:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         }
 346              		.loc 1 459 0
 347 0018 BD46     		mov	sp, r7
 348              		@ sp needed
 349 001a 80BD     		pop	{r7, pc}
 350              		.cfi_endproc
 351              	.LFE6:
 352              		.size	EFFECTOR_PWM_ClearFIFO, .-EFFECTOR_PWM_ClearFIFO
 353              		.section	.text.EFFECTOR_PWM_WritePeriod,"ax",%progbits
 354              		.align	2
 355              		.global	EFFECTOR_PWM_WritePeriod
 356              		.code	16
 357              		.thumb_func
 358              		.type	EFFECTOR_PWM_WritePeriod, %function
 359              	EFFECTOR_PWM_WritePeriod:
 360              	.LFB7:
 460:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 461:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* EFFECTOR_PWM_UseStatus */
 462:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 463:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* !EFFECTOR_PWM_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 465:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 466:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Function Name: EFFECTOR_PWM_WritePeriod
 468:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 470:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Summary:
 471:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 474:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Parameters:
 475:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 478:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Return:
 479:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
 480:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 481:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** void EFFECTOR_PWM_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** {
 361              		.loc 1 483 0
 362              		.cfi_startproc
 363 0000 80B5     		push	{r7, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 82B0     		sub	sp, sp, #8
 368              		.cfi_def_cfa_offset 16
 369 0004 00AF     		add	r7, sp, #0
 370              		.cfi_def_cfa_register 7
 371 0006 021C     		mov	r2, r0
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 16


 372 0008 BB1D     		add	r3, r7, #6
 373 000a 1A80     		strh	r2, [r3]
 484:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if(EFFECTOR_PWM_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         CY_SET_REG16(EFFECTOR_PWM_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #else
 487:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         CY_SET_REG16(EFFECTOR_PWM_PERIOD_LSB_PTR, period);
 374              		.loc 1 487 0
 375 000c 034B     		ldr	r3, .L25
 376 000e BA1D     		add	r2, r7, #6
 377 0010 1288     		ldrh	r2, [r2]
 378 0012 1A80     		strh	r2, [r3]
 488:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** }
 379              		.loc 1 489 0
 380 0014 BD46     		mov	sp, r7
 381 0016 02B0     		add	sp, sp, #8
 382              		@ sp needed
 383 0018 80BD     		pop	{r7, pc}
 384              	.L26:
 385 001a C046     		.align	2
 386              	.L25:
 387 001c 80100F40 		.word	1074729088
 388              		.cfi_endproc
 389              	.LFE7:
 390              		.size	EFFECTOR_PWM_WritePeriod, .-EFFECTOR_PWM_WritePeriod
 391              		.section	.text.EFFECTOR_PWM_WriteCompare,"ax",%progbits
 392              		.align	2
 393              		.global	EFFECTOR_PWM_WriteCompare
 394              		.code	16
 395              		.thumb_func
 396              		.type	EFFECTOR_PWM_WriteCompare, %function
 397              	EFFECTOR_PWM_WriteCompare:
 398              	.LFB8:
 490:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 491:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (EFFECTOR_PWM_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 493:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 494:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_WriteCompare
 496:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 498:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 499:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 505:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 508:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 509:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 510:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 511:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 17


 514:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 515:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                        
 518:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 399              		.loc 1 518 0
 400              		.cfi_startproc
 401 0000 80B5     		push	{r7, lr}
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 7, -8
 404              		.cfi_offset 14, -4
 405 0002 82B0     		sub	sp, sp, #8
 406              		.cfi_def_cfa_offset 16
 407 0004 00AF     		add	r7, sp, #0
 408              		.cfi_def_cfa_register 7
 409 0006 021C     		mov	r2, r0
 410 0008 BB1D     		add	r3, r7, #6
 411 000a 1A80     		strh	r2, [r3]
 519:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(EFFECTOR_PWM_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CY_SET_REG16(EFFECTOR_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
 522:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CY_SET_REG16(EFFECTOR_PWM_COMPARE1_LSB_PTR, compare);
 412              		.loc 1 522 0
 413 000c 034B     		ldr	r3, .L28
 414 000e BA1D     		add	r2, r7, #6
 415 0010 1288     		ldrh	r2, [r2]
 416 0012 1A80     		strh	r2, [r3]
 523:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 525:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if (EFFECTOR_PWM_PWMMode == EFFECTOR_PWM__B_PWM__DITHER)
 526:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #if(EFFECTOR_PWM_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 CY_SET_REG16(EFFECTOR_PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #else
 529:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 CY_SET_REG16(EFFECTOR_PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_PWMMode == EFFECTOR_PWM__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 417              		.loc 1 532 0
 418 0014 BD46     		mov	sp, r7
 419 0016 02B0     		add	sp, sp, #8
 420              		@ sp needed
 421 0018 80BD     		pop	{r7, pc}
 422              	.L29:
 423 001a C046     		.align	2
 424              	.L28:
 425 001c 40100F40 		.word	1074729024
 426              		.cfi_endproc
 427              	.LFE8:
 428              		.size	EFFECTOR_PWM_WriteCompare, .-EFFECTOR_PWM_WriteCompare
 429              		.section	.text.EFFECTOR_PWM_SetInterruptMode,"ax",%progbits
 430              		.align	2
 431              		.global	EFFECTOR_PWM_SetInterruptMode
 432              		.code	16
 433              		.thumb_func
 434              		.type	EFFECTOR_PWM_SetInterruptMode, %function
 435              	EFFECTOR_PWM_SetInterruptMode:
 436              	.LFB9:
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 18


 533:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 534:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 535:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #else
 536:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 537:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 538:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_WriteCompare1
 540:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 542:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 543:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 548:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 551:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 552:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 553:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 554:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                         
 557:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 558:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(EFFECTOR_PWM_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CY_SET_REG16(EFFECTOR_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
 561:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CY_SET_REG16(EFFECTOR_PWM_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 564:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 565:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 566:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_WriteCompare2
 568:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 570:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 571:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  mode.
 576:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 577:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 580:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 581:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 582:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 583:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                         
 586:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 587:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(EFFECTOR_PWM_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CY_SET_REG16(EFFECTOR_PWM_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 19


 590:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CY_SET_REG16(EFFECTOR_PWM_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 593:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 595:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (EFFECTOR_PWM_DeadBandUsed)
 596:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 597:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 598:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_WriteDeadTime
 600:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 602:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 603:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 605:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 608:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 609:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 610:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 611:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 614:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(!EFFECTOR_PWM_DeadBand2_4)
 616:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CY_SET_REG8(EFFECTOR_PWM_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
 618:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_DEADBAND_COUNT &= ((uint8)(~EFFECTOR_PWM_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 622:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #if(EFFECTOR_PWM_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << EFFECTOR_PWM_DEADBAND_CO
 625:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                                     EFFECTOR_PWM_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #else
 627:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_DEADBAND_COUNT |= deadtime & EFFECTOR_PWM_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #endif /* (EFFECTOR_PWM_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 630:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (!EFFECTOR_PWM_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 632:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 633:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 634:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadDeadTime
 636:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 638:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 639:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 641:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 643:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 644:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 645:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 20


 647:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint8 EFFECTOR_PWM_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 650:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(!EFFECTOR_PWM_DeadBand2_4)
 652:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             return (CY_GET_REG8(EFFECTOR_PWM_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
 654:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 655:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #if(EFFECTOR_PWM_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 return ((uint8)(((uint8)(EFFECTOR_PWM_DEADBAND_COUNT & EFFECTOR_PWM_DEADBAND_COUNT_
 658:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                                                            EFFECTOR_PWM_DEADBAND_CO
 659:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #else
 660:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 return (EFFECTOR_PWM_DEADBAND_COUNT & EFFECTOR_PWM_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #endif /* (EFFECTOR_PWM_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (!EFFECTOR_PWM_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 664:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 666:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (EFFECTOR_PWM_UseStatus || EFFECTOR_PWM_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 668:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 669:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_SetInterruptMode
 671:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 673:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 674:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 677:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 680:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 681:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 682:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 683:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 437              		.loc 1 685 0
 438              		.cfi_startproc
 439 0000 80B5     		push	{r7, lr}
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 0002 82B0     		sub	sp, sp, #8
 444              		.cfi_def_cfa_offset 16
 445 0004 00AF     		add	r7, sp, #0
 446              		.cfi_def_cfa_register 7
 447 0006 021C     		mov	r2, r0
 448 0008 FB1D     		add	r3, r7, #7
 449 000a 1A70     		strb	r2, [r3]
 686:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         CY_SET_REG8(EFFECTOR_PWM_STATUS_MASK_PTR, interruptMode);
 450              		.loc 1 686 0
 451 000c 034B     		ldr	r3, .L31
 452 000e FA1D     		add	r2, r7, #7
 453 0010 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 21


 454 0012 1A70     		strb	r2, [r3]
 687:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 455              		.loc 1 687 0
 456 0014 BD46     		mov	sp, r7
 457 0016 02B0     		add	sp, sp, #8
 458              		@ sp needed
 459 0018 80BD     		pop	{r7, pc}
 460              	.L32:
 461 001a C046     		.align	2
 462              	.L31:
 463 001c 80000F40 		.word	1074724992
 464              		.cfi_endproc
 465              	.LFE9:
 466              		.size	EFFECTOR_PWM_SetInterruptMode, .-EFFECTOR_PWM_SetInterruptMode
 467              		.section	.text.EFFECTOR_PWM_ReadStatusRegister,"ax",%progbits
 468              		.align	2
 469              		.global	EFFECTOR_PWM_ReadStatusRegister
 470              		.code	16
 471              		.thumb_func
 472              		.type	EFFECTOR_PWM_ReadStatusRegister, %function
 473              	EFFECTOR_PWM_ReadStatusRegister:
 474              	.LFB10:
 688:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 689:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 690:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadStatusRegister
 692:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 694:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 695:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 697:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 699:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 700:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 701:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 710:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint8 EFFECTOR_PWM_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 475              		.loc 1 712 0
 476              		.cfi_startproc
 477 0000 80B5     		push	{r7, lr}
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 7, -8
 480              		.cfi_offset 14, -4
 481 0002 00AF     		add	r7, sp, #0
 482              		.cfi_def_cfa_register 7
 713:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return (CY_GET_REG8(EFFECTOR_PWM_STATUS_PTR));
 483              		.loc 1 713 0
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 22


 484 0004 024B     		ldr	r3, .L35
 485 0006 1B78     		ldrb	r3, [r3]
 486 0008 DBB2     		uxtb	r3, r3
 714:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 487              		.loc 1 714 0
 488 000a 181C     		mov	r0, r3
 489 000c BD46     		mov	sp, r7
 490              		@ sp needed
 491 000e 80BD     		pop	{r7, pc}
 492              	.L36:
 493              		.align	2
 494              	.L35:
 495 0010 60000F40 		.word	1074724960
 496              		.cfi_endproc
 497              	.LFE10:
 498              		.size	EFFECTOR_PWM_ReadStatusRegister, .-EFFECTOR_PWM_ReadStatusRegister
 499              		.section	.text.EFFECTOR_PWM_ReadControlRegister,"ax",%progbits
 500              		.align	2
 501              		.global	EFFECTOR_PWM_ReadControlRegister
 502              		.code	16
 503              		.thumb_func
 504              		.type	EFFECTOR_PWM_ReadControlRegister, %function
 505              	EFFECTOR_PWM_ReadControlRegister:
 506              	.LFB11:
 715:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 716:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* (EFFECTOR_PWM_UseStatus || EFFECTOR_PWM_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 718:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 719:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (EFFECTOR_PWM_UseControl)
 720:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 721:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 722:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadControlRegister
 724:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 726:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 727:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 730:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 732:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 733:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 734:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 736:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint8 EFFECTOR_PWM_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 507              		.loc 1 738 0
 508              		.cfi_startproc
 509 0000 80B5     		push	{r7, lr}
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 7, -8
 512              		.cfi_offset 14, -4
 513 0002 82B0     		sub	sp, sp, #8
 514              		.cfi_def_cfa_offset 16
 515 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 23


 516              		.cfi_def_cfa_register 7
 739:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 741:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         result = CY_GET_REG8(EFFECTOR_PWM_CONTROL_PTR);
 517              		.loc 1 741 0
 518 0006 054A     		ldr	r2, .L39
 519 0008 FB1D     		add	r3, r7, #7
 520 000a 1278     		ldrb	r2, [r2]
 521 000c 1A70     		strb	r2, [r3]
 742:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return (result);
 522              		.loc 1 742 0
 523 000e FB1D     		add	r3, r7, #7
 524 0010 1B78     		ldrb	r3, [r3]
 743:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 525              		.loc 1 743 0
 526 0012 181C     		mov	r0, r3
 527 0014 BD46     		mov	sp, r7
 528 0016 02B0     		add	sp, sp, #8
 529              		@ sp needed
 530 0018 80BD     		pop	{r7, pc}
 531              	.L40:
 532 001a C046     		.align	2
 533              	.L39:
 534 001c 70000F40 		.word	1074724976
 535              		.cfi_endproc
 536              	.LFE11:
 537              		.size	EFFECTOR_PWM_ReadControlRegister, .-EFFECTOR_PWM_ReadControlRegister
 538              		.section	.text.EFFECTOR_PWM_WriteControlRegister,"ax",%progbits
 539              		.align	2
 540              		.global	EFFECTOR_PWM_WriteControlRegister
 541              		.code	16
 542              		.thumb_func
 543              		.type	EFFECTOR_PWM_WriteControlRegister, %function
 544              	EFFECTOR_PWM_WriteControlRegister:
 545              	.LFB12:
 744:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 745:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 746:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_WriteControlRegister
 748:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 750:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 751:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 754:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 761:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 762:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 763:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 764:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_WriteControlRegister(uint8 control) 
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 24


 766:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 546              		.loc 1 766 0
 547              		.cfi_startproc
 548 0000 80B5     		push	{r7, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 82B0     		sub	sp, sp, #8
 553              		.cfi_def_cfa_offset 16
 554 0004 00AF     		add	r7, sp, #0
 555              		.cfi_def_cfa_register 7
 556 0006 021C     		mov	r2, r0
 557 0008 FB1D     		add	r3, r7, #7
 558 000a 1A70     		strb	r2, [r3]
 767:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         CY_SET_REG8(EFFECTOR_PWM_CONTROL_PTR, control);
 559              		.loc 1 767 0
 560 000c 034B     		ldr	r3, .L42
 561 000e FA1D     		add	r2, r7, #7
 562 0010 1278     		ldrb	r2, [r2]
 563 0012 1A70     		strb	r2, [r3]
 768:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 564              		.loc 1 768 0
 565 0014 BD46     		mov	sp, r7
 566 0016 02B0     		add	sp, sp, #8
 567              		@ sp needed
 568 0018 80BD     		pop	{r7, pc}
 569              	.L43:
 570 001a C046     		.align	2
 571              	.L42:
 572 001c 70000F40 		.word	1074724976
 573              		.cfi_endproc
 574              	.LFE12:
 575              		.size	EFFECTOR_PWM_WriteControlRegister, .-EFFECTOR_PWM_WriteControlRegister
 576              		.section	.text.EFFECTOR_PWM_ReadCapture,"ax",%progbits
 577              		.align	2
 578              		.global	EFFECTOR_PWM_ReadCapture
 579              		.code	16
 580              		.thumb_func
 581              		.type	EFFECTOR_PWM_ReadCapture, %function
 582              	EFFECTOR_PWM_ReadCapture:
 583              	.LFB13:
 769:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 770:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* (EFFECTOR_PWM_UseControl) */
 771:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 772:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 773:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (!EFFECTOR_PWM_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 775:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 776:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadCapture
 778:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 780:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 781:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 783:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 25


 785:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 786:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 787:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 789:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint16 EFFECTOR_PWM_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 584              		.loc 1 791 0
 585              		.cfi_startproc
 586 0000 80B5     		push	{r7, lr}
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 7, -8
 589              		.cfi_offset 14, -4
 590 0002 00AF     		add	r7, sp, #0
 591              		.cfi_def_cfa_register 7
 792:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return (CY_GET_REG16(EFFECTOR_PWM_CAPTURE_LSB_PTR));
 592              		.loc 1 792 0
 593 0004 024B     		ldr	r3, .L46
 594 0006 1B88     		ldrh	r3, [r3]
 595 0008 9BB2     		uxth	r3, r3
 793:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 596              		.loc 1 793 0
 597 000a 181C     		mov	r0, r3
 598 000c BD46     		mov	sp, r7
 599              		@ sp needed
 600 000e 80BD     		pop	{r7, pc}
 601              	.L47:
 602              		.align	2
 603              	.L46:
 604 0010 A0100F40 		.word	1074729120
 605              		.cfi_endproc
 606              	.LFE13:
 607              		.size	EFFECTOR_PWM_ReadCapture, .-EFFECTOR_PWM_ReadCapture
 608              		.section	.text.EFFECTOR_PWM_ReadCompare,"ax",%progbits
 609              		.align	2
 610              		.global	EFFECTOR_PWM_ReadCompare
 611              		.code	16
 612              		.thumb_func
 613              		.type	EFFECTOR_PWM_ReadCompare, %function
 614              	EFFECTOR_PWM_ReadCompare:
 615              	.LFB14:
 794:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 795:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* (!EFFECTOR_PWM_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 797:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 798:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (EFFECTOR_PWM_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 800:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 801:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadCompare
 803:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 805:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 806:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 809:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 26


 810:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 811:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 812:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 813:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 815:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint16 EFFECTOR_PWM_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 616              		.loc 1 817 0
 617              		.cfi_startproc
 618 0000 80B5     		push	{r7, lr}
 619              		.cfi_def_cfa_offset 8
 620              		.cfi_offset 7, -8
 621              		.cfi_offset 14, -4
 622 0002 00AF     		add	r7, sp, #0
 623              		.cfi_def_cfa_register 7
 818:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(EFFECTOR_PWM_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             return ((uint16)CY_GET_REG16(EFFECTOR_PWM_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
 821:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             return (CY_GET_REG16(EFFECTOR_PWM_COMPARE1_LSB_PTR));
 624              		.loc 1 821 0
 625 0004 024B     		ldr	r3, .L50
 626 0006 1B88     		ldrh	r3, [r3]
 627 0008 9BB2     		uxth	r3, r3
 822:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 628              		.loc 1 823 0
 629 000a 181C     		mov	r0, r3
 630 000c BD46     		mov	sp, r7
 631              		@ sp needed
 632 000e 80BD     		pop	{r7, pc}
 633              	.L51:
 634              		.align	2
 635              	.L50:
 636 0010 40100F40 		.word	1074729024
 637              		.cfi_endproc
 638              	.LFE14:
 639              		.size	EFFECTOR_PWM_ReadCompare, .-EFFECTOR_PWM_ReadCompare
 640              		.section	.text.EFFECTOR_PWM_ReadPeriod,"ax",%progbits
 641              		.align	2
 642              		.global	EFFECTOR_PWM_ReadPeriod
 643              		.code	16
 644              		.thumb_func
 645              		.type	EFFECTOR_PWM_ReadPeriod, %function
 646              	EFFECTOR_PWM_ReadPeriod:
 647              	.LFB15:
 824:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 825:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #else
 826:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 827:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 828:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadCompare1
 830:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 832:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 833:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 27


 835:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 837:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 838:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 839:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 841:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint16 EFFECTOR_PWM_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 844:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return (CY_GET_REG16(EFFECTOR_PWM_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 846:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 847:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 848:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadCompare2
 850:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 852:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 853:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 855:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 857:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 858:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 859:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 861:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint16 EFFECTOR_PWM_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 864:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return (CY_GET_REG16(EFFECTOR_PWM_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 866:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 867:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* (EFFECTOR_PWM_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 869:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 870:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Function Name: EFFECTOR_PWM_ReadPeriod
 872:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 874:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Summary:
 875:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 877:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Parameters:
 878:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
 879:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 880:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Return:
 881:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 883:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** uint16 EFFECTOR_PWM_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** {
 648              		.loc 1 885 0
 649              		.cfi_startproc
 650 0000 80B5     		push	{r7, lr}
 651              		.cfi_def_cfa_offset 8
 652              		.cfi_offset 7, -8
 653              		.cfi_offset 14, -4
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 28


 654 0002 00AF     		add	r7, sp, #0
 655              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if(EFFECTOR_PWM_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return ((uint16)CY_GET_REG16(EFFECTOR_PWM_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #else
 889:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return (CY_GET_REG16(EFFECTOR_PWM_PERIOD_LSB_PTR));
 656              		.loc 1 889 0
 657 0004 024B     		ldr	r3, .L54
 658 0006 1B88     		ldrh	r3, [r3]
 659 0008 9BB2     		uxth	r3, r3
 890:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** }
 660              		.loc 1 891 0
 661 000a 181C     		mov	r0, r3
 662 000c BD46     		mov	sp, r7
 663              		@ sp needed
 664 000e 80BD     		pop	{r7, pc}
 665              	.L55:
 666              		.align	2
 667              	.L54:
 668 0010 80100F40 		.word	1074729088
 669              		.cfi_endproc
 670              	.LFE15:
 671              		.size	EFFECTOR_PWM_ReadPeriod, .-EFFECTOR_PWM_ReadPeriod
 672              		.text
 673              	.Letext0:
 674              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 675              		.section	.debug_info,"",%progbits
 676              	.Ldebug_info0:
 677 0000 9A020000 		.4byte	0x29a
 678 0004 0400     		.2byte	0x4
 679 0006 00000000 		.4byte	.Ldebug_abbrev0
 680 000a 04       		.byte	0x4
 681 000b 01       		.uleb128 0x1
 682 000c A5000000 		.4byte	.LASF40
 683 0010 01       		.byte	0x1
 684 0011 CE020000 		.4byte	.LASF41
 685 0015 2C010000 		.4byte	.LASF42
 686 0019 00000000 		.4byte	.Ldebug_ranges0+0
 687 001d 00000000 		.4byte	0
 688 0021 00000000 		.4byte	.Ldebug_line0
 689 0025 02       		.uleb128 0x2
 690 0026 01       		.byte	0x1
 691 0027 06       		.byte	0x6
 692 0028 6C030000 		.4byte	.LASF0
 693 002c 02       		.uleb128 0x2
 694 002d 01       		.byte	0x1
 695 002e 08       		.byte	0x8
 696 002f 7B010000 		.4byte	.LASF1
 697 0033 02       		.uleb128 0x2
 698 0034 02       		.byte	0x2
 699 0035 05       		.byte	0x5
 700 0036 0B020000 		.4byte	.LASF2
 701 003a 02       		.uleb128 0x2
 702 003b 02       		.byte	0x2
 703 003c 07       		.byte	0x7
 704 003d 5C000000 		.4byte	.LASF3
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 29


 705 0041 02       		.uleb128 0x2
 706 0042 04       		.byte	0x4
 707 0043 05       		.byte	0x5
 708 0044 45030000 		.4byte	.LASF4
 709 0048 02       		.uleb128 0x2
 710 0049 04       		.byte	0x4
 711 004a 07       		.byte	0x7
 712 004b 8E010000 		.4byte	.LASF5
 713 004f 02       		.uleb128 0x2
 714 0050 08       		.byte	0x8
 715 0051 05       		.byte	0x5
 716 0052 9E020000 		.4byte	.LASF6
 717 0056 02       		.uleb128 0x2
 718 0057 08       		.byte	0x8
 719 0058 07       		.byte	0x7
 720 0059 72020000 		.4byte	.LASF7
 721 005d 03       		.uleb128 0x3
 722 005e 04       		.byte	0x4
 723 005f 05       		.byte	0x5
 724 0060 696E7400 		.ascii	"int\000"
 725 0064 02       		.uleb128 0x2
 726 0065 04       		.byte	0x4
 727 0066 07       		.byte	0x7
 728 0067 65020000 		.4byte	.LASF8
 729 006b 04       		.uleb128 0x4
 730 006c A0010000 		.4byte	.LASF9
 731 0070 02       		.byte	0x2
 732 0071 A1       		.byte	0xa1
 733 0072 2C000000 		.4byte	0x2c
 734 0076 04       		.uleb128 0x4
 735 0077 15020000 		.4byte	.LASF10
 736 007b 02       		.byte	0x2
 737 007c A2       		.byte	0xa2
 738 007d 3A000000 		.4byte	0x3a
 739 0081 02       		.uleb128 0x2
 740 0082 04       		.byte	0x4
 741 0083 04       		.byte	0x4
 742 0084 9F000000 		.4byte	.LASF11
 743 0088 02       		.uleb128 0x2
 744 0089 08       		.byte	0x8
 745 008a 04       		.byte	0x4
 746 008b 04020000 		.4byte	.LASF12
 747 008f 02       		.uleb128 0x2
 748 0090 01       		.byte	0x1
 749 0091 08       		.byte	0x8
 750 0092 4E030000 		.4byte	.LASF13
 751 0096 05       		.uleb128 0x5
 752 0097 89010000 		.4byte	.LASF14
 753 009b 02       		.byte	0x2
 754 009c 4B01     		.2byte	0x14b
 755 009e A2000000 		.4byte	0xa2
 756 00a2 06       		.uleb128 0x6
 757 00a3 6B000000 		.4byte	0x6b
 758 00a7 05       		.uleb128 0x5
 759 00a8 00000000 		.4byte	.LASF15
 760 00ac 02       		.byte	0x2
 761 00ad 4C01     		.2byte	0x14c
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 30


 762 00af B3000000 		.4byte	0xb3
 763 00b3 06       		.uleb128 0x6
 764 00b4 76000000 		.4byte	0x76
 765 00b8 02       		.uleb128 0x2
 766 00b9 04       		.byte	0x4
 767 00ba 07       		.byte	0x7
 768 00bb 95020000 		.4byte	.LASF16
 769 00bf 07       		.uleb128 0x7
 770 00c0 F6020000 		.4byte	.LASF19
 771 00c4 01       		.byte	0x1
 772 00c5 37       		.byte	0x37
 773 00c6 00000000 		.4byte	.LFB0
 774 00ca 24000000 		.4byte	.LFE0-.LFB0
 775 00ce 01       		.uleb128 0x1
 776 00cf 9C       		.byte	0x9c
 777 00d0 08       		.uleb128 0x8
 778 00d1 A0030000 		.4byte	.LASF22
 779 00d5 01       		.byte	0x1
 780 00d6 54       		.byte	0x54
 781 00d7 00000000 		.4byte	.LFB1
 782 00db A4000000 		.4byte	.LFE1-.LFB1
 783 00df 01       		.uleb128 0x1
 784 00e0 9C       		.byte	0x9c
 785 00e1 02010000 		.4byte	0x102
 786 00e5 09       		.uleb128 0x9
 787 00e6 90020000 		.4byte	.LASF17
 788 00ea 01       		.byte	0x1
 789 00eb 57       		.byte	0x57
 790 00ec 6B000000 		.4byte	0x6b
 791 00f0 02       		.uleb128 0x2
 792 00f1 91       		.byte	0x91
 793 00f2 6F       		.sleb128 -17
 794 00f3 09       		.uleb128 0x9
 795 00f4 06000000 		.4byte	.LASF18
 796 00f8 01       		.byte	0x1
 797 00f9 5D       		.byte	0x5d
 798 00fa 6B000000 		.4byte	0x6b
 799 00fe 02       		.uleb128 0x2
 800 00ff 91       		.byte	0x91
 801 0100 6E       		.sleb128 -18
 802 0101 00       		.byte	0
 803 0102 0A       		.uleb128 0xa
 804 0103 BA020000 		.4byte	.LASF20
 805 0107 01       		.byte	0x1
 806 0108 C7       		.byte	0xc7
 807 0109 00000000 		.4byte	.LFB2
 808 010d 20000000 		.4byte	.LFE2-.LFB2
 809 0111 01       		.uleb128 0x1
 810 0112 9C       		.byte	0x9c
 811 0113 0A       		.uleb128 0xa
 812 0114 53020000 		.4byte	.LASF21
 813 0118 01       		.byte	0x1
 814 0119 E9       		.byte	0xe9
 815 011a 00000000 		.4byte	.LFB3
 816 011e 1C000000 		.4byte	.LFE3-.LFB3
 817 0122 01       		.uleb128 0x1
 818 0123 9C       		.byte	0x9c
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 31


 819 0124 0B       		.uleb128 0xb
 820 0125 22000000 		.4byte	.LASF23
 821 0129 01       		.byte	0x1
 822 012a 9301     		.2byte	0x193
 823 012c 00000000 		.4byte	.LFB4
 824 0130 20000000 		.4byte	.LFE4-.LFB4
 825 0134 01       		.uleb128 0x1
 826 0135 9C       		.byte	0x9c
 827 0136 4A010000 		.4byte	0x14a
 828 013a 0C       		.uleb128 0xc
 829 013b FC010000 		.4byte	.LASF26
 830 013f 01       		.byte	0x1
 831 0140 9301     		.2byte	0x193
 832 0142 76000000 		.4byte	0x76
 833 0146 02       		.uleb128 0x2
 834 0147 91       		.byte	0x91
 835 0148 76       		.sleb128 -10
 836 0149 00       		.byte	0
 837 014a 0D       		.uleb128 0xd
 838 014b 86000000 		.4byte	.LASF32
 839 014f 01       		.byte	0x1
 840 0150 A901     		.2byte	0x1a9
 841 0152 76000000 		.4byte	0x76
 842 0156 00000000 		.4byte	.LFB5
 843 015a 1C000000 		.4byte	.LFE5-.LFB5
 844 015e 01       		.uleb128 0x1
 845 015f 9C       		.byte	0x9c
 846 0160 0E       		.uleb128 0xe
 847 0161 6F000000 		.4byte	.LASF24
 848 0165 01       		.byte	0x1
 849 0166 C501     		.2byte	0x1c5
 850 0168 00000000 		.4byte	.LFB6
 851 016c 1C000000 		.4byte	.LFE6-.LFB6
 852 0170 01       		.uleb128 0x1
 853 0171 9C       		.byte	0x9c
 854 0172 0B       		.uleb128 0xb
 855 0173 3A020000 		.4byte	.LASF25
 856 0177 01       		.byte	0x1
 857 0178 E201     		.2byte	0x1e2
 858 017a 00000000 		.4byte	.LFB7
 859 017e 20000000 		.4byte	.LFE7-.LFB7
 860 0182 01       		.uleb128 0x1
 861 0183 9C       		.byte	0x9c
 862 0184 98010000 		.4byte	0x198
 863 0188 0C       		.uleb128 0xc
 864 0189 55000000 		.4byte	.LASF27
 865 018d 01       		.byte	0x1
 866 018e E201     		.2byte	0x1e2
 867 0190 76000000 		.4byte	0x76
 868 0194 02       		.uleb128 0x2
 869 0195 91       		.byte	0x91
 870 0196 76       		.sleb128 -10
 871 0197 00       		.byte	0
 872 0198 0B       		.uleb128 0xb
 873 0199 09030000 		.4byte	.LASF28
 874 019d 01       		.byte	0x1
 875 019e 0402     		.2byte	0x204
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 32


 876 01a0 00000000 		.4byte	.LFB8
 877 01a4 20000000 		.4byte	.LFE8-.LFB8
 878 01a8 01       		.uleb128 0x1
 879 01a9 9C       		.byte	0x9c
 880 01aa BE010000 		.4byte	0x1be
 881 01ae 0C       		.uleb128 0xc
 882 01af 78030000 		.4byte	.LASF29
 883 01b3 01       		.byte	0x1
 884 01b4 0402     		.2byte	0x204
 885 01b6 76000000 		.4byte	0x76
 886 01ba 02       		.uleb128 0x2
 887 01bb 91       		.byte	0x91
 888 01bc 76       		.sleb128 -10
 889 01bd 00       		.byte	0
 890 01be 0B       		.uleb128 0xb
 891 01bf 1C020000 		.4byte	.LASF30
 892 01c3 01       		.byte	0x1
 893 01c4 AC02     		.2byte	0x2ac
 894 01c6 00000000 		.4byte	.LFB9
 895 01ca 20000000 		.4byte	.LFE9-.LFB9
 896 01ce 01       		.uleb128 0x1
 897 01cf 9C       		.byte	0x9c
 898 01d0 E4010000 		.4byte	0x1e4
 899 01d4 0C       		.uleb128 0xc
 900 01d5 AC020000 		.4byte	.LASF31
 901 01d9 01       		.byte	0x1
 902 01da AC02     		.2byte	0x2ac
 903 01dc 6B000000 		.4byte	0x6b
 904 01e0 02       		.uleb128 0x2
 905 01e1 91       		.byte	0x91
 906 01e2 77       		.sleb128 -9
 907 01e3 00       		.byte	0
 908 01e4 0D       		.uleb128 0xd
 909 01e5 80030000 		.4byte	.LASF33
 910 01e9 01       		.byte	0x1
 911 01ea C702     		.2byte	0x2c7
 912 01ec 6B000000 		.4byte	0x6b
 913 01f0 00000000 		.4byte	.LFB10
 914 01f4 14000000 		.4byte	.LFE10-.LFB10
 915 01f8 01       		.uleb128 0x1
 916 01f9 9C       		.byte	0x9c
 917 01fa 0F       		.uleb128 0xf
 918 01fb DB010000 		.4byte	.LASF43
 919 01ff 01       		.byte	0x1
 920 0200 E102     		.2byte	0x2e1
 921 0202 6B000000 		.4byte	0x6b
 922 0206 00000000 		.4byte	.LFB11
 923 020a 20000000 		.4byte	.LFE11-.LFB11
 924 020e 01       		.uleb128 0x1
 925 020f 9C       		.byte	0x9c
 926 0210 24020000 		.4byte	0x224
 927 0214 10       		.uleb128 0x10
 928 0215 89020000 		.4byte	.LASF34
 929 0219 01       		.byte	0x1
 930 021a E302     		.2byte	0x2e3
 931 021c 6B000000 		.4byte	0x6b
 932 0220 02       		.uleb128 0x2
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 33


 933 0221 91       		.byte	0x91
 934 0222 77       		.sleb128 -9
 935 0223 00       		.byte	0
 936 0224 0B       		.uleb128 0xb
 937 0225 23030000 		.4byte	.LASF35
 938 0229 01       		.byte	0x1
 939 022a FD02     		.2byte	0x2fd
 940 022c 00000000 		.4byte	.LFB12
 941 0230 20000000 		.4byte	.LFE12-.LFB12
 942 0234 01       		.uleb128 0x1
 943 0235 9C       		.byte	0x9c
 944 0236 4A020000 		.4byte	0x24a
 945 023a 0C       		.uleb128 0xc
 946 023b A6010000 		.4byte	.LASF36
 947 023f 01       		.byte	0x1
 948 0240 FD02     		.2byte	0x2fd
 949 0242 6B000000 		.4byte	0x6b
 950 0246 02       		.uleb128 0x2
 951 0247 91       		.byte	0x91
 952 0248 77       		.sleb128 -9
 953 0249 00       		.byte	0
 954 024a 0D       		.uleb128 0xd
 955 024b 3C000000 		.4byte	.LASF37
 956 024f 01       		.byte	0x1
 957 0250 1603     		.2byte	0x316
 958 0252 76000000 		.4byte	0x76
 959 0256 00000000 		.4byte	.LFB13
 960 025a 14000000 		.4byte	.LFE13-.LFB13
 961 025e 01       		.uleb128 0x1
 962 025f 9C       		.byte	0x9c
 963 0260 0D       		.uleb128 0xd
 964 0261 53030000 		.4byte	.LASF38
 965 0265 01       		.byte	0x1
 966 0266 3003     		.2byte	0x330
 967 0268 76000000 		.4byte	0x76
 968 026c 00000000 		.4byte	.LFB14
 969 0270 14000000 		.4byte	.LFE14-.LFB14
 970 0274 01       		.uleb128 0x1
 971 0275 9C       		.byte	0x9c
 972 0276 0D       		.uleb128 0xd
 973 0277 AE010000 		.4byte	.LASF39
 974 027b 01       		.byte	0x1
 975 027c 7403     		.2byte	0x374
 976 027e 76000000 		.4byte	0x76
 977 0282 00000000 		.4byte	.LFB15
 978 0286 14000000 		.4byte	.LFE15-.LFB15
 979 028a 01       		.uleb128 0x1
 980 028b 9C       		.byte	0x9c
 981 028c 11       		.uleb128 0x11
 982 028d C6010000 		.4byte	.LASF44
 983 0291 01       		.byte	0x1
 984 0292 20       		.byte	0x20
 985 0293 6B000000 		.4byte	0x6b
 986 0297 05       		.uleb128 0x5
 987 0298 03       		.byte	0x3
 988 0299 00000000 		.4byte	EFFECTOR_PWM_initVar
 989 029d 00       		.byte	0
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 34


 990              		.section	.debug_abbrev,"",%progbits
 991              	.Ldebug_abbrev0:
 992 0000 01       		.uleb128 0x1
 993 0001 11       		.uleb128 0x11
 994 0002 01       		.byte	0x1
 995 0003 25       		.uleb128 0x25
 996 0004 0E       		.uleb128 0xe
 997 0005 13       		.uleb128 0x13
 998 0006 0B       		.uleb128 0xb
 999 0007 03       		.uleb128 0x3
 1000 0008 0E       		.uleb128 0xe
 1001 0009 1B       		.uleb128 0x1b
 1002 000a 0E       		.uleb128 0xe
 1003 000b 55       		.uleb128 0x55
 1004 000c 17       		.uleb128 0x17
 1005 000d 11       		.uleb128 0x11
 1006 000e 01       		.uleb128 0x1
 1007 000f 10       		.uleb128 0x10
 1008 0010 17       		.uleb128 0x17
 1009 0011 00       		.byte	0
 1010 0012 00       		.byte	0
 1011 0013 02       		.uleb128 0x2
 1012 0014 24       		.uleb128 0x24
 1013 0015 00       		.byte	0
 1014 0016 0B       		.uleb128 0xb
 1015 0017 0B       		.uleb128 0xb
 1016 0018 3E       		.uleb128 0x3e
 1017 0019 0B       		.uleb128 0xb
 1018 001a 03       		.uleb128 0x3
 1019 001b 0E       		.uleb128 0xe
 1020 001c 00       		.byte	0
 1021 001d 00       		.byte	0
 1022 001e 03       		.uleb128 0x3
 1023 001f 24       		.uleb128 0x24
 1024 0020 00       		.byte	0
 1025 0021 0B       		.uleb128 0xb
 1026 0022 0B       		.uleb128 0xb
 1027 0023 3E       		.uleb128 0x3e
 1028 0024 0B       		.uleb128 0xb
 1029 0025 03       		.uleb128 0x3
 1030 0026 08       		.uleb128 0x8
 1031 0027 00       		.byte	0
 1032 0028 00       		.byte	0
 1033 0029 04       		.uleb128 0x4
 1034 002a 16       		.uleb128 0x16
 1035 002b 00       		.byte	0
 1036 002c 03       		.uleb128 0x3
 1037 002d 0E       		.uleb128 0xe
 1038 002e 3A       		.uleb128 0x3a
 1039 002f 0B       		.uleb128 0xb
 1040 0030 3B       		.uleb128 0x3b
 1041 0031 0B       		.uleb128 0xb
 1042 0032 49       		.uleb128 0x49
 1043 0033 13       		.uleb128 0x13
 1044 0034 00       		.byte	0
 1045 0035 00       		.byte	0
 1046 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 35


 1047 0037 16       		.uleb128 0x16
 1048 0038 00       		.byte	0
 1049 0039 03       		.uleb128 0x3
 1050 003a 0E       		.uleb128 0xe
 1051 003b 3A       		.uleb128 0x3a
 1052 003c 0B       		.uleb128 0xb
 1053 003d 3B       		.uleb128 0x3b
 1054 003e 05       		.uleb128 0x5
 1055 003f 49       		.uleb128 0x49
 1056 0040 13       		.uleb128 0x13
 1057 0041 00       		.byte	0
 1058 0042 00       		.byte	0
 1059 0043 06       		.uleb128 0x6
 1060 0044 35       		.uleb128 0x35
 1061 0045 00       		.byte	0
 1062 0046 49       		.uleb128 0x49
 1063 0047 13       		.uleb128 0x13
 1064 0048 00       		.byte	0
 1065 0049 00       		.byte	0
 1066 004a 07       		.uleb128 0x7
 1067 004b 2E       		.uleb128 0x2e
 1068 004c 00       		.byte	0
 1069 004d 3F       		.uleb128 0x3f
 1070 004e 19       		.uleb128 0x19
 1071 004f 03       		.uleb128 0x3
 1072 0050 0E       		.uleb128 0xe
 1073 0051 3A       		.uleb128 0x3a
 1074 0052 0B       		.uleb128 0xb
 1075 0053 3B       		.uleb128 0x3b
 1076 0054 0B       		.uleb128 0xb
 1077 0055 27       		.uleb128 0x27
 1078 0056 19       		.uleb128 0x19
 1079 0057 11       		.uleb128 0x11
 1080 0058 01       		.uleb128 0x1
 1081 0059 12       		.uleb128 0x12
 1082 005a 06       		.uleb128 0x6
 1083 005b 40       		.uleb128 0x40
 1084 005c 18       		.uleb128 0x18
 1085 005d 9642     		.uleb128 0x2116
 1086 005f 19       		.uleb128 0x19
 1087 0060 00       		.byte	0
 1088 0061 00       		.byte	0
 1089 0062 08       		.uleb128 0x8
 1090 0063 2E       		.uleb128 0x2e
 1091 0064 01       		.byte	0x1
 1092 0065 3F       		.uleb128 0x3f
 1093 0066 19       		.uleb128 0x19
 1094 0067 03       		.uleb128 0x3
 1095 0068 0E       		.uleb128 0xe
 1096 0069 3A       		.uleb128 0x3a
 1097 006a 0B       		.uleb128 0xb
 1098 006b 3B       		.uleb128 0x3b
 1099 006c 0B       		.uleb128 0xb
 1100 006d 27       		.uleb128 0x27
 1101 006e 19       		.uleb128 0x19
 1102 006f 11       		.uleb128 0x11
 1103 0070 01       		.uleb128 0x1
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 36


 1104 0071 12       		.uleb128 0x12
 1105 0072 06       		.uleb128 0x6
 1106 0073 40       		.uleb128 0x40
 1107 0074 18       		.uleb128 0x18
 1108 0075 9642     		.uleb128 0x2116
 1109 0077 19       		.uleb128 0x19
 1110 0078 01       		.uleb128 0x1
 1111 0079 13       		.uleb128 0x13
 1112 007a 00       		.byte	0
 1113 007b 00       		.byte	0
 1114 007c 09       		.uleb128 0x9
 1115 007d 34       		.uleb128 0x34
 1116 007e 00       		.byte	0
 1117 007f 03       		.uleb128 0x3
 1118 0080 0E       		.uleb128 0xe
 1119 0081 3A       		.uleb128 0x3a
 1120 0082 0B       		.uleb128 0xb
 1121 0083 3B       		.uleb128 0x3b
 1122 0084 0B       		.uleb128 0xb
 1123 0085 49       		.uleb128 0x49
 1124 0086 13       		.uleb128 0x13
 1125 0087 02       		.uleb128 0x2
 1126 0088 18       		.uleb128 0x18
 1127 0089 00       		.byte	0
 1128 008a 00       		.byte	0
 1129 008b 0A       		.uleb128 0xa
 1130 008c 2E       		.uleb128 0x2e
 1131 008d 00       		.byte	0
 1132 008e 3F       		.uleb128 0x3f
 1133 008f 19       		.uleb128 0x19
 1134 0090 03       		.uleb128 0x3
 1135 0091 0E       		.uleb128 0xe
 1136 0092 3A       		.uleb128 0x3a
 1137 0093 0B       		.uleb128 0xb
 1138 0094 3B       		.uleb128 0x3b
 1139 0095 0B       		.uleb128 0xb
 1140 0096 27       		.uleb128 0x27
 1141 0097 19       		.uleb128 0x19
 1142 0098 11       		.uleb128 0x11
 1143 0099 01       		.uleb128 0x1
 1144 009a 12       		.uleb128 0x12
 1145 009b 06       		.uleb128 0x6
 1146 009c 40       		.uleb128 0x40
 1147 009d 18       		.uleb128 0x18
 1148 009e 9742     		.uleb128 0x2117
 1149 00a0 19       		.uleb128 0x19
 1150 00a1 00       		.byte	0
 1151 00a2 00       		.byte	0
 1152 00a3 0B       		.uleb128 0xb
 1153 00a4 2E       		.uleb128 0x2e
 1154 00a5 01       		.byte	0x1
 1155 00a6 3F       		.uleb128 0x3f
 1156 00a7 19       		.uleb128 0x19
 1157 00a8 03       		.uleb128 0x3
 1158 00a9 0E       		.uleb128 0xe
 1159 00aa 3A       		.uleb128 0x3a
 1160 00ab 0B       		.uleb128 0xb
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 37


 1161 00ac 3B       		.uleb128 0x3b
 1162 00ad 05       		.uleb128 0x5
 1163 00ae 27       		.uleb128 0x27
 1164 00af 19       		.uleb128 0x19
 1165 00b0 11       		.uleb128 0x11
 1166 00b1 01       		.uleb128 0x1
 1167 00b2 12       		.uleb128 0x12
 1168 00b3 06       		.uleb128 0x6
 1169 00b4 40       		.uleb128 0x40
 1170 00b5 18       		.uleb128 0x18
 1171 00b6 9742     		.uleb128 0x2117
 1172 00b8 19       		.uleb128 0x19
 1173 00b9 01       		.uleb128 0x1
 1174 00ba 13       		.uleb128 0x13
 1175 00bb 00       		.byte	0
 1176 00bc 00       		.byte	0
 1177 00bd 0C       		.uleb128 0xc
 1178 00be 05       		.uleb128 0x5
 1179 00bf 00       		.byte	0
 1180 00c0 03       		.uleb128 0x3
 1181 00c1 0E       		.uleb128 0xe
 1182 00c2 3A       		.uleb128 0x3a
 1183 00c3 0B       		.uleb128 0xb
 1184 00c4 3B       		.uleb128 0x3b
 1185 00c5 05       		.uleb128 0x5
 1186 00c6 49       		.uleb128 0x49
 1187 00c7 13       		.uleb128 0x13
 1188 00c8 02       		.uleb128 0x2
 1189 00c9 18       		.uleb128 0x18
 1190 00ca 00       		.byte	0
 1191 00cb 00       		.byte	0
 1192 00cc 0D       		.uleb128 0xd
 1193 00cd 2E       		.uleb128 0x2e
 1194 00ce 00       		.byte	0
 1195 00cf 3F       		.uleb128 0x3f
 1196 00d0 19       		.uleb128 0x19
 1197 00d1 03       		.uleb128 0x3
 1198 00d2 0E       		.uleb128 0xe
 1199 00d3 3A       		.uleb128 0x3a
 1200 00d4 0B       		.uleb128 0xb
 1201 00d5 3B       		.uleb128 0x3b
 1202 00d6 05       		.uleb128 0x5
 1203 00d7 27       		.uleb128 0x27
 1204 00d8 19       		.uleb128 0x19
 1205 00d9 49       		.uleb128 0x49
 1206 00da 13       		.uleb128 0x13
 1207 00db 11       		.uleb128 0x11
 1208 00dc 01       		.uleb128 0x1
 1209 00dd 12       		.uleb128 0x12
 1210 00de 06       		.uleb128 0x6
 1211 00df 40       		.uleb128 0x40
 1212 00e0 18       		.uleb128 0x18
 1213 00e1 9742     		.uleb128 0x2117
 1214 00e3 19       		.uleb128 0x19
 1215 00e4 00       		.byte	0
 1216 00e5 00       		.byte	0
 1217 00e6 0E       		.uleb128 0xe
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 38


 1218 00e7 2E       		.uleb128 0x2e
 1219 00e8 00       		.byte	0
 1220 00e9 3F       		.uleb128 0x3f
 1221 00ea 19       		.uleb128 0x19
 1222 00eb 03       		.uleb128 0x3
 1223 00ec 0E       		.uleb128 0xe
 1224 00ed 3A       		.uleb128 0x3a
 1225 00ee 0B       		.uleb128 0xb
 1226 00ef 3B       		.uleb128 0x3b
 1227 00f0 05       		.uleb128 0x5
 1228 00f1 27       		.uleb128 0x27
 1229 00f2 19       		.uleb128 0x19
 1230 00f3 11       		.uleb128 0x11
 1231 00f4 01       		.uleb128 0x1
 1232 00f5 12       		.uleb128 0x12
 1233 00f6 06       		.uleb128 0x6
 1234 00f7 40       		.uleb128 0x40
 1235 00f8 18       		.uleb128 0x18
 1236 00f9 9642     		.uleb128 0x2116
 1237 00fb 19       		.uleb128 0x19
 1238 00fc 00       		.byte	0
 1239 00fd 00       		.byte	0
 1240 00fe 0F       		.uleb128 0xf
 1241 00ff 2E       		.uleb128 0x2e
 1242 0100 01       		.byte	0x1
 1243 0101 3F       		.uleb128 0x3f
 1244 0102 19       		.uleb128 0x19
 1245 0103 03       		.uleb128 0x3
 1246 0104 0E       		.uleb128 0xe
 1247 0105 3A       		.uleb128 0x3a
 1248 0106 0B       		.uleb128 0xb
 1249 0107 3B       		.uleb128 0x3b
 1250 0108 05       		.uleb128 0x5
 1251 0109 27       		.uleb128 0x27
 1252 010a 19       		.uleb128 0x19
 1253 010b 49       		.uleb128 0x49
 1254 010c 13       		.uleb128 0x13
 1255 010d 11       		.uleb128 0x11
 1256 010e 01       		.uleb128 0x1
 1257 010f 12       		.uleb128 0x12
 1258 0110 06       		.uleb128 0x6
 1259 0111 40       		.uleb128 0x40
 1260 0112 18       		.uleb128 0x18
 1261 0113 9742     		.uleb128 0x2117
 1262 0115 19       		.uleb128 0x19
 1263 0116 01       		.uleb128 0x1
 1264 0117 13       		.uleb128 0x13
 1265 0118 00       		.byte	0
 1266 0119 00       		.byte	0
 1267 011a 10       		.uleb128 0x10
 1268 011b 34       		.uleb128 0x34
 1269 011c 00       		.byte	0
 1270 011d 03       		.uleb128 0x3
 1271 011e 0E       		.uleb128 0xe
 1272 011f 3A       		.uleb128 0x3a
 1273 0120 0B       		.uleb128 0xb
 1274 0121 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 39


 1275 0122 05       		.uleb128 0x5
 1276 0123 49       		.uleb128 0x49
 1277 0124 13       		.uleb128 0x13
 1278 0125 02       		.uleb128 0x2
 1279 0126 18       		.uleb128 0x18
 1280 0127 00       		.byte	0
 1281 0128 00       		.byte	0
 1282 0129 11       		.uleb128 0x11
 1283 012a 34       		.uleb128 0x34
 1284 012b 00       		.byte	0
 1285 012c 03       		.uleb128 0x3
 1286 012d 0E       		.uleb128 0xe
 1287 012e 3A       		.uleb128 0x3a
 1288 012f 0B       		.uleb128 0xb
 1289 0130 3B       		.uleb128 0x3b
 1290 0131 0B       		.uleb128 0xb
 1291 0132 49       		.uleb128 0x49
 1292 0133 13       		.uleb128 0x13
 1293 0134 3F       		.uleb128 0x3f
 1294 0135 19       		.uleb128 0x19
 1295 0136 02       		.uleb128 0x2
 1296 0137 18       		.uleb128 0x18
 1297 0138 00       		.byte	0
 1298 0139 00       		.byte	0
 1299 013a 00       		.byte	0
 1300              		.section	.debug_aranges,"",%progbits
 1301 0000 94000000 		.4byte	0x94
 1302 0004 0200     		.2byte	0x2
 1303 0006 00000000 		.4byte	.Ldebug_info0
 1304 000a 04       		.byte	0x4
 1305 000b 00       		.byte	0
 1306 000c 0000     		.2byte	0
 1307 000e 0000     		.2byte	0
 1308 0010 00000000 		.4byte	.LFB0
 1309 0014 24000000 		.4byte	.LFE0-.LFB0
 1310 0018 00000000 		.4byte	.LFB1
 1311 001c A4000000 		.4byte	.LFE1-.LFB1
 1312 0020 00000000 		.4byte	.LFB2
 1313 0024 20000000 		.4byte	.LFE2-.LFB2
 1314 0028 00000000 		.4byte	.LFB3
 1315 002c 1C000000 		.4byte	.LFE3-.LFB3
 1316 0030 00000000 		.4byte	.LFB4
 1317 0034 20000000 		.4byte	.LFE4-.LFB4
 1318 0038 00000000 		.4byte	.LFB5
 1319 003c 1C000000 		.4byte	.LFE5-.LFB5
 1320 0040 00000000 		.4byte	.LFB6
 1321 0044 1C000000 		.4byte	.LFE6-.LFB6
 1322 0048 00000000 		.4byte	.LFB7
 1323 004c 20000000 		.4byte	.LFE7-.LFB7
 1324 0050 00000000 		.4byte	.LFB8
 1325 0054 20000000 		.4byte	.LFE8-.LFB8
 1326 0058 00000000 		.4byte	.LFB9
 1327 005c 20000000 		.4byte	.LFE9-.LFB9
 1328 0060 00000000 		.4byte	.LFB10
 1329 0064 14000000 		.4byte	.LFE10-.LFB10
 1330 0068 00000000 		.4byte	.LFB11
 1331 006c 20000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 40


 1332 0070 00000000 		.4byte	.LFB12
 1333 0074 20000000 		.4byte	.LFE12-.LFB12
 1334 0078 00000000 		.4byte	.LFB13
 1335 007c 14000000 		.4byte	.LFE13-.LFB13
 1336 0080 00000000 		.4byte	.LFB14
 1337 0084 14000000 		.4byte	.LFE14-.LFB14
 1338 0088 00000000 		.4byte	.LFB15
 1339 008c 14000000 		.4byte	.LFE15-.LFB15
 1340 0090 00000000 		.4byte	0
 1341 0094 00000000 		.4byte	0
 1342              		.section	.debug_ranges,"",%progbits
 1343              	.Ldebug_ranges0:
 1344 0000 00000000 		.4byte	.LFB0
 1345 0004 24000000 		.4byte	.LFE0
 1346 0008 00000000 		.4byte	.LFB1
 1347 000c A4000000 		.4byte	.LFE1
 1348 0010 00000000 		.4byte	.LFB2
 1349 0014 20000000 		.4byte	.LFE2
 1350 0018 00000000 		.4byte	.LFB3
 1351 001c 1C000000 		.4byte	.LFE3
 1352 0020 00000000 		.4byte	.LFB4
 1353 0024 20000000 		.4byte	.LFE4
 1354 0028 00000000 		.4byte	.LFB5
 1355 002c 1C000000 		.4byte	.LFE5
 1356 0030 00000000 		.4byte	.LFB6
 1357 0034 1C000000 		.4byte	.LFE6
 1358 0038 00000000 		.4byte	.LFB7
 1359 003c 20000000 		.4byte	.LFE7
 1360 0040 00000000 		.4byte	.LFB8
 1361 0044 20000000 		.4byte	.LFE8
 1362 0048 00000000 		.4byte	.LFB9
 1363 004c 20000000 		.4byte	.LFE9
 1364 0050 00000000 		.4byte	.LFB10
 1365 0054 14000000 		.4byte	.LFE10
 1366 0058 00000000 		.4byte	.LFB11
 1367 005c 20000000 		.4byte	.LFE11
 1368 0060 00000000 		.4byte	.LFB12
 1369 0064 20000000 		.4byte	.LFE12
 1370 0068 00000000 		.4byte	.LFB13
 1371 006c 14000000 		.4byte	.LFE13
 1372 0070 00000000 		.4byte	.LFB14
 1373 0074 14000000 		.4byte	.LFE14
 1374 0078 00000000 		.4byte	.LFB15
 1375 007c 14000000 		.4byte	.LFE15
 1376 0080 00000000 		.4byte	0
 1377 0084 00000000 		.4byte	0
 1378              		.section	.debug_line,"",%progbits
 1379              	.Ldebug_line0:
 1380 0000 92010000 		.section	.debug_str,"MS",%progbits,1
 1380      02004B00 
 1380      00000201 
 1380      FB0E0D00 
 1380      01010101 
 1381              	.LASF15:
 1382 0000 72656731 		.ascii	"reg16\000"
 1382      3600
 1383              	.LASF18:
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 41


 1384 0006 45464645 		.ascii	"EFFECTOR_PWM_interruptState\000"
 1384      43544F52 
 1384      5F50574D 
 1384      5F696E74 
 1384      65727275 
 1385              	.LASF23:
 1386 0022 45464645 		.ascii	"EFFECTOR_PWM_WriteCounter\000"
 1386      43544F52 
 1386      5F50574D 
 1386      5F577269 
 1386      7465436F 
 1387              	.LASF37:
 1388 003c 45464645 		.ascii	"EFFECTOR_PWM_ReadCapture\000"
 1388      43544F52 
 1388      5F50574D 
 1388      5F526561 
 1388      64436170 
 1389              	.LASF27:
 1390 0055 70657269 		.ascii	"period\000"
 1390      6F6400
 1391              	.LASF3:
 1392 005c 73686F72 		.ascii	"short unsigned int\000"
 1392      7420756E 
 1392      7369676E 
 1392      65642069 
 1392      6E7400
 1393              	.LASF24:
 1394 006f 45464645 		.ascii	"EFFECTOR_PWM_ClearFIFO\000"
 1394      43544F52 
 1394      5F50574D 
 1394      5F436C65 
 1394      61724649 
 1395              	.LASF32:
 1396 0086 45464645 		.ascii	"EFFECTOR_PWM_ReadCounter\000"
 1396      43544F52 
 1396      5F50574D 
 1396      5F526561 
 1396      64436F75 
 1397              	.LASF11:
 1398 009f 666C6F61 		.ascii	"float\000"
 1398      7400
 1399              	.LASF40:
 1400 00a5 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1400      4320342E 
 1400      382E3420 
 1400      32303134 
 1400      30353236 
 1401 00d8 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1401      20726576 
 1401      6973696F 
 1401      6E203231 
 1401      31333538 
 1402 010b 30202D73 		.ascii	"0 -std=gnu99 -ffunction-sections\000"
 1402      74643D67 
 1402      6E753939 
 1402      202D6666 
 1402      756E6374 
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 42


 1403              	.LASF42:
 1404 012c 433A5C55 		.ascii	"C:\\Users\\Matt\\repos\\BYU_Mars_Rover\\arm_control"
 1404      73657273 
 1404      5C4D6174 
 1404      745C7265 
 1404      706F735C 
 1405 015a 6C65725F 		.ascii	"ler_v2\\arm_controller_v2.1.cydsn\000"
 1405      76325C61 
 1405      726D5F63 
 1405      6F6E7472 
 1405      6F6C6C65 
 1406              	.LASF1:
 1407 017b 756E7369 		.ascii	"unsigned char\000"
 1407      676E6564 
 1407      20636861 
 1407      7200
 1408              	.LASF14:
 1409 0189 72656738 		.ascii	"reg8\000"
 1409      00
 1410              	.LASF5:
 1411 018e 6C6F6E67 		.ascii	"long unsigned int\000"
 1411      20756E73 
 1411      69676E65 
 1411      6420696E 
 1411      7400
 1412              	.LASF9:
 1413 01a0 75696E74 		.ascii	"uint8\000"
 1413      3800
 1414              	.LASF36:
 1415 01a6 636F6E74 		.ascii	"control\000"
 1415      726F6C00 
 1416              	.LASF39:
 1417 01ae 45464645 		.ascii	"EFFECTOR_PWM_ReadPeriod\000"
 1417      43544F52 
 1417      5F50574D 
 1417      5F526561 
 1417      64506572 
 1418              	.LASF44:
 1419 01c6 45464645 		.ascii	"EFFECTOR_PWM_initVar\000"
 1419      43544F52 
 1419      5F50574D 
 1419      5F696E69 
 1419      74566172 
 1420              	.LASF43:
 1421 01db 45464645 		.ascii	"EFFECTOR_PWM_ReadControlRegister\000"
 1421      43544F52 
 1421      5F50574D 
 1421      5F526561 
 1421      64436F6E 
 1422              	.LASF26:
 1423 01fc 636F756E 		.ascii	"counter\000"
 1423      74657200 
 1424              	.LASF12:
 1425 0204 646F7562 		.ascii	"double\000"
 1425      6C6500
 1426              	.LASF2:
 1427 020b 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 43


 1427      7420696E 
 1427      7400
 1428              	.LASF10:
 1429 0215 75696E74 		.ascii	"uint16\000"
 1429      313600
 1430              	.LASF30:
 1431 021c 45464645 		.ascii	"EFFECTOR_PWM_SetInterruptMode\000"
 1431      43544F52 
 1431      5F50574D 
 1431      5F536574 
 1431      496E7465 
 1432              	.LASF25:
 1433 023a 45464645 		.ascii	"EFFECTOR_PWM_WritePeriod\000"
 1433      43544F52 
 1433      5F50574D 
 1433      5F577269 
 1433      74655065 
 1434              	.LASF21:
 1435 0253 45464645 		.ascii	"EFFECTOR_PWM_Stop\000"
 1435      43544F52 
 1435      5F50574D 
 1435      5F53746F 
 1435      7000
 1436              	.LASF8:
 1437 0265 756E7369 		.ascii	"unsigned int\000"
 1437      676E6564 
 1437      20696E74 
 1437      00
 1438              	.LASF7:
 1439 0272 6C6F6E67 		.ascii	"long long unsigned int\000"
 1439      206C6F6E 
 1439      6720756E 
 1439      7369676E 
 1439      65642069 
 1440              	.LASF34:
 1441 0289 72657375 		.ascii	"result\000"
 1441      6C7400
 1442              	.LASF17:
 1443 0290 6374726C 		.ascii	"ctrl\000"
 1443      00
 1444              	.LASF16:
 1445 0295 73697A65 		.ascii	"sizetype\000"
 1445      74797065 
 1445      00
 1446              	.LASF6:
 1447 029e 6C6F6E67 		.ascii	"long long int\000"
 1447      206C6F6E 
 1447      6720696E 
 1447      7400
 1448              	.LASF31:
 1449 02ac 696E7465 		.ascii	"interruptMode\000"
 1449      72727570 
 1449      744D6F64 
 1449      6500
 1450              	.LASF20:
 1451 02ba 45464645 		.ascii	"EFFECTOR_PWM_Enable\000"
 1451      43544F52 
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 44


 1451      5F50574D 
 1451      5F456E61 
 1451      626C6500 
 1452              	.LASF41:
 1453 02ce 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\EFFECTOR_PWM.c\000"
 1453      6E657261 
 1453      7465645F 
 1453      536F7572 
 1453      63655C50 
 1454              	.LASF19:
 1455 02f6 45464645 		.ascii	"EFFECTOR_PWM_Start\000"
 1455      43544F52 
 1455      5F50574D 
 1455      5F537461 
 1455      727400
 1456              	.LASF28:
 1457 0309 45464645 		.ascii	"EFFECTOR_PWM_WriteCompare\000"
 1457      43544F52 
 1457      5F50574D 
 1457      5F577269 
 1457      7465436F 
 1458              	.LASF35:
 1459 0323 45464645 		.ascii	"EFFECTOR_PWM_WriteControlRegister\000"
 1459      43544F52 
 1459      5F50574D 
 1459      5F577269 
 1459      7465436F 
 1460              	.LASF4:
 1461 0345 6C6F6E67 		.ascii	"long int\000"
 1461      20696E74 
 1461      00
 1462              	.LASF13:
 1463 034e 63686172 		.ascii	"char\000"
 1463      00
 1464              	.LASF38:
 1465 0353 45464645 		.ascii	"EFFECTOR_PWM_ReadCompare\000"
 1465      43544F52 
 1465      5F50574D 
 1465      5F526561 
 1465      64436F6D 
 1466              	.LASF0:
 1467 036c 7369676E 		.ascii	"signed char\000"
 1467      65642063 
 1467      68617200 
 1468              	.LASF29:
 1469 0378 636F6D70 		.ascii	"compare\000"
 1469      61726500 
 1470              	.LASF33:
 1471 0380 45464645 		.ascii	"EFFECTOR_PWM_ReadStatusRegister\000"
 1471      43544F52 
 1471      5F50574D 
 1471      5F526561 
 1471      64537461 
 1472              	.LASF22:
 1473 03a0 45464645 		.ascii	"EFFECTOR_PWM_Init\000"
 1473      43544F52 
 1473      5F50574D 
ARM GAS  C:\Users\Matt\AppData\Local\Temp\ccKFDzfQ.s 			page 45


 1473      5F496E69 
 1473      7400
 1474              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br

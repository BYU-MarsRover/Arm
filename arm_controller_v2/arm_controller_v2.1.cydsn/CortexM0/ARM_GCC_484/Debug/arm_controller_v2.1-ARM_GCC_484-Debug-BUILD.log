--------------- Build Started: 03/09/2015 17:00:50 Project: arm_controller_v2.1, Configuration: ARM GCC 4.8.4 Debug ---------------
The code generation step is up to date.
arm-none-eabi-gcc.exe -mcpu=cortex-m0 -mthumb -Wno-main -I. -I.\Generated_Source\PSoC4 -Wa,-alh=.\CortexM0\ARM_GCC_484\Debug/main.lst -g -D DEBUG -Wall -ffunction-sections -O0 -std=gnu99 -c .\main.c -o .\CortexM0\ARM_GCC_484\Debug\main.o
.\main.c: In function 'main':
.\main.c:880:9: warning: unused variable 'direction' [-Wunused-variable]
     int direction = 0;
         ^
arm-none-eabi-ar.exe -rs .\CortexM0\ARM_GCC_484\Debug\arm_controller_v2.1.a .\CortexM0\ARM_GCC_484\Debug\cyfitter_cfg.o .\CortexM0\ARM_GCC_484\Debug\Clock_counter.o .\CortexM0\ARM_GCC_484\Debug\Clock_pwm.o .\CortexM0\ARM_GCC_484\Debug\Bootloadable_1.o .\CortexM0\ARM_GCC_484\Debug\isr_1.o .\CortexM0\ARM_GCC_484\Debug\Timer_1.o .\CortexM0\ARM_GCC_484\Debug\Timer_1_PM.o .\CortexM0\ARM_GCC_484\Debug\CyBootAsmGnu.o .\CortexM0\ARM_GCC_484\Debug\CyFlash.o .\CortexM0\ARM_GCC_484\Debug\CyLib.o .\CortexM0\ARM_GCC_484\Debug\cyPm.o .\CortexM0\ARM_GCC_484\Debug\cyutils.o .\CortexM0\ARM_GCC_484\Debug\UART_1.o .\CortexM0\ARM_GCC_484\Debug\UART_1_SPI_UART.o .\CortexM0\ARM_GCC_484\Debug\UART_1_SPI_UART_INT.o .\CortexM0\ARM_GCC_484\Debug\UART_1_PM.o .\CortexM0\ARM_GCC_484\Debug\UART_1_UART.o .\CortexM0\ARM_GCC_484\Debug\UART_1_BOOT.o .\CortexM0\ARM_GCC_484\Debug\UART_1_UART_BOOT.o .\CortexM0\ARM_GCC_484\Debug\UART_1_SCBCLK.o .\CortexM0\ARM_GCC_484\Debug\UART_1_tx.o .\CortexM0\ARM_GCC_484\Debug\UART_1_rx.o .\CortexM0\ARM_GCC_484\Debug\WIZ_RDY.o .\CortexM0\ARM_GCC_484\Debug\WIZ_INT.o .\CortexM0\ARM_GCC_484\Debug\WIZ_RST.o .\CortexM0\ARM_GCC_484\Debug\WIZ_SS.o .\CortexM0\ARM_GCC_484\Debug\elbow.o .\CortexM0\ARM_GCC_484\Debug\baseAzimuth.o .\CortexM0\ARM_GCC_484\Debug\ADC.o .\CortexM0\ARM_GCC_484\Debug\ADC_PM.o .\CortexM0\ARM_GCC_484\Debug\ADC_INT.o .\CortexM0\ARM_GCC_484\Debug\pot_elbow.o .\CortexM0\ARM_GCC_484\Debug\pot_shoulder.o .\CortexM0\ARM_GCC_484\Debug\ADC_IRQ.o .\CortexM0\ARM_GCC_484\Debug\ADC_intClock.o .\CortexM0\ARM_GCC_484\Debug\shoulder.o .\CortexM0\ARM_GCC_484\Debug\SPI_1.o .\CortexM0\ARM_GCC_484\Debug\SPI_1_SPI_UART.o .\CortexM0\ARM_GCC_484\Debug\SPI_1_PM.o .\CortexM0\ARM_GCC_484\Debug\SPI_1_SPI.o .\CortexM0\ARM_GCC_484\Debug\SPI_1_BOOT.o .\CortexM0\ARM_GCC_484\Debug\SPI_1_SPI_BOOT.o .\CortexM0\ARM_GCC_484\Debug\SPI_1_SCBCLK.o .\CortexM0\ARM_GCC_484\Debug\SPI_1_ss_s.o .\CortexM0\ARM_GCC_484\Debug\SPI_1_miso_s.o .\CortexM0\ARM_GCC_484\Debug\SPI_1_sclk_s.o .\CortexM0\ARM_GCC_484\Debug\SPI_1_mosi_s.o .\CortexM0\ARM_GCC_484\Debug\user_test.o .\CortexM0\ARM_GCC_484\Debug\BA_PWM.o .\CortexM0\ARM_GCC_484\Debug\BA_PWM_PM.o .\CortexM0\ARM_GCC_484\Debug\ELBW_PWM.o .\CortexM0\ARM_GCC_484\Debug\ELBW_PWM_PM.o .\CortexM0\ARM_GCC_484\Debug\SHLDR_PWM.o .\CortexM0\ARM_GCC_484\Debug\SHLDR_PWM_PM.o
arm-none-eabi-ar.exe: creating .\CortexM0\ARM_GCC_484\Debug\arm_controller_v2.1.a
arm-none-eabi-gcc.exe -Wl,--start-group -o .\CortexM0\ARM_GCC_484\Debug\arm_controller_v2.1.elf .\CortexM0\ARM_GCC_484\Debug\main.o .\CortexM0\ARM_GCC_484\Debug\spi.o .\CortexM0\ARM_GCC_484\Debug\wiznet5500.o .\CortexM0\ARM_GCC_484\Debug\cybootloader.o .\CortexM0\ARM_GCC_484\Debug\cymetadata.o .\CortexM0\ARM_GCC_484\Debug\Cm0Start.o .\CortexM0\ARM_GCC_484\Debug\arm_controller_v2.1.a "C:\Program Files (x86)\Cypress\PSoC Creator\3.1\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\CortexM0\ARM_GCC_484\Debug\CyComponentLibrary.a" -mthumb -march=armv6-m -Wl,-Map,.\CortexM0\ARM_GCC_484\Debug/arm_controller_v2.1.map -T .\Generated_Source\PSoC4\cm0gcc.ld -g -specs=nano.specs "-u _printf_float" "" -Wl,--gc-sections -Wl,--end-group
cyelftool.exe -B C:\Users\Samuel\Documents\GitHub\BYU-MarsRover\Arm\arm_controller_v2\arm_controller_v2.1.cydsn\CortexM0\ARM_GCC_484\Debug\arm_controller_v2.1.elf --flash_row_size 128 --flash_size 32768 --flash_array_size 32768
cyelftool.exe -S C:\Users\Samuel\Documents\GitHub\BYU-MarsRover\Arm\arm_controller_v2\arm_controller_v2.1.cydsn\CortexM0\ARM_GCC_484\Debug\arm_controller_v2.1.elf
Flash used: 12368 of 32768 bytes (37.7 %). Bootloader: 3840 bytes. Application: 8528 bytes
SRAM used: 1832 of 4096 bytes (44.7 %). Stack: 1024 bytes. Heap: 128 bytes.
--------------- Build Succeeded: 03/09/2015 17:00:54 ---------------

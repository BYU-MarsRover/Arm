ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"wiznet5500.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.transferSPI,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	transferSPI, %function
  22              	transferSPI:
  23              	.LFB33:
  24              		.file 1 ".\\spi.h"
   1:.\spi.h       **** #ifndef CYPRESS_ROVER_SPI_DEF_H
   2:.\spi.h       **** #define CYPRESS_ROVER_SPI_DEF_H
   3:.\spi.h       **** 
   4:.\spi.h       **** #include <project.h>
   5:.\spi.h       **** #include <stdint.h>
   6:.\spi.h       **** 
   7:.\spi.h       **** // Trying the C99 Definition, as per http://www.greenend.org.uk/rjk/tech/inline.html
   8:.\spi.h       **** // inline uint8_t transferSPI(uint8_t);
   9:.\spi.h       **** 
  10:.\spi.h       **** 
  11:.\spi.h       **** // Try defining the whole thing in the header:
  12:.\spi.h       **** // inline uint8_t transferSPI(uint8_t data){ // This results in compile failure, must be static
  13:.\spi.h       **** static inline uint8_t transferSPI(uint8_t data){
  25              		.loc 1 13 0
  26              		.cfi_startproc
  27 0000 80B5     		push	{r7, lr}
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 7, -8
  30              		.cfi_offset 14, -4
  31 0002 82B0     		sub	sp, sp, #8
  32              		.cfi_def_cfa_offset 16
  33 0004 00AF     		add	r7, sp, #0
  34              		.cfi_def_cfa_register 7
  35 0006 021C     		mov	r2, r0
  36 0008 FB1D     		add	r3, r7, #7
  37 000a 1A70     		strb	r2, [r3]
  14:.\spi.h       **** 	SPIM_1_WriteTxData(data);//SPI_1_SpiUartWriteTxData(data);
  38              		.loc 1 14 0
  39 000c FB1D     		add	r3, r7, #7
  40 000e 1B78     		ldrb	r3, [r3]
  41 0010 181C     		mov	r0, r3
  42 0012 FFF7FEFF 		bl	SPIM_1_WriteTxData
  15:.\spi.h       **** 	while(!(SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE)); //SPI_1_SpiIsBusBusy()
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 2


  43              		.loc 1 15 0
  44 0016 C046     		mov	r8, r8
  45              	.L2:
  46              		.loc 1 15 0 is_stmt 0 discriminator 1
  47 0018 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
  48 001c 031C     		mov	r3, r0
  49 001e 1A1C     		mov	r2, r3
  50 0020 0123     		mov	r3, #1
  51 0022 1340     		and	r3, r2
  52 0024 F8D0     		beq	.L2
  16:.\spi.h       **** 	return( ((uint8_t) (SPIM_1_ReadRxData())) ); //SPI_1_SpiUartReadRxData()
  53              		.loc 1 16 0 is_stmt 1
  54 0026 FFF7FEFF 		bl	SPIM_1_ReadRxData
  55 002a 031C     		mov	r3, r0
  17:.\spi.h       **** }
  56              		.loc 1 17 0
  57 002c 181C     		mov	r0, r3
  58 002e BD46     		mov	sp, r7
  59 0030 02B0     		add	sp, sp, #8
  60              		@ sp needed
  61 0032 80BD     		pop	{r7, pc}
  62              		.cfi_endproc
  63              	.LFE33:
  64              		.size	transferSPI, .-transferSPI
  65              		.bss
  66              		.align	1
  67              	wiznetTxPointer:
  68 0000 0000     		.space	2
  69              		.align	1
  70              	wiznetRxPointer:
  71 0002 0000     		.space	2
  72              		.section	.rodata
  73              		.align	2
  74              	.LC0:
  75 0000 00       		.byte	0
  76 0001 C0       		.byte	-64
  77 0002 A8       		.byte	-88
  78 0003 01       		.byte	1
  79 0004 01       		.byte	1
  80 0005 FF       		.byte	-1
  81 0006 FF       		.byte	-1
  82 0007 FF       		.byte	-1
  83 0008 00       		.byte	0
  84 0009 00       		.byte	0
  85 000a 08       		.byte	8
  86 000b DC       		.byte	-36
  87 000c FF       		.byte	-1
  88 000d FF       		.byte	-1
  89 000e FF       		.byte	-1
  90 000f C0       		.byte	-64
  91 0010 A8       		.byte	-88
  92 0011 01       		.byte	1
  93 0012 FE       		.byte	-2
  94 0013 00       		.align	2
  95              	.LC1:
  96 0014 02       		.byte	2
  97 0015 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 3


  98 0016 FF       		.byte	-1
  99 0017 00       		.byte	0
 100 0018 FE       		.byte	-2
 101 0019 01       		.byte	1
 102 001a 00       		.byte	0
 103 001b 00       		.byte	0
 104 001c 00       		.byte	0
 105 001d 00       		.byte	0
 106 001e 00       		.byte	0
 107 001f 00       		.byte	0
 108 0020 C0       		.byte	-64
 109 0021 A8       		.byte	-88
 110 0022 01       		.byte	1
 111 0023 01       		.byte	1
 112 0024 69       		.byte	105
 113 0025 87       		.byte	-121
 114              		.section	.text.wiznetInit,"ax",%progbits
 115              		.align	2
 116              		.global	wiznetInit
 117              		.code	16
 118              		.thumb_func
 119              		.type	wiznetInit, %function
 120              	wiznetInit:
 121              	.LFB34:
 122              		.file 2 ".\\wiznet5500.c"
   1:.\wiznet5500.c **** // BYU Mars Rover WizNet Library
   2:.\wiznet5500.c **** // Authors:
   3:.\wiznet5500.c **** // 		Steve Carlson
   4:.\wiznet5500.c **** // 		<Your Name Here>
   5:.\wiznet5500.c **** 
   6:.\wiznet5500.c **** // Totally Bare-bones, written-in-24-hours.
   7:.\wiznet5500.c **** // Recommend using https://github.com/Wiznet/WIZ_Ethernet_Library later
   8:.\wiznet5500.c **** 
   9:.\wiznet5500.c **** #include <project.h>
  10:.\wiznet5500.c **** #include <stdint.h>
  11:.\wiznet5500.c **** #include "wiznet5500.h"
  12:.\wiznet5500.c **** #include "spi.h"
  13:.\wiznet5500.c **** // #include "rover_main.h" // For some reason, including this breaks it all. 
  14:.\wiznet5500.c **** // 		Only needed for the following macros:
  15:.\wiznet5500.c **** #define HIGH			1
  16:.\wiznet5500.c **** #define LOW				0
  17:.\wiznet5500.c **** 
  18:.\wiznet5500.c **** // Application-Scope Defines
  19:.\wiznet5500.c **** 
  20:.\wiznet5500.c **** #define WIZ_MAX_MESSAGE_SEGMENT		100
  21:.\wiznet5500.c **** 
  22:.\wiznet5500.c **** // Global Variables
  23:.\wiznet5500.c **** static uint16_t wiznetTxPointer;
  24:.\wiznet5500.c **** static uint16_t wiznetRxPointer;
  25:.\wiznet5500.c **** 
  26:.\wiznet5500.c **** uint8_t wiznetInit(uint8_t ownIpAddr, uint8_t dstIpAddr, uint16_t dstUdpPort){
 123              		.loc 2 26 0
 124              		.cfi_startproc
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 4


 129 0002 90B0     		sub	sp, sp, #64
 130              		.cfi_def_cfa_offset 72
 131 0004 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
 133 0006 FB1D     		add	r3, r7, #7
 134 0008 1870     		strb	r0, [r3]
 135 000a BB1D     		add	r3, r7, #6
 136 000c 1970     		strb	r1, [r3]
 137 000e 3B1D     		add	r3, r7, #4
 138 0010 1A80     		strh	r2, [r3]
  27:.\wiznet5500.c **** 	// This is terrible, need a better way.
  28:.\wiznet5500.c **** 	uint8_t cmdArray[] = {0x00,192u,168u,1u,1u,255u,255u,255u,0u,0x00,0x08,0xDC,0xFF,0xFF,0xFF,192u,16
 139              		.loc 2 28 0
 140 0012 3A1C     		mov	r2, r7
 141 0014 2832     		add	r2, r2, #40
 142 0016 524B     		ldr	r3, .L8
 143 0018 111C     		mov	r1, r2
 144 001a 1A1C     		mov	r2, r3
 145 001c 1323     		mov	r3, #19
 146 001e 081C     		mov	r0, r1
 147 0020 111C     		mov	r1, r2
 148 0022 1A1C     		mov	r2, r3
 149 0024 FFF7FEFF 		bl	memcpy
  29:.\wiznet5500.c **** 	//                    --- | Gateway Addr  | Subnet Mask     | WizNet's MAC Address        | WizNet
  30:.\wiznet5500.c **** 
  31:.\wiznet5500.c **** 	uint8_t udpConfig[] = {0x02,0x00,0xFF,0x00,0xFE,0x01,0x00,0x00,0x00,0x00,0x00,0x00,192u,168u,1u,1u
 150              		.loc 2 31 0
 151 0028 3A1C     		mov	r2, r7
 152 002a 1432     		add	r2, r2, #20
 153 002c 4D4B     		ldr	r3, .L8+4
 154 002e 111C     		mov	r1, r2
 155 0030 1A1C     		mov	r2, r3
 156 0032 1223     		mov	r3, #18
 157 0034 081C     		mov	r0, r1
 158 0036 111C     		mov	r1, r2
 159 0038 1A1C     		mov	r2, r3
 160 003a FFF7FEFF 		bl	memcpy
  32:.\wiznet5500.c **** 	//                     UDP |IDLE|Clr |----| :65025  |  No Dst Hw Address          | 192.168.1.1   
  33:.\wiznet5500.c **** 	
  34:.\wiznet5500.c **** 	
  35:.\wiznet5500.c **** 	// Destination IP Address Ending
  36:.\wiznet5500.c **** 	// cmdArray[4] = dstIpAddr; // Gateway should always be 192.168.1.1
  37:.\wiznet5500.c **** 	udpConfig[15] = dstIpAddr;
 161              		.loc 2 37 0
 162 003e 3B1C     		mov	r3, r7
 163 0040 1433     		add	r3, r3, #20
 164 0042 BA1D     		add	r2, r7, #6
 165 0044 1278     		ldrb	r2, [r2]
 166 0046 DA73     		strb	r2, [r3, #15]
  38:.\wiznet5500.c **** 	udpConfig[16] = dstUdpPort>>8;
 167              		.loc 2 38 0
 168 0048 3B1D     		add	r3, r7, #4
 169 004a 1B88     		ldrh	r3, [r3]
 170 004c 1B0A     		lsr	r3, r3, #8
 171 004e 9BB2     		uxth	r3, r3
 172 0050 DAB2     		uxtb	r2, r3
 173 0052 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 5


 174 0054 1433     		add	r3, r3, #20
 175 0056 1A74     		strb	r2, [r3, #16]
  39:.\wiznet5500.c **** 	udpConfig[17] = dstUdpPort&0xFF;
 176              		.loc 2 39 0
 177 0058 3B1D     		add	r3, r7, #4
 178 005a 1B88     		ldrh	r3, [r3]
 179 005c DAB2     		uxtb	r2, r3
 180 005e 3B1C     		mov	r3, r7
 181 0060 1433     		add	r3, r3, #20
 182 0062 5A74     		strb	r2, [r3, #17]
  40:.\wiznet5500.c **** 	
  41:.\wiznet5500.c **** 	// Learn Current MAC
  42:.\wiznet5500.c **** 	uint8_t wiznetOldMacAddr[6];
  43:.\wiznet5500.c **** 	wiznetReadArray(WIZNET_SHAR, WIZNET_BLK_COMMON, wiznetOldMacAddr, 6); // sizeof(wiznetOldMacAddr)
 183              		.loc 2 43 0
 184 0064 3B1C     		mov	r3, r7
 185 0066 0C33     		add	r3, r3, #12
 186 0068 0920     		mov	r0, #9
 187 006a 0021     		mov	r1, #0
 188 006c 1A1C     		mov	r2, r3
 189 006e 0623     		mov	r3, #6
 190 0070 FFF7FEFF 		bl	wiznetReadArray
  44:.\wiznet5500.c **** 	
  45:.\wiznet5500.c **** 	// WizNet Module IP Address Ending
  46:.\wiznet5500.c ****     cmdArray[17] = 10u;
 191              		.loc 2 46 0
 192 0074 3B1C     		mov	r3, r7
 193 0076 2833     		add	r3, r3, #40
 194 0078 0A22     		mov	r2, #10
 195 007a 5A74     		strb	r2, [r3, #17]
  47:.\wiznet5500.c **** 	cmdArray[18] = ownIpAddr;
 196              		.loc 2 47 0
 197 007c 3B1C     		mov	r3, r7
 198 007e 2833     		add	r3, r3, #40
 199 0080 FA1D     		add	r2, r7, #7
 200 0082 1278     		ldrb	r2, [r2]
 201 0084 9A74     		strb	r2, [r3, #18]
  48:.\wiznet5500.c **** 	
  49:.\wiznet5500.c **** 	// Ephemeral Port (WizNet's own UDP Port when sending UDP, usually value above 0xC000)
  50:.\wiznet5500.c **** 	// uint16_t ephemUdpPort = (0xC000 + ((wiznetOldMacAddr[5]*(1+ownIpAddr))&0x3FFF) ); //Nice way to
  51:.\wiznet5500.c **** 	// udpConfig[4] = ephemUdpPort>>8;
  52:.\wiznet5500.c **** 	// udpConfig[5] = ephemUdpPort&0xFF;
  53:.\wiznet5500.c **** 	
  54:.\wiznet5500.c **** 	udpConfig[4] = dstUdpPort>>8;
 202              		.loc 2 54 0
 203 0086 3B1D     		add	r3, r7, #4
 204 0088 1B88     		ldrh	r3, [r3]
 205 008a 1B0A     		lsr	r3, r3, #8
 206 008c 9BB2     		uxth	r3, r3
 207 008e DAB2     		uxtb	r2, r3
 208 0090 3B1C     		mov	r3, r7
 209 0092 1433     		add	r3, r3, #20
 210 0094 1A71     		strb	r2, [r3, #4]
  55:.\wiznet5500.c **** 	udpConfig[5] = dstUdpPort&0xFF;
 211              		.loc 2 55 0
 212 0096 3B1D     		add	r3, r7, #4
 213 0098 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 6


 214 009a DAB2     		uxtb	r2, r3
 215 009c 3B1C     		mov	r3, r7
 216 009e 1433     		add	r3, r3, #20
 217 00a0 5A71     		strb	r2, [r3, #5]
  56:.\wiznet5500.c **** 	
  57:.\wiznet5500.c **** 	// Write all the thus prepared values to the WizNet Module and Open the Socket
  58:.\wiznet5500.c **** 	wiznetWriteArray(WIZNET_MR,WIZNET_BLK_COMMON,cmdArray,sizeof(cmdArray));
 218              		.loc 2 58 0
 219 00a2 3B1C     		mov	r3, r7
 220 00a4 2833     		add	r3, r3, #40
 221 00a6 0020     		mov	r0, #0
 222 00a8 0021     		mov	r1, #0
 223 00aa 1A1C     		mov	r2, r3
 224 00ac 1323     		mov	r3, #19
 225 00ae FFF7FEFF 		bl	wiznetWriteArray
  59:.\wiznet5500.c **** 	wiznetWriteArray(WIZNET_Sn_MR,WIZNET_BLK_S0_REG,udpConfig,sizeof(udpConfig));
 226              		.loc 2 59 0
 227 00b2 3B1C     		mov	r3, r7
 228 00b4 1433     		add	r3, r3, #20
 229 00b6 0020     		mov	r0, #0
 230 00b8 0121     		mov	r1, #1
 231 00ba 1A1C     		mov	r2, r3
 232 00bc 1223     		mov	r3, #18
 233 00be FFF7FEFF 		bl	wiznetWriteArray
  60:.\wiznet5500.c **** 	wiznetWriteArray(WIZNET_SHAR,WIZNET_BLK_COMMON,wiznetOldMacAddr,6);
 234              		.loc 2 60 0
 235 00c2 3B1C     		mov	r3, r7
 236 00c4 0C33     		add	r3, r3, #12
 237 00c6 0920     		mov	r0, #9
 238 00c8 0021     		mov	r1, #0
 239 00ca 1A1C     		mov	r2, r3
 240 00cc 0623     		mov	r3, #6
 241 00ce FFF7FEFF 		bl	wiznetWriteArray
  61:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_MSSR,WIZNET_BLK_S0_REG,WIZ_MAX_MESSAGE_SEGMENT);
 242              		.loc 2 61 0
 243 00d2 1220     		mov	r0, #18
 244 00d4 0121     		mov	r1, #1
 245 00d6 6422     		mov	r2, #100
 246 00d8 FFF7FEFF 		bl	wiznetWrite16b
  62:.\wiznet5500.c **** 	CyDelay(100);
 247              		.loc 2 62 0
 248 00dc 6420     		mov	r0, #100
 249 00de FFF7FEFF 		bl	CyDelay
  63:.\wiznet5500.c **** 	wiznetOpen();
 250              		.loc 2 63 0
 251 00e2 FFF7FEFF 		bl	wiznetOpen
  64:.\wiznet5500.c **** 	
  65:.\wiznet5500.c **** 	// Configure Wiznet Interrupts
  66:.\wiznet5500.c **** 	wiznetConfigInterrupts(0x00,(WIZNET_Sn_IMR_SEND_OK | WIZNET_Sn_IMR_RECV) );
 252              		.loc 2 66 0
 253 00e6 0020     		mov	r0, #0
 254 00e8 1421     		mov	r1, #20
 255 00ea FFF7FEFF 		bl	wiznetConfigInterrupts
  67:.\wiznet5500.c **** 
  68:.\wiznet5500.c **** 	// Write sequential values to the TX Buffer, to know where on earth it is writing from.
  69:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 256              		.loc 2 69 0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 7


 257 00ee 0020     		mov	r0, #0
 258 00f0 FFF7FEFF 		bl	WIZ_SS_Write
  70:.\wiznet5500.c **** 		// Address Phase
  71:.\wiznet5500.c **** 		transferSPI(0>>8);
 259              		.loc 2 71 0
 260 00f4 0020     		mov	r0, #0
 261 00f6 FFF7FEFF 		bl	transferSPI
  72:.\wiznet5500.c **** 		transferSPI(0&0xFF);
 262              		.loc 2 72 0
 263 00fa 0020     		mov	r0, #0
 264 00fc FFF7FEFF 		bl	transferSPI
  73:.\wiznet5500.c **** 		
  74:.\wiznet5500.c **** 		// Control Phase
  75:.\wiznet5500.c **** 		transferSPI(((WIZNET_BLK_S0_TX&0x1F)<<3)|(0x01<<2)|0x00);		
 265              		.loc 2 75 0
 266 0100 1420     		mov	r0, #20
 267 0102 FFF7FEFF 		bl	transferSPI
 268              	.LBB2:
  76:.\wiznet5500.c **** 		
  77:.\wiznet5500.c **** 		// Data Phase
  78:.\wiznet5500.c **** 		for(uint16_t k=0; k<1024; k++){
 269              		.loc 2 78 0
 270 0106 3B1C     		mov	r3, r7
 271 0108 3E33     		add	r3, r3, #62
 272 010a 0022     		mov	r2, #0
 273 010c 1A80     		strh	r2, [r3]
 274 010e 16E0     		b	.L5
 275              	.L6:
  79:.\wiznet5500.c **** 			transferSPI((uint8_t)(k>>8));
 276              		.loc 2 79 0 discriminator 2
 277 0110 3B1C     		mov	r3, r7
 278 0112 3E33     		add	r3, r3, #62
 279 0114 1B88     		ldrh	r3, [r3]
 280 0116 1B0A     		lsr	r3, r3, #8
 281 0118 9BB2     		uxth	r3, r3
 282 011a DBB2     		uxtb	r3, r3
 283 011c 181C     		mov	r0, r3
 284 011e FFF7FEFF 		bl	transferSPI
  80:.\wiznet5500.c **** 			transferSPI((uint8_t)(k&0xFF));
 285              		.loc 2 80 0 discriminator 2
 286 0122 3B1C     		mov	r3, r7
 287 0124 3E33     		add	r3, r3, #62
 288 0126 1B88     		ldrh	r3, [r3]
 289 0128 DBB2     		uxtb	r3, r3
 290 012a 181C     		mov	r0, r3
 291 012c FFF7FEFF 		bl	transferSPI
  78:.\wiznet5500.c **** 		for(uint16_t k=0; k<1024; k++){
 292              		.loc 2 78 0 discriminator 2
 293 0130 3B1C     		mov	r3, r7
 294 0132 3E33     		add	r3, r3, #62
 295 0134 1A88     		ldrh	r2, [r3]
 296 0136 3B1C     		mov	r3, r7
 297 0138 3E33     		add	r3, r3, #62
 298 013a 0132     		add	r2, r2, #1
 299 013c 1A80     		strh	r2, [r3]
 300              	.L5:
  78:.\wiznet5500.c **** 		for(uint16_t k=0; k<1024; k++){
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 8


 301              		.loc 2 78 0 is_stmt 0 discriminator 1
 302 013e 3B1C     		mov	r3, r7
 303 0140 3E33     		add	r3, r3, #62
 304 0142 1A88     		ldrh	r2, [r3]
 305 0144 084B     		ldr	r3, .L8+8
 306 0146 9A42     		cmp	r2, r3
 307 0148 E2D9     		bls	.L6
 308              	.LBE2:
  81:.\wiznet5500.c **** 		}
  82:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 309              		.loc 2 82 0 is_stmt 1
 310 014a 0120     		mov	r0, #1
 311 014c FFF7FEFF 		bl	WIZ_SS_Write
  83:.\wiznet5500.c ****     
  84:.\wiznet5500.c ****     return wiznetOldMacAddr[5];
 312              		.loc 2 84 0
 313 0150 3B1C     		mov	r3, r7
 314 0152 0C33     		add	r3, r3, #12
 315 0154 5B79     		ldrb	r3, [r3, #5]
  85:.\wiznet5500.c **** }
 316              		.loc 2 85 0
 317 0156 181C     		mov	r0, r3
 318 0158 BD46     		mov	sp, r7
 319 015a 10B0     		add	sp, sp, #64
 320              		@ sp needed
 321 015c 80BD     		pop	{r7, pc}
 322              	.L9:
 323 015e C046     		.align	2
 324              	.L8:
 325 0160 00000000 		.word	.LC0
 326 0164 14000000 		.word	.LC1
 327 0168 FF030000 		.word	1023
 328              		.cfi_endproc
 329              	.LFE34:
 330              		.size	wiznetInit, .-wiznetInit
 331              		.section	.text.wiznetOpen,"ax",%progbits
 332              		.align	2
 333              		.global	wiznetOpen
 334              		.code	16
 335              		.thumb_func
 336              		.type	wiznetOpen, %function
 337              	wiznetOpen:
 338              	.LFB35:
  86:.\wiznet5500.c **** 
  87:.\wiznet5500.c **** // Public Functions
  88:.\wiznet5500.c **** void wiznetOpen(void){
 339              		.loc 2 88 0
 340              		.cfi_startproc
 341 0000 80B5     		push	{r7, lr}
 342              		.cfi_def_cfa_offset 8
 343              		.cfi_offset 7, -8
 344              		.cfi_offset 14, -4
 345 0002 00AF     		add	r7, sp, #0
 346              		.cfi_def_cfa_register 7
  89:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x01); // OPEN UDP on Socket 0
 347              		.loc 2 89 0
 348 0004 0120     		mov	r0, #1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 9


 349 0006 0121     		mov	r1, #1
 350 0008 0122     		mov	r2, #1
 351 000a FFF7FEFF 		bl	wiznetWrite8b
  90:.\wiznet5500.c **** }
 352              		.loc 2 90 0
 353 000e BD46     		mov	sp, r7
 354              		@ sp needed
 355 0010 80BD     		pop	{r7, pc}
 356              		.cfi_endproc
 357              	.LFE35:
 358              		.size	wiznetOpen, .-wiznetOpen
 359 0012 C046     		.section	.text.wiznetClose,"ax",%progbits
 360              		.align	2
 361              		.global	wiznetClose
 362              		.code	16
 363              		.thumb_func
 364              		.type	wiznetClose, %function
 365              	wiznetClose:
 366              	.LFB36:
  91:.\wiznet5500.c **** 
  92:.\wiznet5500.c **** void wiznetClose(void){
 367              		.loc 2 92 0
 368              		.cfi_startproc
 369 0000 80B5     		push	{r7, lr}
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 7, -8
 372              		.cfi_offset 14, -4
 373 0002 00AF     		add	r7, sp, #0
 374              		.cfi_def_cfa_register 7
  93:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x10); // Close UDP on Socket 0
 375              		.loc 2 93 0
 376 0004 0120     		mov	r0, #1
 377 0006 0121     		mov	r1, #1
 378 0008 1022     		mov	r2, #16
 379 000a FFF7FEFF 		bl	wiznetWrite8b
  94:.\wiznet5500.c **** }
 380              		.loc 2 94 0
 381 000e BD46     		mov	sp, r7
 382              		@ sp needed
 383 0010 80BD     		pop	{r7, pc}
 384              		.cfi_endproc
 385              	.LFE36:
 386              		.size	wiznetClose, .-wiznetClose
 387 0012 C046     		.section	.text.wiznetSend,"ax",%progbits
 388              		.align	2
 389              		.global	wiznetSend
 390              		.code	16
 391              		.thumb_func
 392              		.type	wiznetSend, %function
 393              	wiznetSend:
 394              	.LFB37:
  95:.\wiznet5500.c **** 
  96:.\wiznet5500.c **** void wiznetSend(void){
 395              		.loc 2 96 0
 396              		.cfi_startproc
 397 0000 80B5     		push	{r7, lr}
 398              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 10


 399              		.cfi_offset 7, -8
 400              		.cfi_offset 14, -4
 401 0002 00AF     		add	r7, sp, #0
 402              		.cfi_def_cfa_register 7
  97:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG,wiznetTxPointer);
 403              		.loc 2 97 0
 404 0004 0A4B     		ldr	r3, .L13
 405 0006 1B88     		ldrh	r3, [r3]
 406 0008 2420     		mov	r0, #36
 407 000a 0121     		mov	r1, #1
 408 000c 1A1C     		mov	r2, r3
 409 000e FFF7FEFF 		bl	wiznetWrite16b
  98:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x20);
 410              		.loc 2 98 0
 411 0012 0120     		mov	r0, #1
 412 0014 0121     		mov	r1, #1
 413 0016 2022     		mov	r2, #32
 414 0018 FFF7FEFF 		bl	wiznetWrite8b
  99:.\wiznet5500.c **** 	wiznetTxPointer = wiznetRead16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG);
 415              		.loc 2 99 0
 416 001c 2420     		mov	r0, #36
 417 001e 0121     		mov	r1, #1
 418 0020 FFF7FEFF 		bl	wiznetRead16b
 419 0024 031C     		mov	r3, r0
 420 0026 1A1C     		mov	r2, r3
 421 0028 014B     		ldr	r3, .L13
 422 002a 1A80     		strh	r2, [r3]
 100:.\wiznet5500.c **** }
 423              		.loc 2 100 0
 424 002c BD46     		mov	sp, r7
 425              		@ sp needed
 426 002e 80BD     		pop	{r7, pc}
 427              	.L14:
 428              		.align	2
 429              	.L13:
 430 0030 00000000 		.word	wiznetTxPointer
 431              		.cfi_endproc
 432              	.LFE37:
 433              		.size	wiznetSend, .-wiznetSend
 434              		.section	.text.wiznetReceive,"ax",%progbits
 435              		.align	2
 436              		.global	wiznetReceive
 437              		.code	16
 438              		.thumb_func
 439              		.type	wiznetReceive, %function
 440              	wiznetReceive:
 441              	.LFB38:
 101:.\wiznet5500.c **** 
 102:.\wiznet5500.c **** void wiznetReceive(void){
 442              		.loc 2 102 0
 443              		.cfi_startproc
 444 0000 80B5     		push	{r7, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 7, -8
 447              		.cfi_offset 14, -4
 448 0002 00AF     		add	r7, sp, #0
 449              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 11


 103:.\wiznet5500.c **** 	uint16_t recvSize;
 104:.\wiznet5500.c **** 	wiznetRxPointer = wiznetRead16b(WIZNET_Sn_RX_RD,WIZNET_BLK_S0_REG);
 450              		.loc 2 104 0
 451 0004 2820     		mov	r0, #40
 452 0006 0121     		mov	r1, #1
 453 0008 FFF7FEFF 		bl	wiznetRead16b
 454 000c 031C     		mov	r3, r0
 455 000e 1A1C     		mov	r2, r3
 456 0010 074B     		ldr	r3, .L16
 457 0012 1A80     		strh	r2, [r3]
 105:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x40);
 458              		.loc 2 105 0
 459 0014 0120     		mov	r0, #1
 460 0016 0121     		mov	r1, #1
 461 0018 4022     		mov	r2, #64
 462 001a FFF7FEFF 		bl	wiznetWrite8b
 106:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_RX_RD,WIZNET_BLK_S0_REG,wiznetRxPointer);
 463              		.loc 2 106 0
 464 001e 044B     		ldr	r3, .L16
 465 0020 1B88     		ldrh	r3, [r3]
 466 0022 2820     		mov	r0, #40
 467 0024 0121     		mov	r1, #1
 468 0026 1A1C     		mov	r2, r3
 469 0028 FFF7FEFF 		bl	wiznetWrite16b
 107:.\wiznet5500.c **** 	
 108:.\wiznet5500.c **** 	// printf(%u,wiznetRxPointer);
 109:.\wiznet5500.c **** }
 470              		.loc 2 109 0
 471 002c BD46     		mov	sp, r7
 472              		@ sp needed
 473 002e 80BD     		pop	{r7, pc}
 474              	.L17:
 475              		.align	2
 476              	.L16:
 477 0030 02000000 		.word	wiznetRxPointer
 478              		.cfi_endproc
 479              	.LFE38:
 480              		.size	wiznetReceive, .-wiznetReceive
 481              		.section	.text.wiznetClearInterrupts,"ax",%progbits
 482              		.align	2
 483              		.global	wiznetClearInterrupts
 484              		.code	16
 485              		.thumb_func
 486              		.type	wiznetClearInterrupts, %function
 487              	wiznetClearInterrupts:
 488              	.LFB39:
 110:.\wiznet5500.c **** 
 111:.\wiznet5500.c **** // void wiznetReceive(void){
 112:.\wiznet5500.c **** 	
 113:.\wiznet5500.c **** // }
 114:.\wiznet5500.c **** 
 115:.\wiznet5500.c **** // uint8_t wiznetReadInterrupts(void){
 116:.\wiznet5500.c **** // }
 117:.\wiznet5500.c **** 
 118:.\wiznet5500.c **** void wiznetClearInterrupts(void){
 489              		.loc 2 118 0
 490              		.cfi_startproc
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 12


 491 0000 80B5     		push	{r7, lr}
 492              		.cfi_def_cfa_offset 8
 493              		.cfi_offset 7, -8
 494              		.cfi_offset 14, -4
 495 0002 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 119:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_IR,WIZNET_BLK_S0_REG, 0xFF);
 497              		.loc 2 119 0
 498 0004 0220     		mov	r0, #2
 499 0006 0121     		mov	r1, #1
 500 0008 FF22     		mov	r2, #255
 501 000a FFF7FEFF 		bl	wiznetWrite8b
 120:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_SIR,WIZNET_BLK_COMMON, 0xFF);
 502              		.loc 2 120 0
 503 000e 1720     		mov	r0, #23
 504 0010 0021     		mov	r1, #0
 505 0012 FF22     		mov	r2, #255
 506 0014 FFF7FEFF 		bl	wiznetWrite8b
 121:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_IR,WIZNET_BLK_COMMON, 0xFF); // Counter-intuitive, but datasheet specifies wr
 507              		.loc 2 121 0
 508 0018 1520     		mov	r0, #21
 509 001a 0021     		mov	r1, #0
 510 001c FF22     		mov	r2, #255
 511 001e FFF7FEFF 		bl	wiznetWrite8b
 122:.\wiznet5500.c **** }
 512              		.loc 2 122 0
 513 0022 BD46     		mov	sp, r7
 514              		@ sp needed
 515 0024 80BD     		pop	{r7, pc}
 516              		.cfi_endproc
 517              	.LFE39:
 518              		.size	wiznetClearInterrupts, .-wiznetClearInterrupts
 519 0026 C046     		.section	.text.wiznetConfigInterrupts,"ax",%progbits
 520              		.align	2
 521              		.global	wiznetConfigInterrupts
 522              		.code	16
 523              		.thumb_func
 524              		.type	wiznetConfigInterrupts, %function
 525              	wiznetConfigInterrupts:
 526              	.LFB40:
 123:.\wiznet5500.c **** 
 124:.\wiznet5500.c **** void wiznetConfigInterrupts(uint8_t commonInt, uint8_t socketInt){
 527              		.loc 2 124 0
 528              		.cfi_startproc
 529 0000 80B5     		push	{r7, lr}
 530              		.cfi_def_cfa_offset 8
 531              		.cfi_offset 7, -8
 532              		.cfi_offset 14, -4
 533 0002 82B0     		sub	sp, sp, #8
 534              		.cfi_def_cfa_offset 16
 535 0004 00AF     		add	r7, sp, #0
 536              		.cfi_def_cfa_register 7
 537 0006 0A1C     		mov	r2, r1
 538 0008 FB1D     		add	r3, r7, #7
 539 000a 011C     		add	r1, r0, #0
 540 000c 1970     		strb	r1, [r3]
 541 000e BB1D     		add	r3, r7, #6
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 13


 542 0010 1A70     		strb	r2, [r3]
 125:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_IMR,WIZNET_BLK_S0_REG, socketInt);
 543              		.loc 2 125 0
 544 0012 BB1D     		add	r3, r7, #6
 545 0014 1B78     		ldrb	r3, [r3]
 546 0016 2C20     		mov	r0, #44
 547 0018 0121     		mov	r1, #1
 548 001a 1A1C     		mov	r2, r3
 549 001c FFF7FEFF 		bl	wiznetWrite8b
 126:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_SIMR,WIZNET_BLK_COMMON, 0x01); // Hardwired to just Socket 0
 550              		.loc 2 126 0
 551 0020 1820     		mov	r0, #24
 552 0022 0021     		mov	r1, #0
 553 0024 0122     		mov	r2, #1
 554 0026 FFF7FEFF 		bl	wiznetWrite8b
 127:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_IMR,WIZNET_BLK_COMMON, commonInt);
 555              		.loc 2 127 0
 556 002a FB1D     		add	r3, r7, #7
 557 002c 1B78     		ldrb	r3, [r3]
 558 002e 1620     		mov	r0, #22
 559 0030 0021     		mov	r1, #0
 560 0032 1A1C     		mov	r2, r3
 561 0034 FFF7FEFF 		bl	wiznetWrite8b
 128:.\wiznet5500.c **** }
 562              		.loc 2 128 0
 563 0038 BD46     		mov	sp, r7
 564 003a 02B0     		add	sp, sp, #8
 565              		@ sp needed
 566 003c 80BD     		pop	{r7, pc}
 567              		.cfi_endproc
 568              	.LFE40:
 569              		.size	wiznetConfigInterrupts, .-wiznetConfigInterrupts
 570 003e C046     		.section	.text.wiznetReadUdpFrame,"ax",%progbits
 571              		.align	2
 572              		.global	wiznetReadUdpFrame
 573              		.code	16
 574              		.thumb_func
 575              		.type	wiznetReadUdpFrame, %function
 576              	wiznetReadUdpFrame:
 577              	.LFB41:
 129:.\wiznet5500.c **** 
 130:.\wiznet5500.c **** uint16_t wiznetReadUdpFrame(uint8_t *array, uint8_t len){
 578              		.loc 2 130 0
 579              		.cfi_startproc
 580 0000 80B5     		push	{r7, lr}
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 584 0002 82B0     		sub	sp, sp, #8
 585              		.cfi_def_cfa_offset 16
 586 0004 00AF     		add	r7, sp, #0
 587              		.cfi_def_cfa_register 7
 588 0006 7860     		str	r0, [r7, #4]
 589 0008 0A1C     		mov	r2, r1
 590 000a FB1C     		add	r3, r7, #3
 591 000c 1A70     		strb	r2, [r3]
 131:.\wiznet5500.c **** 	wiznetReadArray(wiznetRxPointer, WIZNET_BLK_S0_RX, array, len);
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 14


 592              		.loc 2 131 0
 593 000e 114B     		ldr	r3, .L22
 594 0010 1988     		ldrh	r1, [r3]
 595 0012 7A68     		ldr	r2, [r7, #4]
 596 0014 FB1C     		add	r3, r7, #3
 597 0016 1B78     		ldrb	r3, [r3]
 598 0018 081C     		mov	r0, r1
 599 001a 0321     		mov	r1, #3
 600 001c FFF7FEFF 		bl	wiznetReadArray
 132:.\wiznet5500.c **** 	
 133:.\wiznet5500.c **** 	// uint16_t recvSize = 0;
 134:.\wiznet5500.c **** 	wiznetRxPointer = wiznetRead16b(WIZNET_Sn_RX_WR,WIZNET_BLK_S0_REG);
 601              		.loc 2 134 0
 602 0020 2A20     		mov	r0, #42
 603 0022 0121     		mov	r1, #1
 604 0024 FFF7FEFF 		bl	wiznetRead16b
 605 0028 031C     		mov	r3, r0
 606 002a 1A1C     		mov	r2, r3
 607 002c 094B     		ldr	r3, .L22
 608 002e 1A80     		strh	r2, [r3]
 135:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_RX_RD,WIZNET_BLK_S0_REG,wiznetRxPointer);
 609              		.loc 2 135 0
 610 0030 084B     		ldr	r3, .L22
 611 0032 1B88     		ldrh	r3, [r3]
 612 0034 2820     		mov	r0, #40
 613 0036 0121     		mov	r1, #1
 614 0038 1A1C     		mov	r2, r3
 615 003a FFF7FEFF 		bl	wiznetWrite16b
 136:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x40);
 616              		.loc 2 136 0
 617 003e 0120     		mov	r0, #1
 618 0040 0121     		mov	r1, #1
 619 0042 4022     		mov	r2, #64
 620 0044 FFF7FEFF 		bl	wiznetWrite8b
 137:.\wiznet5500.c **** 	return wiznetRxPointer;
 621              		.loc 2 137 0
 622 0048 024B     		ldr	r3, .L22
 623 004a 1B88     		ldrh	r3, [r3]
 138:.\wiznet5500.c **** 	// return recvSize;
 139:.\wiznet5500.c **** }
 624              		.loc 2 139 0
 625 004c 181C     		mov	r0, r3
 626 004e BD46     		mov	sp, r7
 627 0050 02B0     		add	sp, sp, #8
 628              		@ sp needed
 629 0052 80BD     		pop	{r7, pc}
 630              	.L23:
 631              		.align	2
 632              	.L22:
 633 0054 02000000 		.word	wiznetRxPointer
 634              		.cfi_endproc
 635              	.LFE41:
 636              		.size	wiznetReadUdpFrame, .-wiznetReadUdpFrame
 637              		.section	.text.wiznetWriteUdpFrame,"ax",%progbits
 638              		.align	2
 639              		.global	wiznetWriteUdpFrame
 640              		.code	16
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 15


 641              		.thumb_func
 642              		.type	wiznetWriteUdpFrame, %function
 643              	wiznetWriteUdpFrame:
 644              	.LFB42:
 140:.\wiznet5500.c **** 
 141:.\wiznet5500.c **** uint16_t wiznetWriteUdpFrame(uint8_t *array, uint8_t len){
 645              		.loc 2 141 0
 646              		.cfi_startproc
 647 0000 80B5     		push	{r7, lr}
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 7, -8
 650              		.cfi_offset 14, -4
 651 0002 82B0     		sub	sp, sp, #8
 652              		.cfi_def_cfa_offset 16
 653 0004 00AF     		add	r7, sp, #0
 654              		.cfi_def_cfa_register 7
 655 0006 7860     		str	r0, [r7, #4]
 656 0008 0A1C     		mov	r2, r1
 657 000a FB1C     		add	r3, r7, #3
 658 000c 1A70     		strb	r2, [r3]
 142:.\wiznet5500.c **** 	
 143:.\wiznet5500.c **** 	// wiznetTxPointer = wiznetRead16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG);
 144:.\wiznet5500.c **** 	// wiznetWriteArray(wiznetTxPointer,WIZNET_BLK_S0_TX,array,len);
 145:.\wiznet5500.c **** 	// wiznetTxPointer += len;																	
 146:.\wiznet5500.c **** 	// wiznetWrite16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG,wiznetTxPointer);
 147:.\wiznet5500.c **** 	
 148:.\wiznet5500.c **** 	// Re-ordered the above and put the pointer manip in the Send method due to fluke.
 149:.\wiznet5500.c **** 	wiznetWriteArray(wiznetTxPointer,WIZNET_BLK_S0_TX,array,len);
 659              		.loc 2 149 0
 660 000e 0C4B     		ldr	r3, .L26
 661 0010 1988     		ldrh	r1, [r3]
 662 0012 7A68     		ldr	r2, [r7, #4]
 663 0014 FB1C     		add	r3, r7, #3
 664 0016 1B78     		ldrb	r3, [r3]
 665 0018 081C     		mov	r0, r1
 666 001a 0221     		mov	r1, #2
 667 001c FFF7FEFF 		bl	wiznetWriteArray
 150:.\wiznet5500.c **** 	wiznetTxPointer += len;
 668              		.loc 2 150 0
 669 0020 FB1C     		add	r3, r7, #3
 670 0022 1B78     		ldrb	r3, [r3]
 671 0024 9AB2     		uxth	r2, r3
 672 0026 064B     		ldr	r3, .L26
 673 0028 1B88     		ldrh	r3, [r3]
 674 002a D318     		add	r3, r2, r3
 675 002c 9AB2     		uxth	r2, r3
 676 002e 044B     		ldr	r3, .L26
 677 0030 1A80     		strh	r2, [r3]
 151:.\wiznet5500.c **** 	
 152:.\wiznet5500.c **** 	// CyDelay(10); // These two lines proved that the fluke with the WizNet is not time-variant
 153:.\wiznet5500.c **** 	// wiznetRead16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG);
 154:.\wiznet5500.c **** 	return wiznetTxPointer;
 678              		.loc 2 154 0
 679 0032 034B     		ldr	r3, .L26
 680 0034 1B88     		ldrh	r3, [r3]
 155:.\wiznet5500.c **** }
 681              		.loc 2 155 0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 16


 682 0036 181C     		mov	r0, r3
 683 0038 BD46     		mov	sp, r7
 684 003a 02B0     		add	sp, sp, #8
 685              		@ sp needed
 686 003c 80BD     		pop	{r7, pc}
 687              	.L27:
 688 003e C046     		.align	2
 689              	.L26:
 690 0040 00000000 		.word	wiznetTxPointer
 691              		.cfi_endproc
 692              	.LFE42:
 693              		.size	wiznetWriteUdpFrame, .-wiznetWriteUdpFrame
 694              		.section	.rodata
 695 0026 0000     		.align	2
 696              	.LC8:
 697 0028 0A0900   		.ascii	"\012\011\000"
 698 002b 00       		.align	2
 699              	.LC10:
 700 002c 25580900 		.ascii	"%X\011\000"
 701              		.section	.text.wiznetPrintRegisters,"ax",%progbits
 702              		.align	2
 703              		.global	wiznetPrintRegisters
 704              		.code	16
 705              		.thumb_func
 706              		.type	wiznetPrintRegisters, %function
 707              	wiznetPrintRegisters:
 708              	.LFB43:
 156:.\wiznet5500.c **** 
 157:.\wiznet5500.c **** void wiznetPrintRegisters(uint8_t blkSelect){
 709              		.loc 2 157 0
 710              		.cfi_startproc
 711 0000 80B5     		push	{r7, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 C4B0     		sub	sp, sp, #272
 716              		.cfi_def_cfa_offset 280
 717 0004 00AF     		add	r7, sp, #0
 718              		.cfi_def_cfa_register 7
 719 0006 021C     		mov	r2, r0
 720 0008 444B     		ldr	r3, .L35
 721 000a 8821     		mov	r1, #136
 722 000c 4900     		lsl	r1, r1, #1
 723 000e C919     		add	r1, r1, r7
 724 0010 CB18     		add	r3, r1, r3
 725 0012 1A70     		strb	r2, [r3]
 158:.\wiznet5500.c **** 	uint8_t readArray[256];
 159:.\wiznet5500.c **** 	wiznetReadArray(0, blkSelect, readArray, 255);
 726              		.loc 2 159 0
 727 0014 414B     		ldr	r3, .L35
 728 0016 8822     		mov	r2, #136
 729 0018 5200     		lsl	r2, r2, #1
 730 001a D219     		add	r2, r2, r7
 731 001c D318     		add	r3, r2, r3
 732 001e 1A78     		ldrb	r2, [r3]
 733 0020 3B1C     		mov	r3, r7
 734 0022 0C33     		add	r3, r3, #12
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 17


 735 0024 0020     		mov	r0, #0
 736 0026 111C     		mov	r1, r2
 737 0028 1A1C     		mov	r2, r3
 738 002a FF23     		mov	r3, #255
 739 002c FFF7FEFF 		bl	wiznetReadArray
 160:.\wiznet5500.c **** 	
 161:.\wiznet5500.c **** 	printf("\n\t");
 740              		.loc 2 161 0
 741 0030 3B4B     		ldr	r3, .L35+4
 742 0032 181C     		mov	r0, r3
 743 0034 FFF7FEFF 		bl	printf
 744              	.LBB3:
 162:.\wiznet5500.c **** 	for(uint8_t c=0; c<16; c++)	printf("%X\t",c);
 745              		.loc 2 162 0
 746 0038 1021     		mov	r1, #16
 747 003a FF31     		add	r1, r1, #255
 748 003c 7B18     		add	r3, r7, r1
 749 003e 0022     		mov	r2, #0
 750 0040 1A70     		strb	r2, [r3]
 751 0042 11E0     		b	.L29
 752              	.L30:
 753              		.loc 2 162 0 is_stmt 0 discriminator 2
 754 0044 1022     		mov	r2, #16
 755 0046 FF32     		add	r2, r2, #255
 756 0048 BB18     		add	r3, r7, r2
 757 004a 1B78     		ldrb	r3, [r3]
 758 004c 354A     		ldr	r2, .L35+8
 759 004e 101C     		mov	r0, r2
 760 0050 191C     		mov	r1, r3
 761 0052 FFF7FEFF 		bl	printf
 762 0056 1021     		mov	r1, #16
 763 0058 FF31     		add	r1, r1, #255
 764 005a 7B18     		add	r3, r7, r1
 765 005c 1A78     		ldrb	r2, [r3]
 766 005e 1021     		mov	r1, #16
 767 0060 FF31     		add	r1, r1, #255
 768 0062 7B18     		add	r3, r7, r1
 769 0064 0132     		add	r2, r2, #1
 770 0066 1A70     		strb	r2, [r3]
 771              	.L29:
 772              		.loc 2 162 0 discriminator 1
 773 0068 1022     		mov	r2, #16
 774 006a FF32     		add	r2, r2, #255
 775 006c BB18     		add	r3, r7, r2
 776 006e 1B78     		ldrb	r3, [r3]
 777 0070 0F2B     		cmp	r3, #15
 778 0072 E7D9     		bls	.L30
 779              	.LBE3:
 163:.\wiznet5500.c **** 	printf("\n");
 780              		.loc 2 163 0 is_stmt 1
 781 0074 0A20     		mov	r0, #10
 782 0076 FFF7FEFF 		bl	putchar
 783              	.LBB4:
 164:.\wiznet5500.c **** 	for(uint8_t j=0; j<8; j++){
 784              		.loc 2 164 0
 785 007a 8721     		mov	r1, #135
 786 007c 4900     		lsl	r1, r1, #1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 18


 787 007e 7B18     		add	r3, r7, r1
 788 0080 0022     		mov	r2, #0
 789 0082 1A70     		strb	r2, [r3]
 790 0084 3EE0     		b	.L31
 791              	.L34:
 165:.\wiznet5500.c **** 		printf("%X\t",j);
 792              		.loc 2 165 0
 793 0086 8722     		mov	r2, #135
 794 0088 5200     		lsl	r2, r2, #1
 795 008a BB18     		add	r3, r7, r2
 796 008c 1B78     		ldrb	r3, [r3]
 797 008e 254A     		ldr	r2, .L35+8
 798 0090 101C     		mov	r0, r2
 799 0092 191C     		mov	r1, r3
 800 0094 FFF7FEFF 		bl	printf
 801              	.LBB5:
 166:.\wiznet5500.c **** 		for(uint8_t k=0; k<16; k++){
 802              		.loc 2 166 0
 803 0098 0E21     		mov	r1, #14
 804 009a FF31     		add	r1, r1, #255
 805 009c 7B18     		add	r3, r7, r1
 806 009e 0022     		mov	r2, #0
 807 00a0 1A70     		strb	r2, [r3]
 808 00a2 1DE0     		b	.L32
 809              	.L33:
 167:.\wiznet5500.c **** 			printf("%X\t",readArray[(16*j)+k]);
 810              		.loc 2 167 0 discriminator 2
 811 00a4 8722     		mov	r2, #135
 812 00a6 5200     		lsl	r2, r2, #1
 813 00a8 BB18     		add	r3, r7, r2
 814 00aa 1B78     		ldrb	r3, [r3]
 815 00ac 1A01     		lsl	r2, r3, #4
 816 00ae 0E21     		mov	r1, #14
 817 00b0 FF31     		add	r1, r1, #255
 818 00b2 7B18     		add	r3, r7, r1
 819 00b4 1B78     		ldrb	r3, [r3]
 820 00b6 D318     		add	r3, r2, r3
 821 00b8 1B4A     		ldr	r2, .L35+12
 822 00ba 8821     		mov	r1, #136
 823 00bc 4900     		lsl	r1, r1, #1
 824 00be C919     		add	r1, r1, r7
 825 00c0 8A18     		add	r2, r1, r2
 826 00c2 D35C     		ldrb	r3, [r2, r3]
 827 00c4 174A     		ldr	r2, .L35+8
 828 00c6 101C     		mov	r0, r2
 829 00c8 191C     		mov	r1, r3
 830 00ca FFF7FEFF 		bl	printf
 166:.\wiznet5500.c **** 		for(uint8_t k=0; k<16; k++){
 831              		.loc 2 166 0 discriminator 2
 832 00ce 0E22     		mov	r2, #14
 833 00d0 FF32     		add	r2, r2, #255
 834 00d2 BB18     		add	r3, r7, r2
 835 00d4 1A78     		ldrb	r2, [r3]
 836 00d6 0E21     		mov	r1, #14
 837 00d8 FF31     		add	r1, r1, #255
 838 00da 7B18     		add	r3, r7, r1
 839 00dc 0132     		add	r2, r2, #1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 19


 840 00de 1A70     		strb	r2, [r3]
 841              	.L32:
 166:.\wiznet5500.c **** 		for(uint8_t k=0; k<16; k++){
 842              		.loc 2 166 0 is_stmt 0 discriminator 1
 843 00e0 0E22     		mov	r2, #14
 844 00e2 FF32     		add	r2, r2, #255
 845 00e4 BB18     		add	r3, r7, r2
 846 00e6 1B78     		ldrb	r3, [r3]
 847 00e8 0F2B     		cmp	r3, #15
 848 00ea DBD9     		bls	.L33
 849              	.LBE5:
 168:.\wiznet5500.c **** 		}
 169:.\wiznet5500.c **** 		printf("\n");
 850              		.loc 2 169 0 is_stmt 1
 851 00ec 0A20     		mov	r0, #10
 852 00ee FFF7FEFF 		bl	putchar
 164:.\wiznet5500.c **** 	for(uint8_t j=0; j<8; j++){
 853              		.loc 2 164 0
 854 00f2 8721     		mov	r1, #135
 855 00f4 4900     		lsl	r1, r1, #1
 856 00f6 7B18     		add	r3, r7, r1
 857 00f8 1A78     		ldrb	r2, [r3]
 858 00fa 8721     		mov	r1, #135
 859 00fc 4900     		lsl	r1, r1, #1
 860 00fe 7B18     		add	r3, r7, r1
 861 0100 0132     		add	r2, r2, #1
 862 0102 1A70     		strb	r2, [r3]
 863              	.L31:
 164:.\wiznet5500.c **** 	for(uint8_t j=0; j<8; j++){
 864              		.loc 2 164 0 is_stmt 0 discriminator 1
 865 0104 8722     		mov	r2, #135
 866 0106 5200     		lsl	r2, r2, #1
 867 0108 BB18     		add	r3, r7, r2
 868 010a 1B78     		ldrb	r3, [r3]
 869 010c 072B     		cmp	r3, #7
 870 010e BAD9     		bls	.L34
 871              	.LBE4:
 170:.\wiznet5500.c **** 	}
 171:.\wiznet5500.c **** 	printf("\n");
 872              		.loc 2 171 0 is_stmt 1
 873 0110 0A20     		mov	r0, #10
 874 0112 FFF7FEFF 		bl	putchar
 172:.\wiznet5500.c **** }
 875              		.loc 2 172 0
 876 0116 BD46     		mov	sp, r7
 877 0118 44B0     		add	sp, sp, #272
 878              		@ sp needed
 879 011a 80BD     		pop	{r7, pc}
 880              	.L36:
 881              		.align	2
 882              	.L35:
 883 011c F7FEFFFF 		.word	-265
 884 0120 28000000 		.word	.LC8
 885 0124 2C000000 		.word	.LC10
 886 0128 FCFEFFFF 		.word	-260
 887              		.cfi_endproc
 888              	.LFE43:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 20


 889              		.size	wiznetPrintRegisters, .-wiznetPrintRegisters
 890              		.section	.text.wiznetWrite8b,"ax",%progbits
 891              		.align	2
 892              		.global	wiznetWrite8b
 893              		.code	16
 894              		.thumb_func
 895              		.type	wiznetWrite8b, %function
 896              	wiznetWrite8b:
 897              	.LFB44:
 173:.\wiznet5500.c **** 
 174:.\wiznet5500.c **** // Private-like Functions, but visible until this is re-written in C++
 175:.\wiznet5500.c **** void wiznetWrite8b(uint16_t regAddr, uint8_t blkSel, uint8_t data){
 898              		.loc 2 175 0
 899              		.cfi_startproc
 900 0000 80B5     		push	{r7, lr}
 901              		.cfi_def_cfa_offset 8
 902              		.cfi_offset 7, -8
 903              		.cfi_offset 14, -4
 904 0002 82B0     		sub	sp, sp, #8
 905              		.cfi_def_cfa_offset 16
 906 0004 00AF     		add	r7, sp, #0
 907              		.cfi_def_cfa_register 7
 908 0006 BB1D     		add	r3, r7, #6
 909 0008 1880     		strh	r0, [r3]
 910 000a 7B1D     		add	r3, r7, #5
 911 000c 1970     		strb	r1, [r3]
 912 000e 3B1D     		add	r3, r7, #4
 913 0010 1A70     		strb	r2, [r3]
 176:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 914              		.loc 2 176 0
 915 0012 0020     		mov	r0, #0
 916 0014 FFF7FEFF 		bl	WIZ_SS_Write
 177:.\wiznet5500.c **** 		// Address Phase
 178:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 917              		.loc 2 178 0
 918 0018 BB1D     		add	r3, r7, #6
 919 001a 1B88     		ldrh	r3, [r3]
 920 001c 1B0A     		lsr	r3, r3, #8
 921 001e 9BB2     		uxth	r3, r3
 922 0020 DBB2     		uxtb	r3, r3
 923 0022 181C     		mov	r0, r3
 924 0024 FFF7FEFF 		bl	transferSPI
 179:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 925              		.loc 2 179 0
 926 0028 BB1D     		add	r3, r7, #6
 927 002a 1B88     		ldrh	r3, [r3]
 928 002c DBB2     		uxtb	r3, r3
 929 002e 181C     		mov	r0, r3
 930 0030 FFF7FEFF 		bl	transferSPI
 180:.\wiznet5500.c **** 		
 181:.\wiznet5500.c **** 		// Control Phase
 182:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x01<<2)|0x00);		
 931              		.loc 2 182 0
 932 0034 7B1D     		add	r3, r7, #5
 933 0036 1B78     		ldrb	r3, [r3]
 934 0038 DB00     		lsl	r3, r3, #3
 935 003a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 21


 936 003c 0422     		mov	r2, #4
 937 003e 1343     		orr	r3, r2
 938 0040 DBB2     		uxtb	r3, r3
 939 0042 DBB2     		uxtb	r3, r3
 940 0044 181C     		mov	r0, r3
 941 0046 FFF7FEFF 		bl	transferSPI
 183:.\wiznet5500.c **** 		
 184:.\wiznet5500.c **** 		// Data Phase
 185:.\wiznet5500.c **** 		transferSPI(data);
 942              		.loc 2 185 0
 943 004a 3B1D     		add	r3, r7, #4
 944 004c 1B78     		ldrb	r3, [r3]
 945 004e 181C     		mov	r0, r3
 946 0050 FFF7FEFF 		bl	transferSPI
 186:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 947              		.loc 2 186 0
 948 0054 0120     		mov	r0, #1
 949 0056 FFF7FEFF 		bl	WIZ_SS_Write
 187:.\wiznet5500.c **** 	// return response;
 188:.\wiznet5500.c **** }
 950              		.loc 2 188 0
 951 005a BD46     		mov	sp, r7
 952 005c 02B0     		add	sp, sp, #8
 953              		@ sp needed
 954 005e 80BD     		pop	{r7, pc}
 955              		.cfi_endproc
 956              	.LFE44:
 957              		.size	wiznetWrite8b, .-wiznetWrite8b
 958              		.section	.text.wiznetWrite16b,"ax",%progbits
 959              		.align	2
 960              		.global	wiznetWrite16b
 961              		.code	16
 962              		.thumb_func
 963              		.type	wiznetWrite16b, %function
 964              	wiznetWrite16b:
 965              	.LFB45:
 189:.\wiznet5500.c **** 
 190:.\wiznet5500.c **** void wiznetWrite16b(uint16_t regAddr, uint8_t blkSel, uint16_t data){
 966              		.loc 2 190 0
 967              		.cfi_startproc
 968 0000 80B5     		push	{r7, lr}
 969              		.cfi_def_cfa_offset 8
 970              		.cfi_offset 7, -8
 971              		.cfi_offset 14, -4
 972 0002 82B0     		sub	sp, sp, #8
 973              		.cfi_def_cfa_offset 16
 974 0004 00AF     		add	r7, sp, #0
 975              		.cfi_def_cfa_register 7
 976 0006 BB1D     		add	r3, r7, #6
 977 0008 1880     		strh	r0, [r3]
 978 000a 7B1D     		add	r3, r7, #5
 979 000c 1970     		strb	r1, [r3]
 980 000e BB1C     		add	r3, r7, #2
 981 0010 1A80     		strh	r2, [r3]
 191:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 982              		.loc 2 191 0
 983 0012 0020     		mov	r0, #0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 22


 984 0014 FFF7FEFF 		bl	WIZ_SS_Write
 192:.\wiznet5500.c **** 		// Address Phase
 193:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 985              		.loc 2 193 0
 986 0018 BB1D     		add	r3, r7, #6
 987 001a 1B88     		ldrh	r3, [r3]
 988 001c 1B0A     		lsr	r3, r3, #8
 989 001e 9BB2     		uxth	r3, r3
 990 0020 DBB2     		uxtb	r3, r3
 991 0022 181C     		mov	r0, r3
 992 0024 FFF7FEFF 		bl	transferSPI
 194:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 993              		.loc 2 194 0
 994 0028 BB1D     		add	r3, r7, #6
 995 002a 1B88     		ldrh	r3, [r3]
 996 002c DBB2     		uxtb	r3, r3
 997 002e 181C     		mov	r0, r3
 998 0030 FFF7FEFF 		bl	transferSPI
 195:.\wiznet5500.c **** 		
 196:.\wiznet5500.c **** 		// Control Phase
 197:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x01<<2)|0x00);		
 999              		.loc 2 197 0
 1000 0034 7B1D     		add	r3, r7, #5
 1001 0036 1B78     		ldrb	r3, [r3]
 1002 0038 DB00     		lsl	r3, r3, #3
 1003 003a DBB2     		uxtb	r3, r3
 1004 003c 0422     		mov	r2, #4
 1005 003e 1343     		orr	r3, r2
 1006 0040 DBB2     		uxtb	r3, r3
 1007 0042 DBB2     		uxtb	r3, r3
 1008 0044 181C     		mov	r0, r3
 1009 0046 FFF7FEFF 		bl	transferSPI
 198:.\wiznet5500.c **** 		
 199:.\wiznet5500.c **** 		// Data Phase
 200:.\wiznet5500.c **** 		transferSPI(data>>8);
 1010              		.loc 2 200 0
 1011 004a BB1C     		add	r3, r7, #2
 1012 004c 1B88     		ldrh	r3, [r3]
 1013 004e 1B0A     		lsr	r3, r3, #8
 1014 0050 9BB2     		uxth	r3, r3
 1015 0052 DBB2     		uxtb	r3, r3
 1016 0054 181C     		mov	r0, r3
 1017 0056 FFF7FEFF 		bl	transferSPI
 201:.\wiznet5500.c **** 		transferSPI(data&0xFF);
 1018              		.loc 2 201 0
 1019 005a BB1C     		add	r3, r7, #2
 1020 005c 1B88     		ldrh	r3, [r3]
 1021 005e DBB2     		uxtb	r3, r3
 1022 0060 181C     		mov	r0, r3
 1023 0062 FFF7FEFF 		bl	transferSPI
 202:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1024              		.loc 2 202 0
 1025 0066 0120     		mov	r0, #1
 1026 0068 FFF7FEFF 		bl	WIZ_SS_Write
 203:.\wiznet5500.c **** 	// return response;
 204:.\wiznet5500.c **** }
 1027              		.loc 2 204 0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 23


 1028 006c BD46     		mov	sp, r7
 1029 006e 02B0     		add	sp, sp, #8
 1030              		@ sp needed
 1031 0070 80BD     		pop	{r7, pc}
 1032              		.cfi_endproc
 1033              	.LFE45:
 1034              		.size	wiznetWrite16b, .-wiznetWrite16b
 1035              		.section	.text.wiznetWriteArray,"ax",%progbits
 1036              		.align	2
 1037              		.global	wiznetWriteArray
 1038              		.code	16
 1039              		.thumb_func
 1040              		.type	wiznetWriteArray, %function
 1041              	wiznetWriteArray:
 1042              	.LFB46:
 205:.\wiznet5500.c **** 
 206:.\wiznet5500.c **** void wiznetWriteArray(uint16_t regAddr, uint8_t blkSel, uint8_t *srcArray, uint8_t len){
 1043              		.loc 2 206 0
 1044              		.cfi_startproc
 1045 0000 80B5     		push	{r7, lr}
 1046              		.cfi_def_cfa_offset 8
 1047              		.cfi_offset 7, -8
 1048              		.cfi_offset 14, -4
 1049 0002 84B0     		sub	sp, sp, #16
 1050              		.cfi_def_cfa_offset 24
 1051 0004 00AF     		add	r7, sp, #0
 1052              		.cfi_def_cfa_register 7
 1053 0006 3A60     		str	r2, [r7]
 1054 0008 1A1C     		mov	r2, r3
 1055 000a BB1D     		add	r3, r7, #6
 1056 000c 1880     		strh	r0, [r3]
 1057 000e 7B1D     		add	r3, r7, #5
 1058 0010 1970     		strb	r1, [r3]
 1059 0012 3B1D     		add	r3, r7, #4
 1060 0014 1A70     		strb	r2, [r3]
 207:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1061              		.loc 2 207 0
 1062 0016 0020     		mov	r0, #0
 1063 0018 FFF7FEFF 		bl	WIZ_SS_Write
 208:.\wiznet5500.c **** 		// Address Phase
 209:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1064              		.loc 2 209 0
 1065 001c BB1D     		add	r3, r7, #6
 1066 001e 1B88     		ldrh	r3, [r3]
 1067 0020 1B0A     		lsr	r3, r3, #8
 1068 0022 9BB2     		uxth	r3, r3
 1069 0024 DBB2     		uxtb	r3, r3
 1070 0026 181C     		mov	r0, r3
 1071 0028 FFF7FEFF 		bl	transferSPI
 210:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1072              		.loc 2 210 0
 1073 002c BB1D     		add	r3, r7, #6
 1074 002e 1B88     		ldrh	r3, [r3]
 1075 0030 DBB2     		uxtb	r3, r3
 1076 0032 181C     		mov	r0, r3
 1077 0034 FFF7FEFF 		bl	transferSPI
 211:.\wiznet5500.c **** 		
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 24


 212:.\wiznet5500.c **** 		// Control Phase
 213:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x01<<2)|0x00);		
 1078              		.loc 2 213 0
 1079 0038 7B1D     		add	r3, r7, #5
 1080 003a 1B78     		ldrb	r3, [r3]
 1081 003c DB00     		lsl	r3, r3, #3
 1082 003e DBB2     		uxtb	r3, r3
 1083 0040 0422     		mov	r2, #4
 1084 0042 1343     		orr	r3, r2
 1085 0044 DBB2     		uxtb	r3, r3
 1086 0046 DBB2     		uxtb	r3, r3
 1087 0048 181C     		mov	r0, r3
 1088 004a FFF7FEFF 		bl	transferSPI
 1089              	.LBB6:
 214:.\wiznet5500.c **** 		
 215:.\wiznet5500.c **** 		// Data Phase
 216:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1090              		.loc 2 216 0
 1091 004e 3B1C     		mov	r3, r7
 1092 0050 0F33     		add	r3, r3, #15
 1093 0052 0022     		mov	r2, #0
 1094 0054 1A70     		strb	r2, [r3]
 1095 0056 0FE0     		b	.L40
 1096              	.L41:
 217:.\wiznet5500.c **** 			transferSPI(srcArray[k]);
 1097              		.loc 2 217 0 discriminator 2
 1098 0058 3B1C     		mov	r3, r7
 1099 005a 0F33     		add	r3, r3, #15
 1100 005c 1B78     		ldrb	r3, [r3]
 1101 005e 3A68     		ldr	r2, [r7]
 1102 0060 D318     		add	r3, r2, r3
 1103 0062 1B78     		ldrb	r3, [r3]
 1104 0064 181C     		mov	r0, r3
 1105 0066 FFF7FEFF 		bl	transferSPI
 216:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1106              		.loc 2 216 0 discriminator 2
 1107 006a 3B1C     		mov	r3, r7
 1108 006c 0F33     		add	r3, r3, #15
 1109 006e 1A78     		ldrb	r2, [r3]
 1110 0070 3B1C     		mov	r3, r7
 1111 0072 0F33     		add	r3, r3, #15
 1112 0074 0132     		add	r2, r2, #1
 1113 0076 1A70     		strb	r2, [r3]
 1114              	.L40:
 216:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1115              		.loc 2 216 0 is_stmt 0 discriminator 1
 1116 0078 3A1C     		mov	r2, r7
 1117 007a 0F32     		add	r2, r2, #15
 1118 007c 3B1D     		add	r3, r7, #4
 1119 007e 1278     		ldrb	r2, [r2]
 1120 0080 1B78     		ldrb	r3, [r3]
 1121 0082 9A42     		cmp	r2, r3
 1122 0084 E8D3     		bcc	.L41
 1123              	.LBE6:
 218:.\wiznet5500.c **** 		}
 219:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1124              		.loc 2 219 0 is_stmt 1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 25


 1125 0086 0120     		mov	r0, #1
 1126 0088 FFF7FEFF 		bl	WIZ_SS_Write
 220:.\wiznet5500.c **** 	// return response;
 221:.\wiznet5500.c **** }
 1127              		.loc 2 221 0
 1128 008c BD46     		mov	sp, r7
 1129 008e 04B0     		add	sp, sp, #16
 1130              		@ sp needed
 1131 0090 80BD     		pop	{r7, pc}
 1132              		.cfi_endproc
 1133              	.LFE46:
 1134              		.size	wiznetWriteArray, .-wiznetWriteArray
 1135 0092 C046     		.section	.text.wiznetRead8b,"ax",%progbits
 1136              		.align	2
 1137              		.global	wiznetRead8b
 1138              		.code	16
 1139              		.thumb_func
 1140              		.type	wiznetRead8b, %function
 1141              	wiznetRead8b:
 1142              	.LFB47:
 222:.\wiznet5500.c **** 
 223:.\wiznet5500.c **** uint8_t wiznetRead8b(uint16_t regAddr, uint8_t blkSel){
 1143              		.loc 2 223 0
 1144              		.cfi_startproc
 1145 0000 90B5     		push	{r4, r7, lr}
 1146              		.cfi_def_cfa_offset 12
 1147              		.cfi_offset 4, -12
 1148              		.cfi_offset 7, -8
 1149              		.cfi_offset 14, -4
 1150 0002 85B0     		sub	sp, sp, #20
 1151              		.cfi_def_cfa_offset 32
 1152 0004 00AF     		add	r7, sp, #0
 1153              		.cfi_def_cfa_register 7
 1154 0006 0A1C     		mov	r2, r1
 1155 0008 BB1D     		add	r3, r7, #6
 1156 000a 011C     		add	r1, r0, #0
 1157 000c 1980     		strh	r1, [r3]
 1158 000e 7B1D     		add	r3, r7, #5
 1159 0010 1A70     		strb	r2, [r3]
 224:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1160              		.loc 2 224 0
 1161 0012 0020     		mov	r0, #0
 1162 0014 FFF7FEFF 		bl	WIZ_SS_Write
 225:.\wiznet5500.c **** 		// Address Phase
 226:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1163              		.loc 2 226 0
 1164 0018 BB1D     		add	r3, r7, #6
 1165 001a 1B88     		ldrh	r3, [r3]
 1166 001c 1B0A     		lsr	r3, r3, #8
 1167 001e 9BB2     		uxth	r3, r3
 1168 0020 DBB2     		uxtb	r3, r3
 1169 0022 181C     		mov	r0, r3
 1170 0024 FFF7FEFF 		bl	transferSPI
 227:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1171              		.loc 2 227 0
 1172 0028 BB1D     		add	r3, r7, #6
 1173 002a 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 26


 1174 002c DBB2     		uxtb	r3, r3
 1175 002e 181C     		mov	r0, r3
 1176 0030 FFF7FEFF 		bl	transferSPI
 228:.\wiznet5500.c **** 		
 229:.\wiznet5500.c **** 		// Control Phase
 230:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x00<<2)|0x00);		
 1177              		.loc 2 230 0
 1178 0034 7B1D     		add	r3, r7, #5
 1179 0036 1B78     		ldrb	r3, [r3]
 1180 0038 DB00     		lsl	r3, r3, #3
 1181 003a DBB2     		uxtb	r3, r3
 1182 003c 181C     		mov	r0, r3
 1183 003e FFF7FEFF 		bl	transferSPI
 231:.\wiznet5500.c **** 		
 232:.\wiznet5500.c **** 		// Data Phase
 233:.\wiznet5500.c **** 		uint8_t result = transferSPI(0x00);
 1184              		.loc 2 233 0
 1185 0042 3C1C     		mov	r4, r7
 1186 0044 0F34     		add	r4, r4, #15
 1187 0046 0020     		mov	r0, #0
 1188 0048 FFF7FEFF 		bl	transferSPI
 1189 004c 031C     		mov	r3, r0
 1190 004e 2370     		strb	r3, [r4]
 234:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1191              		.loc 2 234 0
 1192 0050 0120     		mov	r0, #1
 1193 0052 FFF7FEFF 		bl	WIZ_SS_Write
 235:.\wiznet5500.c **** 	return result;
 1194              		.loc 2 235 0
 1195 0056 3B1C     		mov	r3, r7
 1196 0058 0F33     		add	r3, r3, #15
 1197 005a 1B78     		ldrb	r3, [r3]
 236:.\wiznet5500.c **** }
 1198              		.loc 2 236 0
 1199 005c 181C     		mov	r0, r3
 1200 005e BD46     		mov	sp, r7
 1201 0060 05B0     		add	sp, sp, #20
 1202              		@ sp needed
 1203 0062 90BD     		pop	{r4, r7, pc}
 1204              		.cfi_endproc
 1205              	.LFE47:
 1206              		.size	wiznetRead8b, .-wiznetRead8b
 1207              		.section	.text.wiznetRead16b,"ax",%progbits
 1208              		.align	2
 1209              		.global	wiznetRead16b
 1210              		.code	16
 1211              		.thumb_func
 1212              		.type	wiznetRead16b, %function
 1213              	wiznetRead16b:
 1214              	.LFB48:
 237:.\wiznet5500.c **** 
 238:.\wiznet5500.c **** uint16_t wiznetRead16b(uint16_t regAddr, uint8_t blkSel){
 1215              		.loc 2 238 0
 1216              		.cfi_startproc
 1217 0000 80B5     		push	{r7, lr}
 1218              		.cfi_def_cfa_offset 8
 1219              		.cfi_offset 7, -8
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 27


 1220              		.cfi_offset 14, -4
 1221 0002 84B0     		sub	sp, sp, #16
 1222              		.cfi_def_cfa_offset 24
 1223 0004 00AF     		add	r7, sp, #0
 1224              		.cfi_def_cfa_register 7
 1225 0006 0A1C     		mov	r2, r1
 1226 0008 BB1D     		add	r3, r7, #6
 1227 000a 011C     		add	r1, r0, #0
 1228 000c 1980     		strh	r1, [r3]
 1229 000e 7B1D     		add	r3, r7, #5
 1230 0010 1A70     		strb	r2, [r3]
 239:.\wiznet5500.c **** 	uint16_t result;
 240:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1231              		.loc 2 240 0
 1232 0012 0020     		mov	r0, #0
 1233 0014 FFF7FEFF 		bl	WIZ_SS_Write
 241:.\wiznet5500.c **** 		// Address Phase
 242:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1234              		.loc 2 242 0
 1235 0018 BB1D     		add	r3, r7, #6
 1236 001a 1B88     		ldrh	r3, [r3]
 1237 001c 1B0A     		lsr	r3, r3, #8
 1238 001e 9BB2     		uxth	r3, r3
 1239 0020 DBB2     		uxtb	r3, r3
 1240 0022 181C     		mov	r0, r3
 1241 0024 FFF7FEFF 		bl	transferSPI
 243:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1242              		.loc 2 243 0
 1243 0028 BB1D     		add	r3, r7, #6
 1244 002a 1B88     		ldrh	r3, [r3]
 1245 002c DBB2     		uxtb	r3, r3
 1246 002e 181C     		mov	r0, r3
 1247 0030 FFF7FEFF 		bl	transferSPI
 244:.\wiznet5500.c **** 		
 245:.\wiznet5500.c **** 		// Control Phase
 246:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x00<<2)|0x00);		
 1248              		.loc 2 246 0
 1249 0034 7B1D     		add	r3, r7, #5
 1250 0036 1B78     		ldrb	r3, [r3]
 1251 0038 DB00     		lsl	r3, r3, #3
 1252 003a DBB2     		uxtb	r3, r3
 1253 003c 181C     		mov	r0, r3
 1254 003e FFF7FEFF 		bl	transferSPI
 247:.\wiznet5500.c **** 		
 248:.\wiznet5500.c **** 		// Data Phase
 249:.\wiznet5500.c **** 		result = transferSPI(0x00)<<8;
 1255              		.loc 2 249 0
 1256 0042 0020     		mov	r0, #0
 1257 0044 FFF7FEFF 		bl	transferSPI
 1258 0048 031C     		mov	r3, r0
 1259 004a 1A1C     		mov	r2, r3
 1260 004c 3B1C     		mov	r3, r7
 1261 004e 0E33     		add	r3, r3, #14
 1262 0050 1202     		lsl	r2, r2, #8
 1263 0052 1A80     		strh	r2, [r3]
 250:.\wiznet5500.c **** 		result |= transferSPI(0x00);
 1264              		.loc 2 250 0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 28


 1265 0054 0020     		mov	r0, #0
 1266 0056 FFF7FEFF 		bl	transferSPI
 1267 005a 031C     		mov	r3, r0
 1268 005c 191C     		mov	r1, r3
 1269 005e 3B1C     		mov	r3, r7
 1270 0060 0E33     		add	r3, r3, #14
 1271 0062 3A1C     		mov	r2, r7
 1272 0064 0E32     		add	r2, r2, #14
 1273 0066 1288     		ldrh	r2, [r2]
 1274 0068 0A43     		orr	r2, r1
 1275 006a 1A80     		strh	r2, [r3]
 251:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1276              		.loc 2 251 0
 1277 006c 0120     		mov	r0, #1
 1278 006e FFF7FEFF 		bl	WIZ_SS_Write
 252:.\wiznet5500.c **** 	return result;
 1279              		.loc 2 252 0
 1280 0072 3B1C     		mov	r3, r7
 1281 0074 0E33     		add	r3, r3, #14
 1282 0076 1B88     		ldrh	r3, [r3]
 253:.\wiznet5500.c **** }
 1283              		.loc 2 253 0
 1284 0078 181C     		mov	r0, r3
 1285 007a BD46     		mov	sp, r7
 1286 007c 04B0     		add	sp, sp, #16
 1287              		@ sp needed
 1288 007e 80BD     		pop	{r7, pc}
 1289              		.cfi_endproc
 1290              	.LFE48:
 1291              		.size	wiznetRead16b, .-wiznetRead16b
 1292              		.section	.text.wiznetReadArray,"ax",%progbits
 1293              		.align	2
 1294              		.global	wiznetReadArray
 1295              		.code	16
 1296              		.thumb_func
 1297              		.type	wiznetReadArray, %function
 1298              	wiznetReadArray:
 1299              	.LFB49:
 254:.\wiznet5500.c **** 
 255:.\wiznet5500.c **** void wiznetReadArray(uint16_t regAddr, uint8_t blkSel, uint8_t *dstArray, uint8_t len){
 1300              		.loc 2 255 0
 1301              		.cfi_startproc
 1302 0000 90B5     		push	{r4, r7, lr}
 1303              		.cfi_def_cfa_offset 12
 1304              		.cfi_offset 4, -12
 1305              		.cfi_offset 7, -8
 1306              		.cfi_offset 14, -4
 1307 0002 85B0     		sub	sp, sp, #20
 1308              		.cfi_def_cfa_offset 32
 1309 0004 00AF     		add	r7, sp, #0
 1310              		.cfi_def_cfa_register 7
 1311 0006 3A60     		str	r2, [r7]
 1312 0008 1A1C     		mov	r2, r3
 1313 000a BB1D     		add	r3, r7, #6
 1314 000c 1880     		strh	r0, [r3]
 1315 000e 7B1D     		add	r3, r7, #5
 1316 0010 1970     		strb	r1, [r3]
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 29


 1317 0012 3B1D     		add	r3, r7, #4
 1318 0014 1A70     		strb	r2, [r3]
 256:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1319              		.loc 2 256 0
 1320 0016 0020     		mov	r0, #0
 1321 0018 FFF7FEFF 		bl	WIZ_SS_Write
 257:.\wiznet5500.c **** 		// uint8_t count = 0;
 258:.\wiznet5500.c **** 		
 259:.\wiznet5500.c **** 		// Address Phase
 260:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1322              		.loc 2 260 0
 1323 001c BB1D     		add	r3, r7, #6
 1324 001e 1B88     		ldrh	r3, [r3]
 1325 0020 1B0A     		lsr	r3, r3, #8
 1326 0022 9BB2     		uxth	r3, r3
 1327 0024 DBB2     		uxtb	r3, r3
 1328 0026 181C     		mov	r0, r3
 1329 0028 FFF7FEFF 		bl	transferSPI
 261:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1330              		.loc 2 261 0
 1331 002c BB1D     		add	r3, r7, #6
 1332 002e 1B88     		ldrh	r3, [r3]
 1333 0030 DBB2     		uxtb	r3, r3
 1334 0032 181C     		mov	r0, r3
 1335 0034 FFF7FEFF 		bl	transferSPI
 262:.\wiznet5500.c **** 		
 263:.\wiznet5500.c **** 		// Control Phase
 264:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x00<<2)|0x00);	
 1336              		.loc 2 264 0
 1337 0038 7B1D     		add	r3, r7, #5
 1338 003a 1B78     		ldrb	r3, [r3]
 1339 003c DB00     		lsl	r3, r3, #3
 1340 003e DBB2     		uxtb	r3, r3
 1341 0040 181C     		mov	r0, r3
 1342 0042 FFF7FEFF 		bl	transferSPI
 1343              	.LBB7:
 265:.\wiznet5500.c **** 		
 266:.\wiznet5500.c **** 		// Data Phase
 267:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1344              		.loc 2 267 0
 1345 0046 3B1C     		mov	r3, r7
 1346 0048 0F33     		add	r3, r3, #15
 1347 004a 0022     		mov	r2, #0
 1348 004c 1A70     		strb	r2, [r3]
 1349 004e 10E0     		b	.L47
 1350              	.L48:
 268:.\wiznet5500.c **** 			dstArray[k] = transferSPI(0x00);
 1351              		.loc 2 268 0 discriminator 2
 1352 0050 3B1C     		mov	r3, r7
 1353 0052 0F33     		add	r3, r3, #15
 1354 0054 1B78     		ldrb	r3, [r3]
 1355 0056 3A68     		ldr	r2, [r7]
 1356 0058 D418     		add	r4, r2, r3
 1357 005a 0020     		mov	r0, #0
 1358 005c FFF7FEFF 		bl	transferSPI
 1359 0060 031C     		mov	r3, r0
 1360 0062 2370     		strb	r3, [r4]
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 30


 267:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1361              		.loc 2 267 0 discriminator 2
 1362 0064 3B1C     		mov	r3, r7
 1363 0066 0F33     		add	r3, r3, #15
 1364 0068 1A78     		ldrb	r2, [r3]
 1365 006a 3B1C     		mov	r3, r7
 1366 006c 0F33     		add	r3, r3, #15
 1367 006e 0132     		add	r2, r2, #1
 1368 0070 1A70     		strb	r2, [r3]
 1369              	.L47:
 267:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1370              		.loc 2 267 0 is_stmt 0 discriminator 1
 1371 0072 3A1C     		mov	r2, r7
 1372 0074 0F32     		add	r2, r2, #15
 1373 0076 3B1D     		add	r3, r7, #4
 1374 0078 1278     		ldrb	r2, [r2]
 1375 007a 1B78     		ldrb	r3, [r3]
 1376 007c 9A42     		cmp	r2, r3
 1377 007e E7D3     		bcc	.L48
 1378              	.LBE7:
 269:.\wiznet5500.c **** 			// count++;
 270:.\wiznet5500.c **** 			// printf("%u",k);
 271:.\wiznet5500.c **** 		}
 272:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1379              		.loc 2 272 0 is_stmt 1
 1380 0080 0120     		mov	r0, #1
 1381 0082 FFF7FEFF 		bl	WIZ_SS_Write
 273:.\wiznet5500.c **** 	// return count;
 274:.\wiznet5500.c **** }
 1382              		.loc 2 274 0
 1383 0086 BD46     		mov	sp, r7
 1384 0088 05B0     		add	sp, sp, #20
 1385              		@ sp needed
 1386 008a 90BD     		pop	{r4, r7, pc}
 1387              		.cfi_endproc
 1388              	.LFE49:
 1389              		.size	wiznetReadArray, .-wiznetReadArray
 1390              		.text
 1391              	.Letext0:
 1392              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4
 1393              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4
 1394              		.file 5 ".\\Generated_Source\\PSoC4/cytypes.h"
 1395              		.file 6 "<built-in>"
 1396              		.section	.debug_info,"",%progbits
 1397              	.Ldebug_info0:
 1398 0000 41050000 		.4byte	0x541
 1399 0004 0400     		.2byte	0x4
 1400 0006 00000000 		.4byte	.Ldebug_abbrev0
 1401 000a 04       		.byte	0x4
 1402 000b 01       		.uleb128 0x1
 1403 000c 12020000 		.4byte	.LASF53
 1404 0010 01       		.byte	0x1
 1405 0011 B4020000 		.4byte	.LASF54
 1406 0015 1A000000 		.4byte	.LASF55
 1407 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1408 001d 00000000 		.4byte	0
 1409 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 31


 1410 0025 02       		.uleb128 0x2
 1411 0026 01       		.byte	0x1
 1412 0027 06       		.byte	0x6
 1413 0028 DA000000 		.4byte	.LASF0
 1414 002c 03       		.uleb128 0x3
 1415 002d 87000000 		.4byte	.LASF3
 1416 0031 03       		.byte	0x3
 1417 0032 1C       		.byte	0x1c
 1418 0033 37000000 		.4byte	0x37
 1419 0037 02       		.uleb128 0x2
 1420 0038 01       		.byte	0x1
 1421 0039 08       		.byte	0x8
 1422 003a 04020000 		.4byte	.LASF1
 1423 003e 02       		.uleb128 0x2
 1424 003f 02       		.byte	0x2
 1425 0040 05       		.byte	0x5
 1426 0041 C6010000 		.4byte	.LASF2
 1427 0045 03       		.uleb128 0x3
 1428 0046 E3020000 		.4byte	.LASF4
 1429 004a 03       		.byte	0x3
 1430 004b 26       		.byte	0x26
 1431 004c 50000000 		.4byte	0x50
 1432 0050 02       		.uleb128 0x2
 1433 0051 02       		.byte	0x2
 1434 0052 07       		.byte	0x7
 1435 0053 A5010000 		.4byte	.LASF5
 1436 0057 02       		.uleb128 0x2
 1437 0058 04       		.byte	0x4
 1438 0059 05       		.byte	0x5
 1439 005a FC000000 		.4byte	.LASF6
 1440 005e 02       		.uleb128 0x2
 1441 005f 04       		.byte	0x4
 1442 0060 07       		.byte	0x7
 1443 0061 77010000 		.4byte	.LASF7
 1444 0065 02       		.uleb128 0x2
 1445 0066 08       		.byte	0x8
 1446 0067 05       		.byte	0x5
 1447 0068 CC000000 		.4byte	.LASF8
 1448 006c 02       		.uleb128 0x2
 1449 006d 08       		.byte	0x8
 1450 006e 07       		.byte	0x7
 1451 006f A1000000 		.4byte	.LASF9
 1452 0073 04       		.uleb128 0x4
 1453 0074 04       		.byte	0x4
 1454 0075 05       		.byte	0x5
 1455 0076 696E7400 		.ascii	"int\000"
 1456 007a 02       		.uleb128 0x2
 1457 007b 04       		.byte	0x4
 1458 007c 07       		.byte	0x7
 1459 007d 5F010000 		.4byte	.LASF10
 1460 0081 03       		.uleb128 0x3
 1461 0082 4B030000 		.4byte	.LASF11
 1462 0086 04       		.byte	0x4
 1463 0087 2A       		.byte	0x2a
 1464 0088 2C000000 		.4byte	0x2c
 1465 008c 03       		.uleb128 0x3
 1466 008d 1A010000 		.4byte	.LASF12
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 32


 1467 0091 04       		.byte	0x4
 1468 0092 36       		.byte	0x36
 1469 0093 45000000 		.4byte	0x45
 1470 0097 03       		.uleb128 0x3
 1471 0098 14010000 		.4byte	.LASF13
 1472 009c 05       		.byte	0x5
 1473 009d A1       		.byte	0xa1
 1474 009e 37000000 		.4byte	0x37
 1475 00a2 02       		.uleb128 0x2
 1476 00a3 04       		.byte	0x4
 1477 00a4 04       		.byte	0x4
 1478 00a5 FE010000 		.4byte	.LASF14
 1479 00a9 02       		.uleb128 0x2
 1480 00aa 08       		.byte	0x8
 1481 00ab 04       		.byte	0x4
 1482 00ac 23010000 		.4byte	.LASF15
 1483 00b0 02       		.uleb128 0x2
 1484 00b1 01       		.byte	0x1
 1485 00b2 08       		.byte	0x8
 1486 00b3 CD020000 		.4byte	.LASF16
 1487 00b7 02       		.uleb128 0x2
 1488 00b8 04       		.byte	0x4
 1489 00b9 07       		.byte	0x7
 1490 00ba EB010000 		.4byte	.LASF17
 1491 00be 05       		.uleb128 0x5
 1492 00bf 04       		.byte	0x4
 1493 00c0 C4000000 		.4byte	0xc4
 1494 00c4 06       		.uleb128 0x6
 1495 00c5 B0000000 		.4byte	0xb0
 1496 00c9 07       		.uleb128 0x7
 1497 00ca 7D030000 		.4byte	.LASF56
 1498 00ce 01       		.byte	0x1
 1499 00cf 0D       		.byte	0xd
 1500 00d0 81000000 		.4byte	0x81
 1501 00d4 00000000 		.4byte	.LFB33
 1502 00d8 34000000 		.4byte	.LFE33-.LFB33
 1503 00dc 01       		.uleb128 0x1
 1504 00dd 9C       		.byte	0x9c
 1505 00de F1000000 		.4byte	0xf1
 1506 00e2 08       		.uleb128 0x8
 1507 00e3 A0010000 		.4byte	.LASF18
 1508 00e7 01       		.byte	0x1
 1509 00e8 0D       		.byte	0xd
 1510 00e9 81000000 		.4byte	0x81
 1511 00ed 02       		.uleb128 0x2
 1512 00ee 91       		.byte	0x91
 1513 00ef 77       		.sleb128 -9
 1514 00f0 00       		.byte	0
 1515 00f1 09       		.uleb128 0x9
 1516 00f2 99020000 		.4byte	.LASF33
 1517 00f6 02       		.byte	0x2
 1518 00f7 1A       		.byte	0x1a
 1519 00f8 81000000 		.4byte	0x81
 1520 00fc 00000000 		.4byte	.LFB34
 1521 0100 6C010000 		.4byte	.LFE34-.LFB34
 1522 0104 01       		.uleb128 0x1
 1523 0105 9C       		.byte	0x9c
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 33


 1524 0106 78010000 		.4byte	0x178
 1525 010a 08       		.uleb128 0x8
 1526 010b 2D030000 		.4byte	.LASF19
 1527 010f 02       		.byte	0x2
 1528 0110 1A       		.byte	0x1a
 1529 0111 81000000 		.4byte	0x81
 1530 0115 03       		.uleb128 0x3
 1531 0116 91       		.byte	0x91
 1532 0117 BF7F     		.sleb128 -65
 1533 0119 08       		.uleb128 0x8
 1534 011a E1010000 		.4byte	.LASF20
 1535 011e 02       		.byte	0x2
 1536 011f 1A       		.byte	0x1a
 1537 0120 81000000 		.4byte	0x81
 1538 0124 03       		.uleb128 0x3
 1539 0125 91       		.byte	0x91
 1540 0126 BE7F     		.sleb128 -66
 1541 0128 08       		.uleb128 0x8
 1542 0129 6C010000 		.4byte	.LASF21
 1543 012d 02       		.byte	0x2
 1544 012e 1A       		.byte	0x1a
 1545 012f 8C000000 		.4byte	0x8c
 1546 0133 03       		.uleb128 0x3
 1547 0134 91       		.byte	0x91
 1548 0135 BC7F     		.sleb128 -68
 1549 0137 0A       		.uleb128 0xa
 1550 0138 61030000 		.4byte	.LASF22
 1551 013c 02       		.byte	0x2
 1552 013d 1C       		.byte	0x1c
 1553 013e 78010000 		.4byte	0x178
 1554 0142 02       		.uleb128 0x2
 1555 0143 91       		.byte	0x91
 1556 0144 60       		.sleb128 -32
 1557 0145 0A       		.uleb128 0xa
 1558 0146 2A010000 		.4byte	.LASF23
 1559 014a 02       		.byte	0x2
 1560 014b 1F       		.byte	0x1f
 1561 014c 88010000 		.4byte	0x188
 1562 0150 02       		.uleb128 0x2
 1563 0151 91       		.byte	0x91
 1564 0152 4C       		.sleb128 -52
 1565 0153 0A       		.uleb128 0xa
 1566 0154 34010000 		.4byte	.LASF24
 1567 0158 02       		.byte	0x2
 1568 0159 2A       		.byte	0x2a
 1569 015a 98010000 		.4byte	0x198
 1570 015e 02       		.uleb128 0x2
 1571 015f 91       		.byte	0x91
 1572 0160 44       		.sleb128 -60
 1573 0161 0B       		.uleb128 0xb
 1574 0162 06010000 		.4byte	.LBB2
 1575 0166 44000000 		.4byte	.LBE2-.LBB2
 1576 016a 0C       		.uleb128 0xc
 1577 016b 6B00     		.ascii	"k\000"
 1578 016d 02       		.byte	0x2
 1579 016e 4E       		.byte	0x4e
 1580 016f 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 34


 1581 0173 02       		.uleb128 0x2
 1582 0174 91       		.byte	0x91
 1583 0175 76       		.sleb128 -10
 1584 0176 00       		.byte	0
 1585 0177 00       		.byte	0
 1586 0178 0D       		.uleb128 0xd
 1587 0179 81000000 		.4byte	0x81
 1588 017d 88010000 		.4byte	0x188
 1589 0181 0E       		.uleb128 0xe
 1590 0182 B7000000 		.4byte	0xb7
 1591 0186 12       		.byte	0x12
 1592 0187 00       		.byte	0
 1593 0188 0D       		.uleb128 0xd
 1594 0189 81000000 		.4byte	0x81
 1595 018d 98010000 		.4byte	0x198
 1596 0191 0E       		.uleb128 0xe
 1597 0192 B7000000 		.4byte	0xb7
 1598 0196 11       		.byte	0x11
 1599 0197 00       		.byte	0
 1600 0198 0D       		.uleb128 0xd
 1601 0199 81000000 		.4byte	0x81
 1602 019d A8010000 		.4byte	0x1a8
 1603 01a1 0E       		.uleb128 0xe
 1604 01a2 B7000000 		.4byte	0xb7
 1605 01a6 05       		.byte	0x5
 1606 01a7 00       		.byte	0
 1607 01a8 0F       		.uleb128 0xf
 1608 01a9 B8000000 		.4byte	.LASF25
 1609 01ad 02       		.byte	0x2
 1610 01ae 58       		.byte	0x58
 1611 01af 00000000 		.4byte	.LFB35
 1612 01b3 12000000 		.4byte	.LFE35-.LFB35
 1613 01b7 01       		.uleb128 0x1
 1614 01b8 9C       		.byte	0x9c
 1615 01b9 0F       		.uleb128 0xf
 1616 01ba 6A030000 		.4byte	.LASF26
 1617 01be 02       		.byte	0x2
 1618 01bf 5C       		.byte	0x5c
 1619 01c0 00000000 		.4byte	.LFB36
 1620 01c4 12000000 		.4byte	.LFE36-.LFB36
 1621 01c8 01       		.uleb128 0x1
 1622 01c9 9C       		.byte	0x9c
 1623 01ca 0F       		.uleb128 0xf
 1624 01cb 22030000 		.4byte	.LASF27
 1625 01cf 02       		.byte	0x2
 1626 01d0 60       		.byte	0x60
 1627 01d1 00000000 		.4byte	.LFB37
 1628 01d5 34000000 		.4byte	.LFE37-.LFB37
 1629 01d9 01       		.uleb128 0x1
 1630 01da 9C       		.byte	0x9c
 1631 01db 10       		.uleb128 0x10
 1632 01dc 92010000 		.4byte	.LASF29
 1633 01e0 02       		.byte	0x2
 1634 01e1 66       		.byte	0x66
 1635 01e2 00000000 		.4byte	.LFB38
 1636 01e6 34000000 		.4byte	.LFE38-.LFB38
 1637 01ea 01       		.uleb128 0x1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 35


 1638 01eb 9C       		.byte	0x9c
 1639 01ec FC010000 		.4byte	0x1fc
 1640 01f0 11       		.uleb128 0x11
 1641 01f1 89010000 		.4byte	.LASF57
 1642 01f5 02       		.byte	0x2
 1643 01f6 67       		.byte	0x67
 1644 01f7 8C000000 		.4byte	0x8c
 1645 01fb 00       		.byte	0
 1646 01fc 0F       		.uleb128 0xf
 1647 01fd E6000000 		.4byte	.LASF28
 1648 0201 02       		.byte	0x2
 1649 0202 76       		.byte	0x76
 1650 0203 00000000 		.4byte	.LFB39
 1651 0207 26000000 		.4byte	.LFE39-.LFB39
 1652 020b 01       		.uleb128 0x1
 1653 020c 9C       		.byte	0x9c
 1654 020d 10       		.uleb128 0x10
 1655 020e 0B030000 		.4byte	.LASF30
 1656 0212 02       		.byte	0x2
 1657 0213 7C       		.byte	0x7c
 1658 0214 00000000 		.4byte	.LFB40
 1659 0218 3E000000 		.4byte	.LFE40-.LFB40
 1660 021c 01       		.uleb128 0x1
 1661 021d 9C       		.byte	0x9c
 1662 021e 3F020000 		.4byte	0x23f
 1663 0222 08       		.uleb128 0x8
 1664 0223 45010000 		.4byte	.LASF31
 1665 0227 02       		.byte	0x2
 1666 0228 7C       		.byte	0x7c
 1667 0229 81000000 		.4byte	0x81
 1668 022d 02       		.uleb128 0x2
 1669 022e 91       		.byte	0x91
 1670 022f 77       		.sleb128 -9
 1671 0230 08       		.uleb128 0x8
 1672 0231 C3020000 		.4byte	.LASF32
 1673 0235 02       		.byte	0x2
 1674 0236 7C       		.byte	0x7c
 1675 0237 81000000 		.4byte	0x81
 1676 023b 02       		.uleb128 0x2
 1677 023c 91       		.byte	0x91
 1678 023d 76       		.sleb128 -10
 1679 023e 00       		.byte	0
 1680 023f 09       		.uleb128 0x9
 1681 0240 07000000 		.4byte	.LASF34
 1682 0244 02       		.byte	0x2
 1683 0245 82       		.byte	0x82
 1684 0246 8C000000 		.4byte	0x8c
 1685 024a 00000000 		.4byte	.LFB41
 1686 024e 58000000 		.4byte	.LFE41-.LFB41
 1687 0252 01       		.uleb128 0x1
 1688 0253 9C       		.byte	0x9c
 1689 0254 75020000 		.4byte	0x275
 1690 0258 08       		.uleb128 0x8
 1691 0259 59010000 		.4byte	.LASF35
 1692 025d 02       		.byte	0x2
 1693 025e 82       		.byte	0x82
 1694 025f 75020000 		.4byte	0x275
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 36


 1695 0263 02       		.uleb128 0x2
 1696 0264 91       		.byte	0x91
 1697 0265 74       		.sleb128 -12
 1698 0266 12       		.uleb128 0x12
 1699 0267 6C656E00 		.ascii	"len\000"
 1700 026b 02       		.byte	0x2
 1701 026c 82       		.byte	0x82
 1702 026d 81000000 		.4byte	0x81
 1703 0271 02       		.uleb128 0x2
 1704 0272 91       		.byte	0x91
 1705 0273 73       		.sleb128 -13
 1706 0274 00       		.byte	0
 1707 0275 05       		.uleb128 0x5
 1708 0276 04       		.byte	0x4
 1709 0277 81000000 		.4byte	0x81
 1710 027b 09       		.uleb128 0x9
 1711 027c 37030000 		.4byte	.LASF36
 1712 0280 02       		.byte	0x2
 1713 0281 8D       		.byte	0x8d
 1714 0282 8C000000 		.4byte	0x8c
 1715 0286 00000000 		.4byte	.LFB42
 1716 028a 44000000 		.4byte	.LFE42-.LFB42
 1717 028e 01       		.uleb128 0x1
 1718 028f 9C       		.byte	0x9c
 1719 0290 B1020000 		.4byte	0x2b1
 1720 0294 08       		.uleb128 0x8
 1721 0295 59010000 		.4byte	.LASF35
 1722 0299 02       		.byte	0x2
 1723 029a 8D       		.byte	0x8d
 1724 029b 75020000 		.4byte	0x275
 1725 029f 02       		.uleb128 0x2
 1726 02a0 91       		.byte	0x91
 1727 02a1 74       		.sleb128 -12
 1728 02a2 12       		.uleb128 0x12
 1729 02a3 6C656E00 		.ascii	"len\000"
 1730 02a7 02       		.byte	0x2
 1731 02a8 8D       		.byte	0x8d
 1732 02a9 81000000 		.4byte	0x81
 1733 02ad 02       		.uleb128 0x2
 1734 02ae 91       		.byte	0x91
 1735 02af 73       		.sleb128 -13
 1736 02b0 00       		.byte	0
 1737 02b1 10       		.uleb128 0x10
 1738 02b2 72000000 		.4byte	.LASF37
 1739 02b6 02       		.byte	0x2
 1740 02b7 9D       		.byte	0x9d
 1741 02b8 00000000 		.4byte	.LFB43
 1742 02bc 2C010000 		.4byte	.LFE43-.LFB43
 1743 02c0 01       		.uleb128 0x1
 1744 02c1 9C       		.byte	0x9c
 1745 02c2 41030000 		.4byte	0x341
 1746 02c6 08       		.uleb128 0x8
 1747 02c7 F4010000 		.4byte	.LASF38
 1748 02cb 02       		.byte	0x2
 1749 02cc 9D       		.byte	0x9d
 1750 02cd 81000000 		.4byte	0x81
 1751 02d1 03       		.uleb128 0x3
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 37


 1752 02d2 91       		.byte	0x91
 1753 02d3 EF7D     		.sleb128 -273
 1754 02d5 0A       		.uleb128 0xa
 1755 02d6 4F010000 		.4byte	.LASF39
 1756 02da 02       		.byte	0x2
 1757 02db 9E       		.byte	0x9e
 1758 02dc 41030000 		.4byte	0x341
 1759 02e0 03       		.uleb128 0x3
 1760 02e1 91       		.byte	0x91
 1761 02e2 F47D     		.sleb128 -268
 1762 02e4 13       		.uleb128 0x13
 1763 02e5 00000000 		.4byte	.LASF58
 1764 02e9 06       		.byte	0x6
 1765 02ea 00       		.byte	0
 1766 02eb 73000000 		.4byte	0x73
 1767 02ef FA020000 		.4byte	0x2fa
 1768 02f3 14       		.uleb128 0x14
 1769 02f4 BE000000 		.4byte	0xbe
 1770 02f8 15       		.uleb128 0x15
 1771 02f9 00       		.byte	0
 1772 02fa 16       		.uleb128 0x16
 1773 02fb 38000000 		.4byte	.LBB3
 1774 02ff 3C000000 		.4byte	.LBE3-.LBB3
 1775 0303 14030000 		.4byte	0x314
 1776 0307 0C       		.uleb128 0xc
 1777 0308 6300     		.ascii	"c\000"
 1778 030a 02       		.byte	0x2
 1779 030b A2       		.byte	0xa2
 1780 030c 81000000 		.4byte	0x81
 1781 0310 02       		.uleb128 0x2
 1782 0311 91       		.byte	0x91
 1783 0312 77       		.sleb128 -9
 1784 0313 00       		.byte	0
 1785 0314 0B       		.uleb128 0xb
 1786 0315 7A000000 		.4byte	.LBB4
 1787 0319 96000000 		.4byte	.LBE4-.LBB4
 1788 031d 0C       		.uleb128 0xc
 1789 031e 6A00     		.ascii	"j\000"
 1790 0320 02       		.byte	0x2
 1791 0321 A4       		.byte	0xa4
 1792 0322 81000000 		.4byte	0x81
 1793 0326 02       		.uleb128 0x2
 1794 0327 91       		.byte	0x91
 1795 0328 76       		.sleb128 -10
 1796 0329 0B       		.uleb128 0xb
 1797 032a 98000000 		.4byte	.LBB5
 1798 032e 54000000 		.4byte	.LBE5-.LBB5
 1799 0332 0C       		.uleb128 0xc
 1800 0333 6B00     		.ascii	"k\000"
 1801 0335 02       		.byte	0x2
 1802 0336 A6       		.byte	0xa6
 1803 0337 81000000 		.4byte	0x81
 1804 033b 02       		.uleb128 0x2
 1805 033c 91       		.byte	0x91
 1806 033d 75       		.sleb128 -11
 1807 033e 00       		.byte	0
 1808 033f 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 38


 1809 0340 00       		.byte	0
 1810 0341 0D       		.uleb128 0xd
 1811 0342 81000000 		.4byte	0x81
 1812 0346 51030000 		.4byte	0x351
 1813 034a 0E       		.uleb128 0xe
 1814 034b B7000000 		.4byte	0xb7
 1815 034f FF       		.byte	0xff
 1816 0350 00       		.byte	0
 1817 0351 10       		.uleb128 0x10
 1818 0352 B8010000 		.4byte	.LASF40
 1819 0356 02       		.byte	0x2
 1820 0357 AF       		.byte	0xaf
 1821 0358 00000000 		.4byte	.LFB44
 1822 035c 60000000 		.4byte	.LFE44-.LFB44
 1823 0360 01       		.uleb128 0x1
 1824 0361 9C       		.byte	0x9c
 1825 0362 91030000 		.4byte	0x391
 1826 0366 08       		.uleb128 0x8
 1827 0367 D9010000 		.4byte	.LASF41
 1828 036b 02       		.byte	0x2
 1829 036c AF       		.byte	0xaf
 1830 036d 8C000000 		.4byte	0x8c
 1831 0371 02       		.uleb128 0x2
 1832 0372 91       		.byte	0x91
 1833 0373 76       		.sleb128 -10
 1834 0374 08       		.uleb128 0x8
 1835 0375 6B000000 		.4byte	.LASF42
 1836 0379 02       		.byte	0x2
 1837 037a AF       		.byte	0xaf
 1838 037b 81000000 		.4byte	0x81
 1839 037f 02       		.uleb128 0x2
 1840 0380 91       		.byte	0x91
 1841 0381 75       		.sleb128 -11
 1842 0382 08       		.uleb128 0x8
 1843 0383 A0010000 		.4byte	.LASF18
 1844 0387 02       		.byte	0x2
 1845 0388 AF       		.byte	0xaf
 1846 0389 81000000 		.4byte	0x81
 1847 038d 02       		.uleb128 0x2
 1848 038e 91       		.byte	0x91
 1849 038f 74       		.sleb128 -12
 1850 0390 00       		.byte	0
 1851 0391 10       		.uleb128 0x10
 1852 0392 05010000 		.4byte	.LASF43
 1853 0396 02       		.byte	0x2
 1854 0397 BE       		.byte	0xbe
 1855 0398 00000000 		.4byte	.LFB45
 1856 039c 72000000 		.4byte	.LFE45-.LFB45
 1857 03a0 01       		.uleb128 0x1
 1858 03a1 9C       		.byte	0x9c
 1859 03a2 D1030000 		.4byte	0x3d1
 1860 03a6 08       		.uleb128 0x8
 1861 03a7 D9010000 		.4byte	.LASF41
 1862 03ab 02       		.byte	0x2
 1863 03ac BE       		.byte	0xbe
 1864 03ad 8C000000 		.4byte	0x8c
 1865 03b1 02       		.uleb128 0x2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 39


 1866 03b2 91       		.byte	0x91
 1867 03b3 76       		.sleb128 -10
 1868 03b4 08       		.uleb128 0x8
 1869 03b5 6B000000 		.4byte	.LASF42
 1870 03b9 02       		.byte	0x2
 1871 03ba BE       		.byte	0xbe
 1872 03bb 81000000 		.4byte	0x81
 1873 03bf 02       		.uleb128 0x2
 1874 03c0 91       		.byte	0x91
 1875 03c1 75       		.sleb128 -11
 1876 03c2 08       		.uleb128 0x8
 1877 03c3 A0010000 		.4byte	.LASF18
 1878 03c7 02       		.byte	0x2
 1879 03c8 BE       		.byte	0xbe
 1880 03c9 8C000000 		.4byte	0x8c
 1881 03cd 02       		.uleb128 0x2
 1882 03ce 91       		.byte	0x91
 1883 03cf 72       		.sleb128 -14
 1884 03d0 00       		.byte	0
 1885 03d1 10       		.uleb128 0x10
 1886 03d2 D2020000 		.4byte	.LASF44
 1887 03d6 02       		.byte	0x2
 1888 03d7 CE       		.byte	0xce
 1889 03d8 00000000 		.4byte	.LFB46
 1890 03dc 92000000 		.4byte	.LFE46-.LFB46
 1891 03e0 01       		.uleb128 0x1
 1892 03e1 9C       		.byte	0x9c
 1893 03e2 35040000 		.4byte	0x435
 1894 03e6 08       		.uleb128 0x8
 1895 03e7 D9010000 		.4byte	.LASF41
 1896 03eb 02       		.byte	0x2
 1897 03ec CE       		.byte	0xce
 1898 03ed 8C000000 		.4byte	0x8c
 1899 03f1 02       		.uleb128 0x2
 1900 03f2 91       		.byte	0x91
 1901 03f3 6E       		.sleb128 -18
 1902 03f4 08       		.uleb128 0x8
 1903 03f5 6B000000 		.4byte	.LASF42
 1904 03f9 02       		.byte	0x2
 1905 03fa CE       		.byte	0xce
 1906 03fb 81000000 		.4byte	0x81
 1907 03ff 02       		.uleb128 0x2
 1908 0400 91       		.byte	0x91
 1909 0401 6D       		.sleb128 -19
 1910 0402 08       		.uleb128 0x8
 1911 0403 C3000000 		.4byte	.LASF45
 1912 0407 02       		.byte	0x2
 1913 0408 CE       		.byte	0xce
 1914 0409 75020000 		.4byte	0x275
 1915 040d 02       		.uleb128 0x2
 1916 040e 91       		.byte	0x91
 1917 040f 68       		.sleb128 -24
 1918 0410 12       		.uleb128 0x12
 1919 0411 6C656E00 		.ascii	"len\000"
 1920 0415 02       		.byte	0x2
 1921 0416 CE       		.byte	0xce
 1922 0417 81000000 		.4byte	0x81
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 40


 1923 041b 02       		.uleb128 0x2
 1924 041c 91       		.byte	0x91
 1925 041d 6C       		.sleb128 -20
 1926 041e 0B       		.uleb128 0xb
 1927 041f 4E000000 		.4byte	.LBB6
 1928 0423 38000000 		.4byte	.LBE6-.LBB6
 1929 0427 0C       		.uleb128 0xc
 1930 0428 6B00     		.ascii	"k\000"
 1931 042a 02       		.byte	0x2
 1932 042b D8       		.byte	0xd8
 1933 042c 81000000 		.4byte	0x81
 1934 0430 02       		.uleb128 0x2
 1935 0431 91       		.byte	0x91
 1936 0432 77       		.sleb128 -9
 1937 0433 00       		.byte	0
 1938 0434 00       		.byte	0
 1939 0435 09       		.uleb128 0x9
 1940 0436 FE020000 		.4byte	.LASF46
 1941 043a 02       		.byte	0x2
 1942 043b DF       		.byte	0xdf
 1943 043c 81000000 		.4byte	0x81
 1944 0440 00000000 		.4byte	.LFB47
 1945 0444 64000000 		.4byte	.LFE47-.LFB47
 1946 0448 01       		.uleb128 0x1
 1947 0449 9C       		.byte	0x9c
 1948 044a 79040000 		.4byte	0x479
 1949 044e 08       		.uleb128 0x8
 1950 044f D9010000 		.4byte	.LASF41
 1951 0453 02       		.byte	0x2
 1952 0454 DF       		.byte	0xdf
 1953 0455 8C000000 		.4byte	0x8c
 1954 0459 02       		.uleb128 0x2
 1955 045a 91       		.byte	0x91
 1956 045b 66       		.sleb128 -26
 1957 045c 08       		.uleb128 0x8
 1958 045d 6B000000 		.4byte	.LASF42
 1959 0461 02       		.byte	0x2
 1960 0462 DF       		.byte	0xdf
 1961 0463 81000000 		.4byte	0x81
 1962 0467 02       		.uleb128 0x2
 1963 0468 91       		.byte	0x91
 1964 0469 65       		.sleb128 -27
 1965 046a 0A       		.uleb128 0xa
 1966 046b 76030000 		.4byte	.LASF47
 1967 046f 02       		.byte	0x2
 1968 0470 E9       		.byte	0xe9
 1969 0471 81000000 		.4byte	0x81
 1970 0475 02       		.uleb128 0x2
 1971 0476 91       		.byte	0x91
 1972 0477 6F       		.sleb128 -17
 1973 0478 00       		.byte	0
 1974 0479 09       		.uleb128 0x9
 1975 047a 53030000 		.4byte	.LASF48
 1976 047e 02       		.byte	0x2
 1977 047f EE       		.byte	0xee
 1978 0480 8C000000 		.4byte	0x8c
 1979 0484 00000000 		.4byte	.LFB48
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 41


 1980 0488 80000000 		.4byte	.LFE48-.LFB48
 1981 048c 01       		.uleb128 0x1
 1982 048d 9C       		.byte	0x9c
 1983 048e BD040000 		.4byte	0x4bd
 1984 0492 08       		.uleb128 0x8
 1985 0493 D9010000 		.4byte	.LASF41
 1986 0497 02       		.byte	0x2
 1987 0498 EE       		.byte	0xee
 1988 0499 8C000000 		.4byte	0x8c
 1989 049d 02       		.uleb128 0x2
 1990 049e 91       		.byte	0x91
 1991 049f 6E       		.sleb128 -18
 1992 04a0 08       		.uleb128 0x8
 1993 04a1 6B000000 		.4byte	.LASF42
 1994 04a5 02       		.byte	0x2
 1995 04a6 EE       		.byte	0xee
 1996 04a7 81000000 		.4byte	0x81
 1997 04ab 02       		.uleb128 0x2
 1998 04ac 91       		.byte	0x91
 1999 04ad 6D       		.sleb128 -19
 2000 04ae 0A       		.uleb128 0xa
 2001 04af 76030000 		.4byte	.LASF47
 2002 04b3 02       		.byte	0x2
 2003 04b4 EF       		.byte	0xef
 2004 04b5 8C000000 		.4byte	0x8c
 2005 04b9 02       		.uleb128 0x2
 2006 04ba 91       		.byte	0x91
 2007 04bb 76       		.sleb128 -10
 2008 04bc 00       		.byte	0
 2009 04bd 10       		.uleb128 0x10
 2010 04be A4020000 		.4byte	.LASF49
 2011 04c2 02       		.byte	0x2
 2012 04c3 FF       		.byte	0xff
 2013 04c4 00000000 		.4byte	.LFB49
 2014 04c8 8C000000 		.4byte	.LFE49-.LFB49
 2015 04cc 01       		.uleb128 0x1
 2016 04cd 9C       		.byte	0x9c
 2017 04ce 22050000 		.4byte	0x522
 2018 04d2 08       		.uleb128 0x8
 2019 04d3 D9010000 		.4byte	.LASF41
 2020 04d7 02       		.byte	0x2
 2021 04d8 FF       		.byte	0xff
 2022 04d9 8C000000 		.4byte	0x8c
 2023 04dd 02       		.uleb128 0x2
 2024 04de 91       		.byte	0x91
 2025 04df 66       		.sleb128 -26
 2026 04e0 08       		.uleb128 0x8
 2027 04e1 6B000000 		.4byte	.LASF42
 2028 04e5 02       		.byte	0x2
 2029 04e6 FF       		.byte	0xff
 2030 04e7 81000000 		.4byte	0x81
 2031 04eb 02       		.uleb128 0x2
 2032 04ec 91       		.byte	0x91
 2033 04ed 65       		.sleb128 -27
 2034 04ee 08       		.uleb128 0x8
 2035 04ef D0010000 		.4byte	.LASF50
 2036 04f3 02       		.byte	0x2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 42


 2037 04f4 FF       		.byte	0xff
 2038 04f5 75020000 		.4byte	0x275
 2039 04f9 02       		.uleb128 0x2
 2040 04fa 91       		.byte	0x91
 2041 04fb 60       		.sleb128 -32
 2042 04fc 12       		.uleb128 0x12
 2043 04fd 6C656E00 		.ascii	"len\000"
 2044 0501 02       		.byte	0x2
 2045 0502 FF       		.byte	0xff
 2046 0503 81000000 		.4byte	0x81
 2047 0507 02       		.uleb128 0x2
 2048 0508 91       		.byte	0x91
 2049 0509 64       		.sleb128 -28
 2050 050a 0B       		.uleb128 0xb
 2051 050b 46000000 		.4byte	.LBB7
 2052 050f 3A000000 		.4byte	.LBE7-.LBB7
 2053 0513 17       		.uleb128 0x17
 2054 0514 6B00     		.ascii	"k\000"
 2055 0516 02       		.byte	0x2
 2056 0517 0B01     		.2byte	0x10b
 2057 0519 81000000 		.4byte	0x81
 2058 051d 02       		.uleb128 0x2
 2059 051e 91       		.byte	0x91
 2060 051f 6F       		.sleb128 -17
 2061 0520 00       		.byte	0
 2062 0521 00       		.byte	0
 2063 0522 0A       		.uleb128 0xa
 2064 0523 91000000 		.4byte	.LASF51
 2065 0527 02       		.byte	0x2
 2066 0528 17       		.byte	0x17
 2067 0529 8C000000 		.4byte	0x8c
 2068 052d 05       		.uleb128 0x5
 2069 052e 03       		.byte	0x3
 2070 052f 00000000 		.4byte	wiznetTxPointer
 2071 0533 0A       		.uleb128 0xa
 2072 0534 EE020000 		.4byte	.LASF52
 2073 0538 02       		.byte	0x2
 2074 0539 18       		.byte	0x18
 2075 053a 8C000000 		.4byte	0x8c
 2076 053e 05       		.uleb128 0x5
 2077 053f 03       		.byte	0x3
 2078 0540 02000000 		.4byte	wiznetRxPointer
 2079 0544 00       		.byte	0
 2080              		.section	.debug_abbrev,"",%progbits
 2081              	.Ldebug_abbrev0:
 2082 0000 01       		.uleb128 0x1
 2083 0001 11       		.uleb128 0x11
 2084 0002 01       		.byte	0x1
 2085 0003 25       		.uleb128 0x25
 2086 0004 0E       		.uleb128 0xe
 2087 0005 13       		.uleb128 0x13
 2088 0006 0B       		.uleb128 0xb
 2089 0007 03       		.uleb128 0x3
 2090 0008 0E       		.uleb128 0xe
 2091 0009 1B       		.uleb128 0x1b
 2092 000a 0E       		.uleb128 0xe
 2093 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 43


 2094 000c 17       		.uleb128 0x17
 2095 000d 11       		.uleb128 0x11
 2096 000e 01       		.uleb128 0x1
 2097 000f 10       		.uleb128 0x10
 2098 0010 17       		.uleb128 0x17
 2099 0011 00       		.byte	0
 2100 0012 00       		.byte	0
 2101 0013 02       		.uleb128 0x2
 2102 0014 24       		.uleb128 0x24
 2103 0015 00       		.byte	0
 2104 0016 0B       		.uleb128 0xb
 2105 0017 0B       		.uleb128 0xb
 2106 0018 3E       		.uleb128 0x3e
 2107 0019 0B       		.uleb128 0xb
 2108 001a 03       		.uleb128 0x3
 2109 001b 0E       		.uleb128 0xe
 2110 001c 00       		.byte	0
 2111 001d 00       		.byte	0
 2112 001e 03       		.uleb128 0x3
 2113 001f 16       		.uleb128 0x16
 2114 0020 00       		.byte	0
 2115 0021 03       		.uleb128 0x3
 2116 0022 0E       		.uleb128 0xe
 2117 0023 3A       		.uleb128 0x3a
 2118 0024 0B       		.uleb128 0xb
 2119 0025 3B       		.uleb128 0x3b
 2120 0026 0B       		.uleb128 0xb
 2121 0027 49       		.uleb128 0x49
 2122 0028 13       		.uleb128 0x13
 2123 0029 00       		.byte	0
 2124 002a 00       		.byte	0
 2125 002b 04       		.uleb128 0x4
 2126 002c 24       		.uleb128 0x24
 2127 002d 00       		.byte	0
 2128 002e 0B       		.uleb128 0xb
 2129 002f 0B       		.uleb128 0xb
 2130 0030 3E       		.uleb128 0x3e
 2131 0031 0B       		.uleb128 0xb
 2132 0032 03       		.uleb128 0x3
 2133 0033 08       		.uleb128 0x8
 2134 0034 00       		.byte	0
 2135 0035 00       		.byte	0
 2136 0036 05       		.uleb128 0x5
 2137 0037 0F       		.uleb128 0xf
 2138 0038 00       		.byte	0
 2139 0039 0B       		.uleb128 0xb
 2140 003a 0B       		.uleb128 0xb
 2141 003b 49       		.uleb128 0x49
 2142 003c 13       		.uleb128 0x13
 2143 003d 00       		.byte	0
 2144 003e 00       		.byte	0
 2145 003f 06       		.uleb128 0x6
 2146 0040 26       		.uleb128 0x26
 2147 0041 00       		.byte	0
 2148 0042 49       		.uleb128 0x49
 2149 0043 13       		.uleb128 0x13
 2150 0044 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 44


 2151 0045 00       		.byte	0
 2152 0046 07       		.uleb128 0x7
 2153 0047 2E       		.uleb128 0x2e
 2154 0048 01       		.byte	0x1
 2155 0049 03       		.uleb128 0x3
 2156 004a 0E       		.uleb128 0xe
 2157 004b 3A       		.uleb128 0x3a
 2158 004c 0B       		.uleb128 0xb
 2159 004d 3B       		.uleb128 0x3b
 2160 004e 0B       		.uleb128 0xb
 2161 004f 27       		.uleb128 0x27
 2162 0050 19       		.uleb128 0x19
 2163 0051 49       		.uleb128 0x49
 2164 0052 13       		.uleb128 0x13
 2165 0053 11       		.uleb128 0x11
 2166 0054 01       		.uleb128 0x1
 2167 0055 12       		.uleb128 0x12
 2168 0056 06       		.uleb128 0x6
 2169 0057 40       		.uleb128 0x40
 2170 0058 18       		.uleb128 0x18
 2171 0059 9642     		.uleb128 0x2116
 2172 005b 19       		.uleb128 0x19
 2173 005c 01       		.uleb128 0x1
 2174 005d 13       		.uleb128 0x13
 2175 005e 00       		.byte	0
 2176 005f 00       		.byte	0
 2177 0060 08       		.uleb128 0x8
 2178 0061 05       		.uleb128 0x5
 2179 0062 00       		.byte	0
 2180 0063 03       		.uleb128 0x3
 2181 0064 0E       		.uleb128 0xe
 2182 0065 3A       		.uleb128 0x3a
 2183 0066 0B       		.uleb128 0xb
 2184 0067 3B       		.uleb128 0x3b
 2185 0068 0B       		.uleb128 0xb
 2186 0069 49       		.uleb128 0x49
 2187 006a 13       		.uleb128 0x13
 2188 006b 02       		.uleb128 0x2
 2189 006c 18       		.uleb128 0x18
 2190 006d 00       		.byte	0
 2191 006e 00       		.byte	0
 2192 006f 09       		.uleb128 0x9
 2193 0070 2E       		.uleb128 0x2e
 2194 0071 01       		.byte	0x1
 2195 0072 3F       		.uleb128 0x3f
 2196 0073 19       		.uleb128 0x19
 2197 0074 03       		.uleb128 0x3
 2198 0075 0E       		.uleb128 0xe
 2199 0076 3A       		.uleb128 0x3a
 2200 0077 0B       		.uleb128 0xb
 2201 0078 3B       		.uleb128 0x3b
 2202 0079 0B       		.uleb128 0xb
 2203 007a 27       		.uleb128 0x27
 2204 007b 19       		.uleb128 0x19
 2205 007c 49       		.uleb128 0x49
 2206 007d 13       		.uleb128 0x13
 2207 007e 11       		.uleb128 0x11
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 45


 2208 007f 01       		.uleb128 0x1
 2209 0080 12       		.uleb128 0x12
 2210 0081 06       		.uleb128 0x6
 2211 0082 40       		.uleb128 0x40
 2212 0083 18       		.uleb128 0x18
 2213 0084 9642     		.uleb128 0x2116
 2214 0086 19       		.uleb128 0x19
 2215 0087 01       		.uleb128 0x1
 2216 0088 13       		.uleb128 0x13
 2217 0089 00       		.byte	0
 2218 008a 00       		.byte	0
 2219 008b 0A       		.uleb128 0xa
 2220 008c 34       		.uleb128 0x34
 2221 008d 00       		.byte	0
 2222 008e 03       		.uleb128 0x3
 2223 008f 0E       		.uleb128 0xe
 2224 0090 3A       		.uleb128 0x3a
 2225 0091 0B       		.uleb128 0xb
 2226 0092 3B       		.uleb128 0x3b
 2227 0093 0B       		.uleb128 0xb
 2228 0094 49       		.uleb128 0x49
 2229 0095 13       		.uleb128 0x13
 2230 0096 02       		.uleb128 0x2
 2231 0097 18       		.uleb128 0x18
 2232 0098 00       		.byte	0
 2233 0099 00       		.byte	0
 2234 009a 0B       		.uleb128 0xb
 2235 009b 0B       		.uleb128 0xb
 2236 009c 01       		.byte	0x1
 2237 009d 11       		.uleb128 0x11
 2238 009e 01       		.uleb128 0x1
 2239 009f 12       		.uleb128 0x12
 2240 00a0 06       		.uleb128 0x6
 2241 00a1 00       		.byte	0
 2242 00a2 00       		.byte	0
 2243 00a3 0C       		.uleb128 0xc
 2244 00a4 34       		.uleb128 0x34
 2245 00a5 00       		.byte	0
 2246 00a6 03       		.uleb128 0x3
 2247 00a7 08       		.uleb128 0x8
 2248 00a8 3A       		.uleb128 0x3a
 2249 00a9 0B       		.uleb128 0xb
 2250 00aa 3B       		.uleb128 0x3b
 2251 00ab 0B       		.uleb128 0xb
 2252 00ac 49       		.uleb128 0x49
 2253 00ad 13       		.uleb128 0x13
 2254 00ae 02       		.uleb128 0x2
 2255 00af 18       		.uleb128 0x18
 2256 00b0 00       		.byte	0
 2257 00b1 00       		.byte	0
 2258 00b2 0D       		.uleb128 0xd
 2259 00b3 01       		.uleb128 0x1
 2260 00b4 01       		.byte	0x1
 2261 00b5 49       		.uleb128 0x49
 2262 00b6 13       		.uleb128 0x13
 2263 00b7 01       		.uleb128 0x1
 2264 00b8 13       		.uleb128 0x13
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 46


 2265 00b9 00       		.byte	0
 2266 00ba 00       		.byte	0
 2267 00bb 0E       		.uleb128 0xe
 2268 00bc 21       		.uleb128 0x21
 2269 00bd 00       		.byte	0
 2270 00be 49       		.uleb128 0x49
 2271 00bf 13       		.uleb128 0x13
 2272 00c0 2F       		.uleb128 0x2f
 2273 00c1 0B       		.uleb128 0xb
 2274 00c2 00       		.byte	0
 2275 00c3 00       		.byte	0
 2276 00c4 0F       		.uleb128 0xf
 2277 00c5 2E       		.uleb128 0x2e
 2278 00c6 00       		.byte	0
 2279 00c7 3F       		.uleb128 0x3f
 2280 00c8 19       		.uleb128 0x19
 2281 00c9 03       		.uleb128 0x3
 2282 00ca 0E       		.uleb128 0xe
 2283 00cb 3A       		.uleb128 0x3a
 2284 00cc 0B       		.uleb128 0xb
 2285 00cd 3B       		.uleb128 0x3b
 2286 00ce 0B       		.uleb128 0xb
 2287 00cf 27       		.uleb128 0x27
 2288 00d0 19       		.uleb128 0x19
 2289 00d1 11       		.uleb128 0x11
 2290 00d2 01       		.uleb128 0x1
 2291 00d3 12       		.uleb128 0x12
 2292 00d4 06       		.uleb128 0x6
 2293 00d5 40       		.uleb128 0x40
 2294 00d6 18       		.uleb128 0x18
 2295 00d7 9642     		.uleb128 0x2116
 2296 00d9 19       		.uleb128 0x19
 2297 00da 00       		.byte	0
 2298 00db 00       		.byte	0
 2299 00dc 10       		.uleb128 0x10
 2300 00dd 2E       		.uleb128 0x2e
 2301 00de 01       		.byte	0x1
 2302 00df 3F       		.uleb128 0x3f
 2303 00e0 19       		.uleb128 0x19
 2304 00e1 03       		.uleb128 0x3
 2305 00e2 0E       		.uleb128 0xe
 2306 00e3 3A       		.uleb128 0x3a
 2307 00e4 0B       		.uleb128 0xb
 2308 00e5 3B       		.uleb128 0x3b
 2309 00e6 0B       		.uleb128 0xb
 2310 00e7 27       		.uleb128 0x27
 2311 00e8 19       		.uleb128 0x19
 2312 00e9 11       		.uleb128 0x11
 2313 00ea 01       		.uleb128 0x1
 2314 00eb 12       		.uleb128 0x12
 2315 00ec 06       		.uleb128 0x6
 2316 00ed 40       		.uleb128 0x40
 2317 00ee 18       		.uleb128 0x18
 2318 00ef 9642     		.uleb128 0x2116
 2319 00f1 19       		.uleb128 0x19
 2320 00f2 01       		.uleb128 0x1
 2321 00f3 13       		.uleb128 0x13
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 47


 2322 00f4 00       		.byte	0
 2323 00f5 00       		.byte	0
 2324 00f6 11       		.uleb128 0x11
 2325 00f7 34       		.uleb128 0x34
 2326 00f8 00       		.byte	0
 2327 00f9 03       		.uleb128 0x3
 2328 00fa 0E       		.uleb128 0xe
 2329 00fb 3A       		.uleb128 0x3a
 2330 00fc 0B       		.uleb128 0xb
 2331 00fd 3B       		.uleb128 0x3b
 2332 00fe 0B       		.uleb128 0xb
 2333 00ff 49       		.uleb128 0x49
 2334 0100 13       		.uleb128 0x13
 2335 0101 00       		.byte	0
 2336 0102 00       		.byte	0
 2337 0103 12       		.uleb128 0x12
 2338 0104 05       		.uleb128 0x5
 2339 0105 00       		.byte	0
 2340 0106 03       		.uleb128 0x3
 2341 0107 08       		.uleb128 0x8
 2342 0108 3A       		.uleb128 0x3a
 2343 0109 0B       		.uleb128 0xb
 2344 010a 3B       		.uleb128 0x3b
 2345 010b 0B       		.uleb128 0xb
 2346 010c 49       		.uleb128 0x49
 2347 010d 13       		.uleb128 0x13
 2348 010e 02       		.uleb128 0x2
 2349 010f 18       		.uleb128 0x18
 2350 0110 00       		.byte	0
 2351 0111 00       		.byte	0
 2352 0112 13       		.uleb128 0x13
 2353 0113 2E       		.uleb128 0x2e
 2354 0114 01       		.byte	0x1
 2355 0115 3F       		.uleb128 0x3f
 2356 0116 19       		.uleb128 0x19
 2357 0117 03       		.uleb128 0x3
 2358 0118 0E       		.uleb128 0xe
 2359 0119 3A       		.uleb128 0x3a
 2360 011a 0B       		.uleb128 0xb
 2361 011b 3B       		.uleb128 0x3b
 2362 011c 0B       		.uleb128 0xb
 2363 011d 27       		.uleb128 0x27
 2364 011e 19       		.uleb128 0x19
 2365 011f 49       		.uleb128 0x49
 2366 0120 13       		.uleb128 0x13
 2367 0121 3C       		.uleb128 0x3c
 2368 0122 19       		.uleb128 0x19
 2369 0123 01       		.uleb128 0x1
 2370 0124 13       		.uleb128 0x13
 2371 0125 00       		.byte	0
 2372 0126 00       		.byte	0
 2373 0127 14       		.uleb128 0x14
 2374 0128 05       		.uleb128 0x5
 2375 0129 00       		.byte	0
 2376 012a 49       		.uleb128 0x49
 2377 012b 13       		.uleb128 0x13
 2378 012c 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 48


 2379 012d 00       		.byte	0
 2380 012e 15       		.uleb128 0x15
 2381 012f 18       		.uleb128 0x18
 2382 0130 00       		.byte	0
 2383 0131 00       		.byte	0
 2384 0132 00       		.byte	0
 2385 0133 16       		.uleb128 0x16
 2386 0134 0B       		.uleb128 0xb
 2387 0135 01       		.byte	0x1
 2388 0136 11       		.uleb128 0x11
 2389 0137 01       		.uleb128 0x1
 2390 0138 12       		.uleb128 0x12
 2391 0139 06       		.uleb128 0x6
 2392 013a 01       		.uleb128 0x1
 2393 013b 13       		.uleb128 0x13
 2394 013c 00       		.byte	0
 2395 013d 00       		.byte	0
 2396 013e 17       		.uleb128 0x17
 2397 013f 34       		.uleb128 0x34
 2398 0140 00       		.byte	0
 2399 0141 03       		.uleb128 0x3
 2400 0142 08       		.uleb128 0x8
 2401 0143 3A       		.uleb128 0x3a
 2402 0144 0B       		.uleb128 0xb
 2403 0145 3B       		.uleb128 0x3b
 2404 0146 05       		.uleb128 0x5
 2405 0147 49       		.uleb128 0x49
 2406 0148 13       		.uleb128 0x13
 2407 0149 02       		.uleb128 0x2
 2408 014a 18       		.uleb128 0x18
 2409 014b 00       		.byte	0
 2410 014c 00       		.byte	0
 2411 014d 00       		.byte	0
 2412              		.section	.debug_aranges,"",%progbits
 2413 0000 9C000000 		.4byte	0x9c
 2414 0004 0200     		.2byte	0x2
 2415 0006 00000000 		.4byte	.Ldebug_info0
 2416 000a 04       		.byte	0x4
 2417 000b 00       		.byte	0
 2418 000c 0000     		.2byte	0
 2419 000e 0000     		.2byte	0
 2420 0010 00000000 		.4byte	.LFB33
 2421 0014 34000000 		.4byte	.LFE33-.LFB33
 2422 0018 00000000 		.4byte	.LFB34
 2423 001c 6C010000 		.4byte	.LFE34-.LFB34
 2424 0020 00000000 		.4byte	.LFB35
 2425 0024 12000000 		.4byte	.LFE35-.LFB35
 2426 0028 00000000 		.4byte	.LFB36
 2427 002c 12000000 		.4byte	.LFE36-.LFB36
 2428 0030 00000000 		.4byte	.LFB37
 2429 0034 34000000 		.4byte	.LFE37-.LFB37
 2430 0038 00000000 		.4byte	.LFB38
 2431 003c 34000000 		.4byte	.LFE38-.LFB38
 2432 0040 00000000 		.4byte	.LFB39
 2433 0044 26000000 		.4byte	.LFE39-.LFB39
 2434 0048 00000000 		.4byte	.LFB40
 2435 004c 3E000000 		.4byte	.LFE40-.LFB40
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 49


 2436 0050 00000000 		.4byte	.LFB41
 2437 0054 58000000 		.4byte	.LFE41-.LFB41
 2438 0058 00000000 		.4byte	.LFB42
 2439 005c 44000000 		.4byte	.LFE42-.LFB42
 2440 0060 00000000 		.4byte	.LFB43
 2441 0064 2C010000 		.4byte	.LFE43-.LFB43
 2442 0068 00000000 		.4byte	.LFB44
 2443 006c 60000000 		.4byte	.LFE44-.LFB44
 2444 0070 00000000 		.4byte	.LFB45
 2445 0074 72000000 		.4byte	.LFE45-.LFB45
 2446 0078 00000000 		.4byte	.LFB46
 2447 007c 92000000 		.4byte	.LFE46-.LFB46
 2448 0080 00000000 		.4byte	.LFB47
 2449 0084 64000000 		.4byte	.LFE47-.LFB47
 2450 0088 00000000 		.4byte	.LFB48
 2451 008c 80000000 		.4byte	.LFE48-.LFB48
 2452 0090 00000000 		.4byte	.LFB49
 2453 0094 8C000000 		.4byte	.LFE49-.LFB49
 2454 0098 00000000 		.4byte	0
 2455 009c 00000000 		.4byte	0
 2456              		.section	.debug_ranges,"",%progbits
 2457              	.Ldebug_ranges0:
 2458 0000 00000000 		.4byte	.LFB33
 2459 0004 34000000 		.4byte	.LFE33
 2460 0008 00000000 		.4byte	.LFB34
 2461 000c 6C010000 		.4byte	.LFE34
 2462 0010 00000000 		.4byte	.LFB35
 2463 0014 12000000 		.4byte	.LFE35
 2464 0018 00000000 		.4byte	.LFB36
 2465 001c 12000000 		.4byte	.LFE36
 2466 0020 00000000 		.4byte	.LFB37
 2467 0024 34000000 		.4byte	.LFE37
 2468 0028 00000000 		.4byte	.LFB38
 2469 002c 34000000 		.4byte	.LFE38
 2470 0030 00000000 		.4byte	.LFB39
 2471 0034 26000000 		.4byte	.LFE39
 2472 0038 00000000 		.4byte	.LFB40
 2473 003c 3E000000 		.4byte	.LFE40
 2474 0040 00000000 		.4byte	.LFB41
 2475 0044 58000000 		.4byte	.LFE41
 2476 0048 00000000 		.4byte	.LFB42
 2477 004c 44000000 		.4byte	.LFE42
 2478 0050 00000000 		.4byte	.LFB43
 2479 0054 2C010000 		.4byte	.LFE43
 2480 0058 00000000 		.4byte	.LFB44
 2481 005c 60000000 		.4byte	.LFE44
 2482 0060 00000000 		.4byte	.LFB45
 2483 0064 72000000 		.4byte	.LFE45
 2484 0068 00000000 		.4byte	.LFB46
 2485 006c 92000000 		.4byte	.LFE46
 2486 0070 00000000 		.4byte	.LFB47
 2487 0074 64000000 		.4byte	.LFE47
 2488 0078 00000000 		.4byte	.LFB48
 2489 007c 80000000 		.4byte	.LFE48
 2490 0080 00000000 		.4byte	.LFB49
 2491 0084 8C000000 		.4byte	.LFE49
 2492 0088 00000000 		.4byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 50


 2493 008c 00000000 		.4byte	0
 2494              		.section	.debug_line,"",%progbits
 2495              	.Ldebug_line0:
 2496 0000 6F030000 		.section	.debug_str,"MS",%progbits,1
 2496      02006201 
 2496      00000201 
 2496      FB0E0D00 
 2496      01010101 
 2497              	.LASF58:
 2498 0000 7072696E 		.ascii	"printf\000"
 2498      746600
 2499              	.LASF34:
 2500 0007 77697A6E 		.ascii	"wiznetReadUdpFrame\000"
 2500      65745265 
 2500      61645564 
 2500      70467261 
 2500      6D6500
 2501              	.LASF55:
 2502 001a 433A5C55 		.ascii	"C:\\Users\\Samuel\\Documents\\GitHub\\Arm\\arm_cont"
 2502      73657273 
 2502      5C53616D 
 2502      75656C5C 
 2502      446F6375 
 2503 0047 726F6C6C 		.ascii	"roller_v2\\arm_controller_v2.1.cydsn\000"
 2503      65725F76 
 2503      325C6172 
 2503      6D5F636F 
 2503      6E74726F 
 2504              	.LASF42:
 2505 006b 626C6B53 		.ascii	"blkSel\000"
 2505      656C00
 2506              	.LASF37:
 2507 0072 77697A6E 		.ascii	"wiznetPrintRegisters\000"
 2507      65745072 
 2507      696E7452 
 2507      65676973 
 2507      74657273 
 2508              	.LASF3:
 2509 0087 5F5F7569 		.ascii	"__uint8_t\000"
 2509      6E74385F 
 2509      7400
 2510              	.LASF51:
 2511 0091 77697A6E 		.ascii	"wiznetTxPointer\000"
 2511      65745478 
 2511      506F696E 
 2511      74657200 
 2512              	.LASF9:
 2513 00a1 6C6F6E67 		.ascii	"long long unsigned int\000"
 2513      206C6F6E 
 2513      6720756E 
 2513      7369676E 
 2513      65642069 
 2514              	.LASF25:
 2515 00b8 77697A6E 		.ascii	"wiznetOpen\000"
 2515      65744F70 
 2515      656E00
 2516              	.LASF45:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 51


 2517 00c3 73726341 		.ascii	"srcArray\000"
 2517      72726179 
 2517      00
 2518              	.LASF8:
 2519 00cc 6C6F6E67 		.ascii	"long long int\000"
 2519      206C6F6E 
 2519      6720696E 
 2519      7400
 2520              	.LASF0:
 2521 00da 7369676E 		.ascii	"signed char\000"
 2521      65642063 
 2521      68617200 
 2522              	.LASF28:
 2523 00e6 77697A6E 		.ascii	"wiznetClearInterrupts\000"
 2523      6574436C 
 2523      65617249 
 2523      6E746572 
 2523      72757074 
 2524              	.LASF6:
 2525 00fc 6C6F6E67 		.ascii	"long int\000"
 2525      20696E74 
 2525      00
 2526              	.LASF43:
 2527 0105 77697A6E 		.ascii	"wiznetWrite16b\000"
 2527      65745772 
 2527      69746531 
 2527      366200
 2528              	.LASF13:
 2529 0114 75696E74 		.ascii	"uint8\000"
 2529      3800
 2530              	.LASF12:
 2531 011a 75696E74 		.ascii	"uint16_t\000"
 2531      31365F74 
 2531      00
 2532              	.LASF15:
 2533 0123 646F7562 		.ascii	"double\000"
 2533      6C6500
 2534              	.LASF23:
 2535 012a 75647043 		.ascii	"udpConfig\000"
 2535      6F6E6669 
 2535      6700
 2536              	.LASF24:
 2537 0134 77697A6E 		.ascii	"wiznetOldMacAddr\000"
 2537      65744F6C 
 2537      644D6163 
 2537      41646472 
 2537      00
 2538              	.LASF31:
 2539 0145 636F6D6D 		.ascii	"commonInt\000"
 2539      6F6E496E 
 2539      7400
 2540              	.LASF39:
 2541 014f 72656164 		.ascii	"readArray\000"
 2541      41727261 
 2541      7900
 2542              	.LASF35:
 2543 0159 61727261 		.ascii	"array\000"
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 52


 2543      7900
 2544              	.LASF10:
 2545 015f 756E7369 		.ascii	"unsigned int\000"
 2545      676E6564 
 2545      20696E74 
 2545      00
 2546              	.LASF21:
 2547 016c 64737455 		.ascii	"dstUdpPort\000"
 2547      6470506F 
 2547      727400
 2548              	.LASF7:
 2549 0177 6C6F6E67 		.ascii	"long unsigned int\000"
 2549      20756E73 
 2549      69676E65 
 2549      6420696E 
 2549      7400
 2550              	.LASF57:
 2551 0189 72656376 		.ascii	"recvSize\000"
 2551      53697A65 
 2551      00
 2552              	.LASF29:
 2553 0192 77697A6E 		.ascii	"wiznetReceive\000"
 2553      65745265 
 2553      63656976 
 2553      6500
 2554              	.LASF18:
 2555 01a0 64617461 		.ascii	"data\000"
 2555      00
 2556              	.LASF5:
 2557 01a5 73686F72 		.ascii	"short unsigned int\000"
 2557      7420756E 
 2557      7369676E 
 2557      65642069 
 2557      6E7400
 2558              	.LASF40:
 2559 01b8 77697A6E 		.ascii	"wiznetWrite8b\000"
 2559      65745772 
 2559      69746538 
 2559      6200
 2560              	.LASF2:
 2561 01c6 73686F72 		.ascii	"short int\000"
 2561      7420696E 
 2561      7400
 2562              	.LASF50:
 2563 01d0 64737441 		.ascii	"dstArray\000"
 2563      72726179 
 2563      00
 2564              	.LASF41:
 2565 01d9 72656741 		.ascii	"regAddr\000"
 2565      64647200 
 2566              	.LASF20:
 2567 01e1 64737449 		.ascii	"dstIpAddr\000"
 2567      70416464 
 2567      7200
 2568              	.LASF17:
 2569 01eb 73697A65 		.ascii	"sizetype\000"
 2569      74797065 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 53


 2569      00
 2570              	.LASF38:
 2571 01f4 626C6B53 		.ascii	"blkSelect\000"
 2571      656C6563 
 2571      7400
 2572              	.LASF14:
 2573 01fe 666C6F61 		.ascii	"float\000"
 2573      7400
 2574              	.LASF1:
 2575 0204 756E7369 		.ascii	"unsigned char\000"
 2575      676E6564 
 2575      20636861 
 2575      7200
 2576              	.LASF53:
 2577 0212 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2577      4320342E 
 2577      382E3420 
 2577      32303134 
 2577      30353236 
 2578 0245 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2578      20726576 
 2578      6973696F 
 2578      6E203231 
 2578      31333538 
 2579 0278 30202D73 		.ascii	"0 -std=gnu99 -ffunction-sections\000"
 2579      74643D67 
 2579      6E753939 
 2579      202D6666 
 2579      756E6374 
 2580              	.LASF33:
 2581 0299 77697A6E 		.ascii	"wiznetInit\000"
 2581      6574496E 
 2581      697400
 2582              	.LASF49:
 2583 02a4 77697A6E 		.ascii	"wiznetReadArray\000"
 2583      65745265 
 2583      61644172 
 2583      72617900 
 2584              	.LASF54:
 2585 02b4 2E5C7769 		.ascii	".\\wiznet5500.c\000"
 2585      7A6E6574 
 2585      35353030 
 2585      2E6300
 2586              	.LASF32:
 2587 02c3 736F636B 		.ascii	"socketInt\000"
 2587      6574496E 
 2587      7400
 2588              	.LASF16:
 2589 02cd 63686172 		.ascii	"char\000"
 2589      00
 2590              	.LASF44:
 2591 02d2 77697A6E 		.ascii	"wiznetWriteArray\000"
 2591      65745772 
 2591      69746541 
 2591      72726179 
 2591      00
 2592              	.LASF4:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 54


 2593 02e3 5F5F7569 		.ascii	"__uint16_t\000"
 2593      6E743136 
 2593      5F7400
 2594              	.LASF52:
 2595 02ee 77697A6E 		.ascii	"wiznetRxPointer\000"
 2595      65745278 
 2595      506F696E 
 2595      74657200 
 2596              	.LASF46:
 2597 02fe 77697A6E 		.ascii	"wiznetRead8b\000"
 2597      65745265 
 2597      61643862 
 2597      00
 2598              	.LASF30:
 2599 030b 77697A6E 		.ascii	"wiznetConfigInterrupts\000"
 2599      6574436F 
 2599      6E666967 
 2599      496E7465 
 2599      72727570 
 2600              	.LASF27:
 2601 0322 77697A6E 		.ascii	"wiznetSend\000"
 2601      65745365 
 2601      6E6400
 2602              	.LASF19:
 2603 032d 6F776E49 		.ascii	"ownIpAddr\000"
 2603      70416464 
 2603      7200
 2604              	.LASF36:
 2605 0337 77697A6E 		.ascii	"wiznetWriteUdpFrame\000"
 2605      65745772 
 2605      69746555 
 2605      64704672 
 2605      616D6500 
 2606              	.LASF11:
 2607 034b 75696E74 		.ascii	"uint8_t\000"
 2607      385F7400 
 2608              	.LASF48:
 2609 0353 77697A6E 		.ascii	"wiznetRead16b\000"
 2609      65745265 
 2609      61643136 
 2609      6200
 2610              	.LASF22:
 2611 0361 636D6441 		.ascii	"cmdArray\000"
 2611      72726179 
 2611      00
 2612              	.LASF26:
 2613 036a 77697A6E 		.ascii	"wiznetClose\000"
 2613      6574436C 
 2613      6F736500 
 2614              	.LASF47:
 2615 0376 72657375 		.ascii	"result\000"
 2615      6C7400
 2616              	.LASF56:
 2617 037d 7472616E 		.ascii	"transferSPI\000"
 2617      73666572 
 2617      53504900 
 2618              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccK45gBb.s 			page 55



ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"wiznet5500.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.transferSPI,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	transferSPI, %function
  22              	transferSPI:
  23              	.LFB33:
  24              		.file 1 ".\\spi.h"
   1:.\spi.h       **** #ifndef CYPRESS_ROVER_SPI_DEF_H
   2:.\spi.h       **** #define CYPRESS_ROVER_SPI_DEF_H
   3:.\spi.h       **** 
   4:.\spi.h       **** #include <project.h>
   5:.\spi.h       **** #include <stdint.h>
   6:.\spi.h       **** 
   7:.\spi.h       **** // Trying the C99 Definition, as per http://www.greenend.org.uk/rjk/tech/inline.html
   8:.\spi.h       **** // inline uint8_t transferSPI(uint8_t);
   9:.\spi.h       **** 
  10:.\spi.h       **** 
  11:.\spi.h       **** // Try defining the whole thing in the header:
  12:.\spi.h       **** // inline uint8_t transferSPI(uint8_t data){ // This results in compile failure, must be static
  13:.\spi.h       **** static inline uint8_t transferSPI(uint8_t data){
  25              		.loc 1 13 0
  26              		.cfi_startproc
  27 0000 80B5     		push	{r7, lr}
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 7, -8
  30              		.cfi_offset 14, -4
  31 0002 82B0     		sub	sp, sp, #8
  32              		.cfi_def_cfa_offset 16
  33 0004 00AF     		add	r7, sp, #0
  34              		.cfi_def_cfa_register 7
  35 0006 021C     		mov	r2, r0
  36 0008 FB1D     		add	r3, r7, #7
  37 000a 1A70     		strb	r2, [r3]
  14:.\spi.h       **** 	SPI_1_SpiUartWriteTxData(data);
  38              		.loc 1 14 0
  39 000c FB1D     		add	r3, r7, #7
  40 000e 1B78     		ldrb	r3, [r3]
  41 0010 181C     		mov	r0, r3
  42 0012 FFF7FEFF 		bl	SPI_1_SpiUartWriteTxData
  15:.\spi.h       **** 	while(SPI_1_SpiIsBusBusy());
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 2


  43              		.loc 1 15 0
  44 0016 C046     		mov	r8, r8
  45              	.L2:
  46              		.loc 1 15 0 is_stmt 0 discriminator 1
  47 0018 064B     		ldr	r3, .L4
  48 001a 1A68     		ldr	r2, [r3]
  49 001c 0123     		mov	r3, #1
  50 001e 1340     		and	r3, r2
  51 0020 FAD1     		bne	.L2
  16:.\spi.h       **** 	return( ((uint8_t) (SPI_1_SpiUartReadRxData())) );
  52              		.loc 1 16 0 is_stmt 1
  53 0022 FFF7FEFF 		bl	SPI_1_SpiUartReadRxData
  54 0026 031C     		mov	r3, r0
  55 0028 DBB2     		uxtb	r3, r3
  17:.\spi.h       **** }
  56              		.loc 1 17 0
  57 002a 181C     		mov	r0, r3
  58 002c BD46     		mov	sp, r7
  59 002e 02B0     		add	sp, sp, #8
  60              		@ sp needed
  61 0030 80BD     		pop	{r7, pc}
  62              	.L5:
  63 0032 C046     		.align	2
  64              	.L4:
  65 0034 24000740 		.word	1074200612
  66              		.cfi_endproc
  67              	.LFE33:
  68              		.size	transferSPI, .-transferSPI
  69              		.bss
  70              		.align	1
  71              	wiznetTxPointer:
  72 0000 0000     		.space	2
  73              		.align	1
  74              	wiznetRxPointer:
  75 0002 0000     		.space	2
  76              		.section	.rodata
  77              		.align	2
  78              	.LC0:
  79 0000 00       		.byte	0
  80 0001 C0       		.byte	-64
  81 0002 A8       		.byte	-88
  82 0003 01       		.byte	1
  83 0004 01       		.byte	1
  84 0005 FF       		.byte	-1
  85 0006 FF       		.byte	-1
  86 0007 FF       		.byte	-1
  87 0008 00       		.byte	0
  88 0009 00       		.byte	0
  89 000a 08       		.byte	8
  90 000b DC       		.byte	-36
  91 000c FF       		.byte	-1
  92 000d FF       		.byte	-1
  93 000e FF       		.byte	-1
  94 000f C0       		.byte	-64
  95 0010 A8       		.byte	-88
  96 0011 01       		.byte	1
  97 0012 FE       		.byte	-2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 3


  98 0013 00       		.align	2
  99              	.LC1:
 100 0014 02       		.byte	2
 101 0015 00       		.byte	0
 102 0016 FF       		.byte	-1
 103 0017 00       		.byte	0
 104 0018 FE       		.byte	-2
 105 0019 01       		.byte	1
 106 001a 00       		.byte	0
 107 001b 00       		.byte	0
 108 001c 00       		.byte	0
 109 001d 00       		.byte	0
 110 001e 00       		.byte	0
 111 001f 00       		.byte	0
 112 0020 C0       		.byte	-64
 113 0021 A8       		.byte	-88
 114 0022 01       		.byte	1
 115 0023 01       		.byte	1
 116 0024 69       		.byte	105
 117 0025 87       		.byte	-121
 118              		.section	.text.wiznetInit,"ax",%progbits
 119              		.align	2
 120              		.global	wiznetInit
 121              		.code	16
 122              		.thumb_func
 123              		.type	wiznetInit, %function
 124              	wiznetInit:
 125              	.LFB34:
 126              		.file 2 ".\\wiznet5500.c"
   1:.\wiznet5500.c **** // BYU Mars Rover WizNet Library
   2:.\wiznet5500.c **** // Authors:
   3:.\wiznet5500.c **** // 		Steve Carlson
   4:.\wiznet5500.c **** // 		<Your Name Here>
   5:.\wiznet5500.c **** 
   6:.\wiznet5500.c **** // Totally Bare-bones, written-in-24-hours.
   7:.\wiznet5500.c **** // Recommend using https://github.com/Wiznet/WIZ_Ethernet_Library later
   8:.\wiznet5500.c **** 
   9:.\wiznet5500.c **** #include <project.h>
  10:.\wiznet5500.c **** #include <stdint.h>
  11:.\wiznet5500.c **** #include "wiznet5500.h"
  12:.\wiznet5500.c **** #include "spi.h"
  13:.\wiznet5500.c **** // #include "rover_main.h" // For some reason, including this breaks it all. 
  14:.\wiznet5500.c **** // 		Only needed for the following macros:
  15:.\wiznet5500.c **** #define HIGH			1
  16:.\wiznet5500.c **** #define LOW				0
  17:.\wiznet5500.c **** 
  18:.\wiznet5500.c **** // Application-Scope Defines
  19:.\wiznet5500.c **** 
  20:.\wiznet5500.c **** #define WIZ_MAX_MESSAGE_SEGMENT		100
  21:.\wiznet5500.c **** 
  22:.\wiznet5500.c **** // Global Variables
  23:.\wiznet5500.c **** static uint16_t wiznetTxPointer;
  24:.\wiznet5500.c **** static uint16_t wiznetRxPointer;
  25:.\wiznet5500.c **** 
  26:.\wiznet5500.c **** void wiznetInit(uint8_t ownIpAddr, uint8_t dstIpAddr, uint16_t dstUdpPort){
 127              		.loc 2 26 0
 128              		.cfi_startproc
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 4


 129 0000 80B5     		push	{r7, lr}
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 7, -8
 132              		.cfi_offset 14, -4
 133 0002 90B0     		sub	sp, sp, #64
 134              		.cfi_def_cfa_offset 72
 135 0004 00AF     		add	r7, sp, #0
 136              		.cfi_def_cfa_register 7
 137 0006 FB1D     		add	r3, r7, #7
 138 0008 1870     		strb	r0, [r3]
 139 000a BB1D     		add	r3, r7, #6
 140 000c 1970     		strb	r1, [r3]
 141 000e 3B1D     		add	r3, r7, #4
 142 0010 1A80     		strh	r2, [r3]
  27:.\wiznet5500.c **** 	// This is terrible, need a better way.
  28:.\wiznet5500.c **** 	uint8_t cmdArray[] = {0x00,192u,168u,1u,1u,255u,255u,255u,0u,0x00,0x08,0xDC,0xFF,0xFF,0xFF,192u,16
 143              		.loc 2 28 0
 144 0012 3A1C     		mov	r2, r7
 145 0014 2832     		add	r2, r2, #40
 146 0016 4E4B     		ldr	r3, .L9
 147 0018 111C     		mov	r1, r2
 148 001a 1A1C     		mov	r2, r3
 149 001c 1323     		mov	r3, #19
 150 001e 081C     		mov	r0, r1
 151 0020 111C     		mov	r1, r2
 152 0022 1A1C     		mov	r2, r3
 153 0024 FFF7FEFF 		bl	memcpy
  29:.\wiznet5500.c **** 	//                    --- | Gateway Addr  | Subnet Mask     | WizNet's MAC Address        | WizNet
  30:.\wiznet5500.c **** 
  31:.\wiznet5500.c **** 	uint8_t udpConfig[] = {0x02,0x00,0xFF,0x00,0xFE,0x01,0x00,0x00,0x00,0x00,0x00,0x00,192u,168u,1u,1u
 154              		.loc 2 31 0
 155 0028 3A1C     		mov	r2, r7
 156 002a 1432     		add	r2, r2, #20
 157 002c 494B     		ldr	r3, .L9+4
 158 002e 111C     		mov	r1, r2
 159 0030 1A1C     		mov	r2, r3
 160 0032 1223     		mov	r3, #18
 161 0034 081C     		mov	r0, r1
 162 0036 111C     		mov	r1, r2
 163 0038 1A1C     		mov	r2, r3
 164 003a FFF7FEFF 		bl	memcpy
  32:.\wiznet5500.c **** 	//                     UDP |IDLE|Clr |----| :65025  |  No Dst Hw Address          | 192.168.1.1   
  33:.\wiznet5500.c **** 	
  34:.\wiznet5500.c **** 	
  35:.\wiznet5500.c **** 	// Destination IP Address Ending
  36:.\wiznet5500.c **** 	// cmdArray[4] = dstIpAddr; // Gateway should always be 192.168.1.1
  37:.\wiznet5500.c **** 	udpConfig[15] = dstIpAddr;
 165              		.loc 2 37 0
 166 003e 3B1C     		mov	r3, r7
 167 0040 1433     		add	r3, r3, #20
 168 0042 BA1D     		add	r2, r7, #6
 169 0044 1278     		ldrb	r2, [r2]
 170 0046 DA73     		strb	r2, [r3, #15]
  38:.\wiznet5500.c **** 	udpConfig[16] = dstUdpPort>>8;
 171              		.loc 2 38 0
 172 0048 3B1D     		add	r3, r7, #4
 173 004a 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 5


 174 004c 1B0A     		lsr	r3, r3, #8
 175 004e 9BB2     		uxth	r3, r3
 176 0050 DAB2     		uxtb	r2, r3
 177 0052 3B1C     		mov	r3, r7
 178 0054 1433     		add	r3, r3, #20
 179 0056 1A74     		strb	r2, [r3, #16]
  39:.\wiznet5500.c **** 	udpConfig[17] = dstUdpPort&0xFF;
 180              		.loc 2 39 0
 181 0058 3B1D     		add	r3, r7, #4
 182 005a 1B88     		ldrh	r3, [r3]
 183 005c DAB2     		uxtb	r2, r3
 184 005e 3B1C     		mov	r3, r7
 185 0060 1433     		add	r3, r3, #20
 186 0062 5A74     		strb	r2, [r3, #17]
  40:.\wiznet5500.c **** 	
  41:.\wiznet5500.c **** 	// Learn Current MAC
  42:.\wiznet5500.c **** 	uint8_t wiznetOldMacAddr[6];
  43:.\wiznet5500.c **** 	wiznetReadArray(WIZNET_SHAR, WIZNET_BLK_COMMON, wiznetOldMacAddr, 6); // sizeof(wiznetOldMacAddr)
 187              		.loc 2 43 0
 188 0064 3B1C     		mov	r3, r7
 189 0066 0C33     		add	r3, r3, #12
 190 0068 0920     		mov	r0, #9
 191 006a 0021     		mov	r1, #0
 192 006c 1A1C     		mov	r2, r3
 193 006e 0623     		mov	r3, #6
 194 0070 FFF7FEFF 		bl	wiznetReadArray
  44:.\wiznet5500.c **** 	
  45:.\wiznet5500.c **** 	// WizNet Module IP Address Ending
  46:.\wiznet5500.c **** 	cmdArray[18] = ownIpAddr;
 195              		.loc 2 46 0
 196 0074 3B1C     		mov	r3, r7
 197 0076 2833     		add	r3, r3, #40
 198 0078 FA1D     		add	r2, r7, #7
 199 007a 1278     		ldrb	r2, [r2]
 200 007c 9A74     		strb	r2, [r3, #18]
  47:.\wiznet5500.c **** 	
  48:.\wiznet5500.c **** 	// Ephemeral Port (WizNet's own UDP Port when sending UDP, usually value above 0xC000)
  49:.\wiznet5500.c **** 	// uint16_t ephemUdpPort = (0xC000 + ((wiznetOldMacAddr[5]*(1+ownIpAddr))&0x3FFF) ); //Nice way to
  50:.\wiznet5500.c **** 	// udpConfig[4] = ephemUdpPort>>8;
  51:.\wiznet5500.c **** 	// udpConfig[5] = ephemUdpPort&0xFF;
  52:.\wiznet5500.c **** 	
  53:.\wiznet5500.c **** 	udpConfig[4] = dstUdpPort>>8;
 201              		.loc 2 53 0
 202 007e 3B1D     		add	r3, r7, #4
 203 0080 1B88     		ldrh	r3, [r3]
 204 0082 1B0A     		lsr	r3, r3, #8
 205 0084 9BB2     		uxth	r3, r3
 206 0086 DAB2     		uxtb	r2, r3
 207 0088 3B1C     		mov	r3, r7
 208 008a 1433     		add	r3, r3, #20
 209 008c 1A71     		strb	r2, [r3, #4]
  54:.\wiznet5500.c **** 	udpConfig[5] = dstUdpPort&0xFF;
 210              		.loc 2 54 0
 211 008e 3B1D     		add	r3, r7, #4
 212 0090 1B88     		ldrh	r3, [r3]
 213 0092 DAB2     		uxtb	r2, r3
 214 0094 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 6


 215 0096 1433     		add	r3, r3, #20
 216 0098 5A71     		strb	r2, [r3, #5]
  55:.\wiznet5500.c **** 	
  56:.\wiznet5500.c **** 	// Write all the thus prepared values to the WizNet Module and Open the Socket
  57:.\wiznet5500.c **** 	wiznetWriteArray(WIZNET_MR,WIZNET_BLK_COMMON,cmdArray,sizeof(cmdArray));
 217              		.loc 2 57 0
 218 009a 3B1C     		mov	r3, r7
 219 009c 2833     		add	r3, r3, #40
 220 009e 0020     		mov	r0, #0
 221 00a0 0021     		mov	r1, #0
 222 00a2 1A1C     		mov	r2, r3
 223 00a4 1323     		mov	r3, #19
 224 00a6 FFF7FEFF 		bl	wiznetWriteArray
  58:.\wiznet5500.c **** 	wiznetWriteArray(WIZNET_Sn_MR,WIZNET_BLK_S0_REG,udpConfig,sizeof(udpConfig));
 225              		.loc 2 58 0
 226 00aa 3B1C     		mov	r3, r7
 227 00ac 1433     		add	r3, r3, #20
 228 00ae 0020     		mov	r0, #0
 229 00b0 0121     		mov	r1, #1
 230 00b2 1A1C     		mov	r2, r3
 231 00b4 1223     		mov	r3, #18
 232 00b6 FFF7FEFF 		bl	wiznetWriteArray
  59:.\wiznet5500.c **** 	wiznetWriteArray(WIZNET_SHAR,WIZNET_BLK_COMMON,wiznetOldMacAddr,6);
 233              		.loc 2 59 0
 234 00ba 3B1C     		mov	r3, r7
 235 00bc 0C33     		add	r3, r3, #12
 236 00be 0920     		mov	r0, #9
 237 00c0 0021     		mov	r1, #0
 238 00c2 1A1C     		mov	r2, r3
 239 00c4 0623     		mov	r3, #6
 240 00c6 FFF7FEFF 		bl	wiznetWriteArray
  60:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_MSSR,WIZNET_BLK_S0_REG,WIZ_MAX_MESSAGE_SEGMENT);
 241              		.loc 2 60 0
 242 00ca 1220     		mov	r0, #18
 243 00cc 0121     		mov	r1, #1
 244 00ce 6422     		mov	r2, #100
 245 00d0 FFF7FEFF 		bl	wiznetWrite16b
  61:.\wiznet5500.c **** 	CyDelay(100);
 246              		.loc 2 61 0
 247 00d4 6420     		mov	r0, #100
 248 00d6 FFF7FEFF 		bl	CyDelay
  62:.\wiznet5500.c **** 	wiznetOpen();
 249              		.loc 2 62 0
 250 00da FFF7FEFF 		bl	wiznetOpen
  63:.\wiznet5500.c **** 	
  64:.\wiznet5500.c **** 	// Configure Wiznet Interrupts
  65:.\wiznet5500.c **** 	wiznetConfigInterrupts(0x00,(WIZNET_Sn_IMR_SEND_OK | WIZNET_Sn_IMR_RECV) );
 251              		.loc 2 65 0
 252 00de 0020     		mov	r0, #0
 253 00e0 1421     		mov	r1, #20
 254 00e2 FFF7FEFF 		bl	wiznetConfigInterrupts
  66:.\wiznet5500.c **** 
  67:.\wiznet5500.c **** 	// Write sequential values to the TX Buffer, to know where on earth it is writing from.
  68:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 255              		.loc 2 68 0
 256 00e6 0020     		mov	r0, #0
 257 00e8 FFF7FEFF 		bl	WIZ_SS_Write
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 7


  69:.\wiznet5500.c **** 		// Address Phase
  70:.\wiznet5500.c **** 		transferSPI(0>>8);
 258              		.loc 2 70 0
 259 00ec 0020     		mov	r0, #0
 260 00ee FFF7FEFF 		bl	transferSPI
  71:.\wiznet5500.c **** 		transferSPI(0&0xFF);
 261              		.loc 2 71 0
 262 00f2 0020     		mov	r0, #0
 263 00f4 FFF7FEFF 		bl	transferSPI
  72:.\wiznet5500.c **** 		
  73:.\wiznet5500.c **** 		// Control Phase
  74:.\wiznet5500.c **** 		transferSPI(((WIZNET_BLK_S0_TX&0x1F)<<3)|(0x01<<2)|0x00);		
 264              		.loc 2 74 0
 265 00f8 1420     		mov	r0, #20
 266 00fa FFF7FEFF 		bl	transferSPI
 267              	.LBB2:
  75:.\wiznet5500.c **** 		
  76:.\wiznet5500.c **** 		// Data Phase
  77:.\wiznet5500.c **** 		for(uint16_t k=0; k<1024; k++){
 268              		.loc 2 77 0
 269 00fe 3B1C     		mov	r3, r7
 270 0100 3E33     		add	r3, r3, #62
 271 0102 0022     		mov	r2, #0
 272 0104 1A80     		strh	r2, [r3]
 273 0106 16E0     		b	.L7
 274              	.L8:
  78:.\wiznet5500.c **** 			transferSPI((uint8_t)(k>>8));
 275              		.loc 2 78 0 discriminator 2
 276 0108 3B1C     		mov	r3, r7
 277 010a 3E33     		add	r3, r3, #62
 278 010c 1B88     		ldrh	r3, [r3]
 279 010e 1B0A     		lsr	r3, r3, #8
 280 0110 9BB2     		uxth	r3, r3
 281 0112 DBB2     		uxtb	r3, r3
 282 0114 181C     		mov	r0, r3
 283 0116 FFF7FEFF 		bl	transferSPI
  79:.\wiznet5500.c **** 			transferSPI((uint8_t)(k&0xFF));
 284              		.loc 2 79 0 discriminator 2
 285 011a 3B1C     		mov	r3, r7
 286 011c 3E33     		add	r3, r3, #62
 287 011e 1B88     		ldrh	r3, [r3]
 288 0120 DBB2     		uxtb	r3, r3
 289 0122 181C     		mov	r0, r3
 290 0124 FFF7FEFF 		bl	transferSPI
  77:.\wiznet5500.c **** 		for(uint16_t k=0; k<1024; k++){
 291              		.loc 2 77 0 discriminator 2
 292 0128 3B1C     		mov	r3, r7
 293 012a 3E33     		add	r3, r3, #62
 294 012c 1A88     		ldrh	r2, [r3]
 295 012e 3B1C     		mov	r3, r7
 296 0130 3E33     		add	r3, r3, #62
 297 0132 0132     		add	r2, r2, #1
 298 0134 1A80     		strh	r2, [r3]
 299              	.L7:
  77:.\wiznet5500.c **** 		for(uint16_t k=0; k<1024; k++){
 300              		.loc 2 77 0 is_stmt 0 discriminator 1
 301 0136 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 8


 302 0138 3E33     		add	r3, r3, #62
 303 013a 1A88     		ldrh	r2, [r3]
 304 013c 064B     		ldr	r3, .L9+8
 305 013e 9A42     		cmp	r2, r3
 306 0140 E2D9     		bls	.L8
 307              	.LBE2:
  80:.\wiznet5500.c **** 		}
  81:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 308              		.loc 2 81 0 is_stmt 1
 309 0142 0120     		mov	r0, #1
 310 0144 FFF7FEFF 		bl	WIZ_SS_Write
  82:.\wiznet5500.c **** 
  83:.\wiznet5500.c **** 
  84:.\wiznet5500.c **** }
 311              		.loc 2 84 0
 312 0148 BD46     		mov	sp, r7
 313 014a 10B0     		add	sp, sp, #64
 314              		@ sp needed
 315 014c 80BD     		pop	{r7, pc}
 316              	.L10:
 317 014e C046     		.align	2
 318              	.L9:
 319 0150 00000000 		.word	.LC0
 320 0154 14000000 		.word	.LC1
 321 0158 FF030000 		.word	1023
 322              		.cfi_endproc
 323              	.LFE34:
 324              		.size	wiznetInit, .-wiznetInit
 325              		.section	.text.wiznetOpen,"ax",%progbits
 326              		.align	2
 327              		.global	wiznetOpen
 328              		.code	16
 329              		.thumb_func
 330              		.type	wiznetOpen, %function
 331              	wiznetOpen:
 332              	.LFB35:
  85:.\wiznet5500.c **** 
  86:.\wiznet5500.c **** // Public Functions
  87:.\wiznet5500.c **** void wiznetOpen(void){
 333              		.loc 2 87 0
 334              		.cfi_startproc
 335 0000 80B5     		push	{r7, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 7, -8
 338              		.cfi_offset 14, -4
 339 0002 00AF     		add	r7, sp, #0
 340              		.cfi_def_cfa_register 7
  88:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x01); // OPEN UDP on Socket 0
 341              		.loc 2 88 0
 342 0004 0120     		mov	r0, #1
 343 0006 0121     		mov	r1, #1
 344 0008 0122     		mov	r2, #1
 345 000a FFF7FEFF 		bl	wiznetWrite8b
  89:.\wiznet5500.c **** }
 346              		.loc 2 89 0
 347 000e BD46     		mov	sp, r7
 348              		@ sp needed
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 9


 349 0010 80BD     		pop	{r7, pc}
 350              		.cfi_endproc
 351              	.LFE35:
 352              		.size	wiznetOpen, .-wiznetOpen
 353 0012 C046     		.section	.text.wiznetClose,"ax",%progbits
 354              		.align	2
 355              		.global	wiznetClose
 356              		.code	16
 357              		.thumb_func
 358              		.type	wiznetClose, %function
 359              	wiznetClose:
 360              	.LFB36:
  90:.\wiznet5500.c **** 
  91:.\wiznet5500.c **** void wiznetClose(void){
 361              		.loc 2 91 0
 362              		.cfi_startproc
 363 0000 80B5     		push	{r7, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 00AF     		add	r7, sp, #0
 368              		.cfi_def_cfa_register 7
  92:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x10); // Close UDP on Socket 0
 369              		.loc 2 92 0
 370 0004 0120     		mov	r0, #1
 371 0006 0121     		mov	r1, #1
 372 0008 1022     		mov	r2, #16
 373 000a FFF7FEFF 		bl	wiznetWrite8b
  93:.\wiznet5500.c **** }
 374              		.loc 2 93 0
 375 000e BD46     		mov	sp, r7
 376              		@ sp needed
 377 0010 80BD     		pop	{r7, pc}
 378              		.cfi_endproc
 379              	.LFE36:
 380              		.size	wiznetClose, .-wiznetClose
 381 0012 C046     		.section	.text.wiznetSend,"ax",%progbits
 382              		.align	2
 383              		.global	wiznetSend
 384              		.code	16
 385              		.thumb_func
 386              		.type	wiznetSend, %function
 387              	wiznetSend:
 388              	.LFB37:
  94:.\wiznet5500.c **** 
  95:.\wiznet5500.c **** void wiznetSend(void){
 389              		.loc 2 95 0
 390              		.cfi_startproc
 391 0000 80B5     		push	{r7, lr}
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 7, -8
 394              		.cfi_offset 14, -4
 395 0002 00AF     		add	r7, sp, #0
 396              		.cfi_def_cfa_register 7
  96:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG,wiznetTxPointer);
 397              		.loc 2 96 0
 398 0004 0A4B     		ldr	r3, .L14
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 10


 399 0006 1B88     		ldrh	r3, [r3]
 400 0008 2420     		mov	r0, #36
 401 000a 0121     		mov	r1, #1
 402 000c 1A1C     		mov	r2, r3
 403 000e FFF7FEFF 		bl	wiznetWrite16b
  97:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x20);
 404              		.loc 2 97 0
 405 0012 0120     		mov	r0, #1
 406 0014 0121     		mov	r1, #1
 407 0016 2022     		mov	r2, #32
 408 0018 FFF7FEFF 		bl	wiznetWrite8b
  98:.\wiznet5500.c **** 	wiznetTxPointer = wiznetRead16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG);
 409              		.loc 2 98 0
 410 001c 2420     		mov	r0, #36
 411 001e 0121     		mov	r1, #1
 412 0020 FFF7FEFF 		bl	wiznetRead16b
 413 0024 031C     		mov	r3, r0
 414 0026 1A1C     		mov	r2, r3
 415 0028 014B     		ldr	r3, .L14
 416 002a 1A80     		strh	r2, [r3]
  99:.\wiznet5500.c **** }
 417              		.loc 2 99 0
 418 002c BD46     		mov	sp, r7
 419              		@ sp needed
 420 002e 80BD     		pop	{r7, pc}
 421              	.L15:
 422              		.align	2
 423              	.L14:
 424 0030 00000000 		.word	wiznetTxPointer
 425              		.cfi_endproc
 426              	.LFE37:
 427              		.size	wiznetSend, .-wiznetSend
 428              		.section	.text.wiznetReceive,"ax",%progbits
 429              		.align	2
 430              		.global	wiznetReceive
 431              		.code	16
 432              		.thumb_func
 433              		.type	wiznetReceive, %function
 434              	wiznetReceive:
 435              	.LFB38:
 100:.\wiznet5500.c **** 
 101:.\wiznet5500.c **** void wiznetReceive(void){
 436              		.loc 2 101 0
 437              		.cfi_startproc
 438 0000 80B5     		push	{r7, lr}
 439              		.cfi_def_cfa_offset 8
 440              		.cfi_offset 7, -8
 441              		.cfi_offset 14, -4
 442 0002 00AF     		add	r7, sp, #0
 443              		.cfi_def_cfa_register 7
 102:.\wiznet5500.c **** 	uint16_t recvSize;
 103:.\wiznet5500.c **** 	wiznetRxPointer = wiznetRead16b(WIZNET_Sn_RX_RD,WIZNET_BLK_S0_REG);
 444              		.loc 2 103 0
 445 0004 2820     		mov	r0, #40
 446 0006 0121     		mov	r1, #1
 447 0008 FFF7FEFF 		bl	wiznetRead16b
 448 000c 031C     		mov	r3, r0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 11


 449 000e 1A1C     		mov	r2, r3
 450 0010 074B     		ldr	r3, .L17
 451 0012 1A80     		strh	r2, [r3]
 104:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x40);
 452              		.loc 2 104 0
 453 0014 0120     		mov	r0, #1
 454 0016 0121     		mov	r1, #1
 455 0018 4022     		mov	r2, #64
 456 001a FFF7FEFF 		bl	wiznetWrite8b
 105:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_RX_RD,WIZNET_BLK_S0_REG,wiznetRxPointer);
 457              		.loc 2 105 0
 458 001e 044B     		ldr	r3, .L17
 459 0020 1B88     		ldrh	r3, [r3]
 460 0022 2820     		mov	r0, #40
 461 0024 0121     		mov	r1, #1
 462 0026 1A1C     		mov	r2, r3
 463 0028 FFF7FEFF 		bl	wiznetWrite16b
 106:.\wiznet5500.c **** 	
 107:.\wiznet5500.c **** 	// printf(%u,wiznetRxPointer);
 108:.\wiznet5500.c **** }
 464              		.loc 2 108 0
 465 002c BD46     		mov	sp, r7
 466              		@ sp needed
 467 002e 80BD     		pop	{r7, pc}
 468              	.L18:
 469              		.align	2
 470              	.L17:
 471 0030 02000000 		.word	wiznetRxPointer
 472              		.cfi_endproc
 473              	.LFE38:
 474              		.size	wiznetReceive, .-wiznetReceive
 475              		.section	.text.wiznetClearInterrupts,"ax",%progbits
 476              		.align	2
 477              		.global	wiznetClearInterrupts
 478              		.code	16
 479              		.thumb_func
 480              		.type	wiznetClearInterrupts, %function
 481              	wiznetClearInterrupts:
 482              	.LFB39:
 109:.\wiznet5500.c **** 
 110:.\wiznet5500.c **** // void wiznetReceive(void){
 111:.\wiznet5500.c **** 	
 112:.\wiznet5500.c **** // }
 113:.\wiznet5500.c **** 
 114:.\wiznet5500.c **** // uint8_t wiznetReadInterrupts(void){
 115:.\wiznet5500.c **** // }
 116:.\wiznet5500.c **** 
 117:.\wiznet5500.c **** void wiznetClearInterrupts(void){
 483              		.loc 2 117 0
 484              		.cfi_startproc
 485 0000 80B5     		push	{r7, lr}
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 0002 00AF     		add	r7, sp, #0
 490              		.cfi_def_cfa_register 7
 118:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_IR,WIZNET_BLK_S0_REG, 0xFF);
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 12


 491              		.loc 2 118 0
 492 0004 0220     		mov	r0, #2
 493 0006 0121     		mov	r1, #1
 494 0008 FF22     		mov	r2, #255
 495 000a FFF7FEFF 		bl	wiznetWrite8b
 119:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_SIR,WIZNET_BLK_COMMON, 0xFF);
 496              		.loc 2 119 0
 497 000e 1720     		mov	r0, #23
 498 0010 0021     		mov	r1, #0
 499 0012 FF22     		mov	r2, #255
 500 0014 FFF7FEFF 		bl	wiznetWrite8b
 120:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_IR,WIZNET_BLK_COMMON, 0xFF); // Counter-intuitive, but datasheet specifies wr
 501              		.loc 2 120 0
 502 0018 1520     		mov	r0, #21
 503 001a 0021     		mov	r1, #0
 504 001c FF22     		mov	r2, #255
 505 001e FFF7FEFF 		bl	wiznetWrite8b
 121:.\wiznet5500.c **** }
 506              		.loc 2 121 0
 507 0022 BD46     		mov	sp, r7
 508              		@ sp needed
 509 0024 80BD     		pop	{r7, pc}
 510              		.cfi_endproc
 511              	.LFE39:
 512              		.size	wiznetClearInterrupts, .-wiznetClearInterrupts
 513 0026 C046     		.section	.text.wiznetConfigInterrupts,"ax",%progbits
 514              		.align	2
 515              		.global	wiznetConfigInterrupts
 516              		.code	16
 517              		.thumb_func
 518              		.type	wiznetConfigInterrupts, %function
 519              	wiznetConfigInterrupts:
 520              	.LFB40:
 122:.\wiznet5500.c **** 
 123:.\wiznet5500.c **** void wiznetConfigInterrupts(uint8_t commonInt, uint8_t socketInt){
 521              		.loc 2 123 0
 522              		.cfi_startproc
 523 0000 80B5     		push	{r7, lr}
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 82B0     		sub	sp, sp, #8
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 0A1C     		mov	r2, r1
 532 0008 FB1D     		add	r3, r7, #7
 533 000a 011C     		add	r1, r0, #0
 534 000c 1970     		strb	r1, [r3]
 535 000e BB1D     		add	r3, r7, #6
 536 0010 1A70     		strb	r2, [r3]
 124:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_IMR,WIZNET_BLK_S0_REG, socketInt);
 537              		.loc 2 124 0
 538 0012 BB1D     		add	r3, r7, #6
 539 0014 1B78     		ldrb	r3, [r3]
 540 0016 2C20     		mov	r0, #44
 541 0018 0121     		mov	r1, #1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 13


 542 001a 1A1C     		mov	r2, r3
 543 001c FFF7FEFF 		bl	wiznetWrite8b
 125:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_SIMR,WIZNET_BLK_COMMON, 0x01); // Hardwired to just Socket 0
 544              		.loc 2 125 0
 545 0020 1820     		mov	r0, #24
 546 0022 0021     		mov	r1, #0
 547 0024 0122     		mov	r2, #1
 548 0026 FFF7FEFF 		bl	wiznetWrite8b
 126:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_IMR,WIZNET_BLK_COMMON, commonInt);
 549              		.loc 2 126 0
 550 002a FB1D     		add	r3, r7, #7
 551 002c 1B78     		ldrb	r3, [r3]
 552 002e 1620     		mov	r0, #22
 553 0030 0021     		mov	r1, #0
 554 0032 1A1C     		mov	r2, r3
 555 0034 FFF7FEFF 		bl	wiznetWrite8b
 127:.\wiznet5500.c **** }
 556              		.loc 2 127 0
 557 0038 BD46     		mov	sp, r7
 558 003a 02B0     		add	sp, sp, #8
 559              		@ sp needed
 560 003c 80BD     		pop	{r7, pc}
 561              		.cfi_endproc
 562              	.LFE40:
 563              		.size	wiznetConfigInterrupts, .-wiznetConfigInterrupts
 564 003e C046     		.section	.text.wiznetReadUdpFrame,"ax",%progbits
 565              		.align	2
 566              		.global	wiznetReadUdpFrame
 567              		.code	16
 568              		.thumb_func
 569              		.type	wiznetReadUdpFrame, %function
 570              	wiznetReadUdpFrame:
 571              	.LFB41:
 128:.\wiznet5500.c **** 
 129:.\wiznet5500.c **** uint16_t wiznetReadUdpFrame(uint8_t *array, uint8_t len){
 572              		.loc 2 129 0
 573              		.cfi_startproc
 574 0000 80B5     		push	{r7, lr}
 575              		.cfi_def_cfa_offset 8
 576              		.cfi_offset 7, -8
 577              		.cfi_offset 14, -4
 578 0002 82B0     		sub	sp, sp, #8
 579              		.cfi_def_cfa_offset 16
 580 0004 00AF     		add	r7, sp, #0
 581              		.cfi_def_cfa_register 7
 582 0006 7860     		str	r0, [r7, #4]
 583 0008 0A1C     		mov	r2, r1
 584 000a FB1C     		add	r3, r7, #3
 585 000c 1A70     		strb	r2, [r3]
 130:.\wiznet5500.c **** 	wiznetReadArray(wiznetRxPointer, WIZNET_BLK_S0_RX, array, len);
 586              		.loc 2 130 0
 587 000e 114B     		ldr	r3, .L23
 588 0010 1988     		ldrh	r1, [r3]
 589 0012 7A68     		ldr	r2, [r7, #4]
 590 0014 FB1C     		add	r3, r7, #3
 591 0016 1B78     		ldrb	r3, [r3]
 592 0018 081C     		mov	r0, r1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 14


 593 001a 0321     		mov	r1, #3
 594 001c FFF7FEFF 		bl	wiznetReadArray
 131:.\wiznet5500.c **** 	
 132:.\wiznet5500.c **** 	// uint16_t recvSize = 0;
 133:.\wiznet5500.c **** 	wiznetRxPointer = wiznetRead16b(WIZNET_Sn_RX_WR,WIZNET_BLK_S0_REG);
 595              		.loc 2 133 0
 596 0020 2A20     		mov	r0, #42
 597 0022 0121     		mov	r1, #1
 598 0024 FFF7FEFF 		bl	wiznetRead16b
 599 0028 031C     		mov	r3, r0
 600 002a 1A1C     		mov	r2, r3
 601 002c 094B     		ldr	r3, .L23
 602 002e 1A80     		strh	r2, [r3]
 134:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_RX_RD,WIZNET_BLK_S0_REG,wiznetRxPointer);
 603              		.loc 2 134 0
 604 0030 084B     		ldr	r3, .L23
 605 0032 1B88     		ldrh	r3, [r3]
 606 0034 2820     		mov	r0, #40
 607 0036 0121     		mov	r1, #1
 608 0038 1A1C     		mov	r2, r3
 609 003a FFF7FEFF 		bl	wiznetWrite16b
 135:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x40);
 610              		.loc 2 135 0
 611 003e 0120     		mov	r0, #1
 612 0040 0121     		mov	r1, #1
 613 0042 4022     		mov	r2, #64
 614 0044 FFF7FEFF 		bl	wiznetWrite8b
 136:.\wiznet5500.c **** 	return wiznetRxPointer;
 615              		.loc 2 136 0
 616 0048 024B     		ldr	r3, .L23
 617 004a 1B88     		ldrh	r3, [r3]
 137:.\wiznet5500.c **** 	// return recvSize;
 138:.\wiznet5500.c **** }
 618              		.loc 2 138 0
 619 004c 181C     		mov	r0, r3
 620 004e BD46     		mov	sp, r7
 621 0050 02B0     		add	sp, sp, #8
 622              		@ sp needed
 623 0052 80BD     		pop	{r7, pc}
 624              	.L24:
 625              		.align	2
 626              	.L23:
 627 0054 02000000 		.word	wiznetRxPointer
 628              		.cfi_endproc
 629              	.LFE41:
 630              		.size	wiznetReadUdpFrame, .-wiznetReadUdpFrame
 631              		.section	.text.wiznetWriteUdpFrame,"ax",%progbits
 632              		.align	2
 633              		.global	wiznetWriteUdpFrame
 634              		.code	16
 635              		.thumb_func
 636              		.type	wiznetWriteUdpFrame, %function
 637              	wiznetWriteUdpFrame:
 638              	.LFB42:
 139:.\wiznet5500.c **** 
 140:.\wiznet5500.c **** uint16_t wiznetWriteUdpFrame(uint8_t *array, uint8_t len){
 639              		.loc 2 140 0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 15


 640              		.cfi_startproc
 641 0000 80B5     		push	{r7, lr}
 642              		.cfi_def_cfa_offset 8
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 82B0     		sub	sp, sp, #8
 646              		.cfi_def_cfa_offset 16
 647 0004 00AF     		add	r7, sp, #0
 648              		.cfi_def_cfa_register 7
 649 0006 7860     		str	r0, [r7, #4]
 650 0008 0A1C     		mov	r2, r1
 651 000a FB1C     		add	r3, r7, #3
 652 000c 1A70     		strb	r2, [r3]
 141:.\wiznet5500.c **** 	
 142:.\wiznet5500.c **** 	// wiznetTxPointer = wiznetRead16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG);
 143:.\wiznet5500.c **** 	// wiznetWriteArray(wiznetTxPointer,WIZNET_BLK_S0_TX,array,len);
 144:.\wiznet5500.c **** 	// wiznetTxPointer += len;																	
 145:.\wiznet5500.c **** 	// wiznetWrite16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG,wiznetTxPointer);
 146:.\wiznet5500.c **** 	
 147:.\wiznet5500.c **** 	// Re-ordered the above and put the pointer manip in the Send method due to fluke.
 148:.\wiznet5500.c **** 	wiznetWriteArray(wiznetTxPointer,WIZNET_BLK_S0_TX,array,len);
 653              		.loc 2 148 0
 654 000e 0C4B     		ldr	r3, .L27
 655 0010 1988     		ldrh	r1, [r3]
 656 0012 7A68     		ldr	r2, [r7, #4]
 657 0014 FB1C     		add	r3, r7, #3
 658 0016 1B78     		ldrb	r3, [r3]
 659 0018 081C     		mov	r0, r1
 660 001a 0221     		mov	r1, #2
 661 001c FFF7FEFF 		bl	wiznetWriteArray
 149:.\wiznet5500.c **** 	wiznetTxPointer += len;
 662              		.loc 2 149 0
 663 0020 FB1C     		add	r3, r7, #3
 664 0022 1B78     		ldrb	r3, [r3]
 665 0024 9AB2     		uxth	r2, r3
 666 0026 064B     		ldr	r3, .L27
 667 0028 1B88     		ldrh	r3, [r3]
 668 002a D318     		add	r3, r2, r3
 669 002c 9AB2     		uxth	r2, r3
 670 002e 044B     		ldr	r3, .L27
 671 0030 1A80     		strh	r2, [r3]
 150:.\wiznet5500.c **** 	
 151:.\wiznet5500.c **** 	// CyDelay(10); // These two lines proved that the fluke with the WizNet is not time-variant
 152:.\wiznet5500.c **** 	// wiznetRead16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG);
 153:.\wiznet5500.c **** 	return wiznetTxPointer;
 672              		.loc 2 153 0
 673 0032 034B     		ldr	r3, .L27
 674 0034 1B88     		ldrh	r3, [r3]
 154:.\wiznet5500.c **** }
 675              		.loc 2 154 0
 676 0036 181C     		mov	r0, r3
 677 0038 BD46     		mov	sp, r7
 678 003a 02B0     		add	sp, sp, #8
 679              		@ sp needed
 680 003c 80BD     		pop	{r7, pc}
 681              	.L28:
 682 003e C046     		.align	2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 16


 683              	.L27:
 684 0040 00000000 		.word	wiznetTxPointer
 685              		.cfi_endproc
 686              	.LFE42:
 687              		.size	wiznetWriteUdpFrame, .-wiznetWriteUdpFrame
 688              		.section	.rodata
 689 0026 0000     		.align	2
 690              	.LC8:
 691 0028 0A0900   		.ascii	"\012\011\000"
 692 002b 00       		.align	2
 693              	.LC10:
 694 002c 25580900 		.ascii	"%X\011\000"
 695              		.section	.text.wiznetPrintRegisters,"ax",%progbits
 696              		.align	2
 697              		.global	wiznetPrintRegisters
 698              		.code	16
 699              		.thumb_func
 700              		.type	wiznetPrintRegisters, %function
 701              	wiznetPrintRegisters:
 702              	.LFB43:
 155:.\wiznet5500.c **** 
 156:.\wiznet5500.c **** void wiznetPrintRegisters(uint8_t blkSelect){
 703              		.loc 2 156 0
 704              		.cfi_startproc
 705 0000 80B5     		push	{r7, lr}
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 7, -8
 708              		.cfi_offset 14, -4
 709 0002 C4B0     		sub	sp, sp, #272
 710              		.cfi_def_cfa_offset 280
 711 0004 00AF     		add	r7, sp, #0
 712              		.cfi_def_cfa_register 7
 713 0006 021C     		mov	r2, r0
 714 0008 444B     		ldr	r3, .L36
 715 000a 8821     		mov	r1, #136
 716 000c 4900     		lsl	r1, r1, #1
 717 000e C919     		add	r1, r1, r7
 718 0010 CB18     		add	r3, r1, r3
 719 0012 1A70     		strb	r2, [r3]
 157:.\wiznet5500.c **** 	uint8_t readArray[256];
 158:.\wiznet5500.c **** 	wiznetReadArray(0, blkSelect, readArray, 255);
 720              		.loc 2 158 0
 721 0014 414B     		ldr	r3, .L36
 722 0016 8822     		mov	r2, #136
 723 0018 5200     		lsl	r2, r2, #1
 724 001a D219     		add	r2, r2, r7
 725 001c D318     		add	r3, r2, r3
 726 001e 1A78     		ldrb	r2, [r3]
 727 0020 3B1C     		mov	r3, r7
 728 0022 0C33     		add	r3, r3, #12
 729 0024 0020     		mov	r0, #0
 730 0026 111C     		mov	r1, r2
 731 0028 1A1C     		mov	r2, r3
 732 002a FF23     		mov	r3, #255
 733 002c FFF7FEFF 		bl	wiznetReadArray
 159:.\wiznet5500.c **** 	
 160:.\wiznet5500.c **** 	printf("\n\t");
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 17


 734              		.loc 2 160 0
 735 0030 3B4B     		ldr	r3, .L36+4
 736 0032 181C     		mov	r0, r3
 737 0034 FFF7FEFF 		bl	printf
 738              	.LBB3:
 161:.\wiznet5500.c **** 	for(uint8_t c=0; c<16; c++)	printf("%X\t",c);
 739              		.loc 2 161 0
 740 0038 1021     		mov	r1, #16
 741 003a FF31     		add	r1, r1, #255
 742 003c 7B18     		add	r3, r7, r1
 743 003e 0022     		mov	r2, #0
 744 0040 1A70     		strb	r2, [r3]
 745 0042 11E0     		b	.L30
 746              	.L31:
 747              		.loc 2 161 0 is_stmt 0 discriminator 2
 748 0044 1022     		mov	r2, #16
 749 0046 FF32     		add	r2, r2, #255
 750 0048 BB18     		add	r3, r7, r2
 751 004a 1B78     		ldrb	r3, [r3]
 752 004c 354A     		ldr	r2, .L36+8
 753 004e 101C     		mov	r0, r2
 754 0050 191C     		mov	r1, r3
 755 0052 FFF7FEFF 		bl	printf
 756 0056 1021     		mov	r1, #16
 757 0058 FF31     		add	r1, r1, #255
 758 005a 7B18     		add	r3, r7, r1
 759 005c 1A78     		ldrb	r2, [r3]
 760 005e 1021     		mov	r1, #16
 761 0060 FF31     		add	r1, r1, #255
 762 0062 7B18     		add	r3, r7, r1
 763 0064 0132     		add	r2, r2, #1
 764 0066 1A70     		strb	r2, [r3]
 765              	.L30:
 766              		.loc 2 161 0 discriminator 1
 767 0068 1022     		mov	r2, #16
 768 006a FF32     		add	r2, r2, #255
 769 006c BB18     		add	r3, r7, r2
 770 006e 1B78     		ldrb	r3, [r3]
 771 0070 0F2B     		cmp	r3, #15
 772 0072 E7D9     		bls	.L31
 773              	.LBE3:
 162:.\wiznet5500.c **** 	printf("\n");
 774              		.loc 2 162 0 is_stmt 1
 775 0074 0A20     		mov	r0, #10
 776 0076 FFF7FEFF 		bl	putchar
 777              	.LBB4:
 163:.\wiznet5500.c **** 	for(uint8_t j=0; j<8; j++){
 778              		.loc 2 163 0
 779 007a 8721     		mov	r1, #135
 780 007c 4900     		lsl	r1, r1, #1
 781 007e 7B18     		add	r3, r7, r1
 782 0080 0022     		mov	r2, #0
 783 0082 1A70     		strb	r2, [r3]
 784 0084 3EE0     		b	.L32
 785              	.L35:
 164:.\wiznet5500.c **** 		printf("%X\t",j);
 786              		.loc 2 164 0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 18


 787 0086 8722     		mov	r2, #135
 788 0088 5200     		lsl	r2, r2, #1
 789 008a BB18     		add	r3, r7, r2
 790 008c 1B78     		ldrb	r3, [r3]
 791 008e 254A     		ldr	r2, .L36+8
 792 0090 101C     		mov	r0, r2
 793 0092 191C     		mov	r1, r3
 794 0094 FFF7FEFF 		bl	printf
 795              	.LBB5:
 165:.\wiznet5500.c **** 		for(uint8_t k=0; k<16; k++){
 796              		.loc 2 165 0
 797 0098 0E21     		mov	r1, #14
 798 009a FF31     		add	r1, r1, #255
 799 009c 7B18     		add	r3, r7, r1
 800 009e 0022     		mov	r2, #0
 801 00a0 1A70     		strb	r2, [r3]
 802 00a2 1DE0     		b	.L33
 803              	.L34:
 166:.\wiznet5500.c **** 			printf("%X\t",readArray[(16*j)+k]);
 804              		.loc 2 166 0 discriminator 2
 805 00a4 8722     		mov	r2, #135
 806 00a6 5200     		lsl	r2, r2, #1
 807 00a8 BB18     		add	r3, r7, r2
 808 00aa 1B78     		ldrb	r3, [r3]
 809 00ac 1A01     		lsl	r2, r3, #4
 810 00ae 0E21     		mov	r1, #14
 811 00b0 FF31     		add	r1, r1, #255
 812 00b2 7B18     		add	r3, r7, r1
 813 00b4 1B78     		ldrb	r3, [r3]
 814 00b6 D318     		add	r3, r2, r3
 815 00b8 1B4A     		ldr	r2, .L36+12
 816 00ba 8821     		mov	r1, #136
 817 00bc 4900     		lsl	r1, r1, #1
 818 00be C919     		add	r1, r1, r7
 819 00c0 8A18     		add	r2, r1, r2
 820 00c2 D35C     		ldrb	r3, [r2, r3]
 821 00c4 174A     		ldr	r2, .L36+8
 822 00c6 101C     		mov	r0, r2
 823 00c8 191C     		mov	r1, r3
 824 00ca FFF7FEFF 		bl	printf
 165:.\wiznet5500.c **** 		for(uint8_t k=0; k<16; k++){
 825              		.loc 2 165 0 discriminator 2
 826 00ce 0E22     		mov	r2, #14
 827 00d0 FF32     		add	r2, r2, #255
 828 00d2 BB18     		add	r3, r7, r2
 829 00d4 1A78     		ldrb	r2, [r3]
 830 00d6 0E21     		mov	r1, #14
 831 00d8 FF31     		add	r1, r1, #255
 832 00da 7B18     		add	r3, r7, r1
 833 00dc 0132     		add	r2, r2, #1
 834 00de 1A70     		strb	r2, [r3]
 835              	.L33:
 165:.\wiznet5500.c **** 		for(uint8_t k=0; k<16; k++){
 836              		.loc 2 165 0 is_stmt 0 discriminator 1
 837 00e0 0E22     		mov	r2, #14
 838 00e2 FF32     		add	r2, r2, #255
 839 00e4 BB18     		add	r3, r7, r2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 19


 840 00e6 1B78     		ldrb	r3, [r3]
 841 00e8 0F2B     		cmp	r3, #15
 842 00ea DBD9     		bls	.L34
 843              	.LBE5:
 167:.\wiznet5500.c **** 		}
 168:.\wiznet5500.c **** 		printf("\n");
 844              		.loc 2 168 0 is_stmt 1
 845 00ec 0A20     		mov	r0, #10
 846 00ee FFF7FEFF 		bl	putchar
 163:.\wiznet5500.c **** 	for(uint8_t j=0; j<8; j++){
 847              		.loc 2 163 0
 848 00f2 8721     		mov	r1, #135
 849 00f4 4900     		lsl	r1, r1, #1
 850 00f6 7B18     		add	r3, r7, r1
 851 00f8 1A78     		ldrb	r2, [r3]
 852 00fa 8721     		mov	r1, #135
 853 00fc 4900     		lsl	r1, r1, #1
 854 00fe 7B18     		add	r3, r7, r1
 855 0100 0132     		add	r2, r2, #1
 856 0102 1A70     		strb	r2, [r3]
 857              	.L32:
 163:.\wiznet5500.c **** 	for(uint8_t j=0; j<8; j++){
 858              		.loc 2 163 0 is_stmt 0 discriminator 1
 859 0104 8722     		mov	r2, #135
 860 0106 5200     		lsl	r2, r2, #1
 861 0108 BB18     		add	r3, r7, r2
 862 010a 1B78     		ldrb	r3, [r3]
 863 010c 072B     		cmp	r3, #7
 864 010e BAD9     		bls	.L35
 865              	.LBE4:
 169:.\wiznet5500.c **** 	}
 170:.\wiznet5500.c **** 	printf("\n");
 866              		.loc 2 170 0 is_stmt 1
 867 0110 0A20     		mov	r0, #10
 868 0112 FFF7FEFF 		bl	putchar
 171:.\wiznet5500.c **** }
 869              		.loc 2 171 0
 870 0116 BD46     		mov	sp, r7
 871 0118 44B0     		add	sp, sp, #272
 872              		@ sp needed
 873 011a 80BD     		pop	{r7, pc}
 874              	.L37:
 875              		.align	2
 876              	.L36:
 877 011c F7FEFFFF 		.word	-265
 878 0120 28000000 		.word	.LC8
 879 0124 2C000000 		.word	.LC10
 880 0128 FCFEFFFF 		.word	-260
 881              		.cfi_endproc
 882              	.LFE43:
 883              		.size	wiznetPrintRegisters, .-wiznetPrintRegisters
 884              		.section	.text.wiznetWrite8b,"ax",%progbits
 885              		.align	2
 886              		.global	wiznetWrite8b
 887              		.code	16
 888              		.thumb_func
 889              		.type	wiznetWrite8b, %function
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 20


 890              	wiznetWrite8b:
 891              	.LFB44:
 172:.\wiznet5500.c **** 
 173:.\wiznet5500.c **** // Private-like Functions, but visible until this is re-written in C++
 174:.\wiznet5500.c **** void wiznetWrite8b(uint16_t regAddr, uint8_t blkSel, uint8_t data){
 892              		.loc 2 174 0
 893              		.cfi_startproc
 894 0000 80B5     		push	{r7, lr}
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 7, -8
 897              		.cfi_offset 14, -4
 898 0002 82B0     		sub	sp, sp, #8
 899              		.cfi_def_cfa_offset 16
 900 0004 00AF     		add	r7, sp, #0
 901              		.cfi_def_cfa_register 7
 902 0006 BB1D     		add	r3, r7, #6
 903 0008 1880     		strh	r0, [r3]
 904 000a 7B1D     		add	r3, r7, #5
 905 000c 1970     		strb	r1, [r3]
 906 000e 3B1D     		add	r3, r7, #4
 907 0010 1A70     		strb	r2, [r3]
 175:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 908              		.loc 2 175 0
 909 0012 0020     		mov	r0, #0
 910 0014 FFF7FEFF 		bl	WIZ_SS_Write
 176:.\wiznet5500.c **** 		// Address Phase
 177:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 911              		.loc 2 177 0
 912 0018 BB1D     		add	r3, r7, #6
 913 001a 1B88     		ldrh	r3, [r3]
 914 001c 1B0A     		lsr	r3, r3, #8
 915 001e 9BB2     		uxth	r3, r3
 916 0020 DBB2     		uxtb	r3, r3
 917 0022 181C     		mov	r0, r3
 918 0024 FFF7FEFF 		bl	transferSPI
 178:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 919              		.loc 2 178 0
 920 0028 BB1D     		add	r3, r7, #6
 921 002a 1B88     		ldrh	r3, [r3]
 922 002c DBB2     		uxtb	r3, r3
 923 002e 181C     		mov	r0, r3
 924 0030 FFF7FEFF 		bl	transferSPI
 179:.\wiznet5500.c **** 		
 180:.\wiznet5500.c **** 		// Control Phase
 181:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x01<<2)|0x00);		
 925              		.loc 2 181 0
 926 0034 7B1D     		add	r3, r7, #5
 927 0036 1B78     		ldrb	r3, [r3]
 928 0038 DB00     		lsl	r3, r3, #3
 929 003a DBB2     		uxtb	r3, r3
 930 003c 0422     		mov	r2, #4
 931 003e 1343     		orr	r3, r2
 932 0040 DBB2     		uxtb	r3, r3
 933 0042 DBB2     		uxtb	r3, r3
 934 0044 181C     		mov	r0, r3
 935 0046 FFF7FEFF 		bl	transferSPI
 182:.\wiznet5500.c **** 		
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 21


 183:.\wiznet5500.c **** 		// Data Phase
 184:.\wiznet5500.c **** 		transferSPI(data);
 936              		.loc 2 184 0
 937 004a 3B1D     		add	r3, r7, #4
 938 004c 1B78     		ldrb	r3, [r3]
 939 004e 181C     		mov	r0, r3
 940 0050 FFF7FEFF 		bl	transferSPI
 185:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 941              		.loc 2 185 0
 942 0054 0120     		mov	r0, #1
 943 0056 FFF7FEFF 		bl	WIZ_SS_Write
 186:.\wiznet5500.c **** 	// return response;
 187:.\wiznet5500.c **** }
 944              		.loc 2 187 0
 945 005a BD46     		mov	sp, r7
 946 005c 02B0     		add	sp, sp, #8
 947              		@ sp needed
 948 005e 80BD     		pop	{r7, pc}
 949              		.cfi_endproc
 950              	.LFE44:
 951              		.size	wiznetWrite8b, .-wiznetWrite8b
 952              		.section	.text.wiznetWrite16b,"ax",%progbits
 953              		.align	2
 954              		.global	wiznetWrite16b
 955              		.code	16
 956              		.thumb_func
 957              		.type	wiznetWrite16b, %function
 958              	wiznetWrite16b:
 959              	.LFB45:
 188:.\wiznet5500.c **** 
 189:.\wiznet5500.c **** void wiznetWrite16b(uint16_t regAddr, uint8_t blkSel, uint16_t data){
 960              		.loc 2 189 0
 961              		.cfi_startproc
 962 0000 80B5     		push	{r7, lr}
 963              		.cfi_def_cfa_offset 8
 964              		.cfi_offset 7, -8
 965              		.cfi_offset 14, -4
 966 0002 82B0     		sub	sp, sp, #8
 967              		.cfi_def_cfa_offset 16
 968 0004 00AF     		add	r7, sp, #0
 969              		.cfi_def_cfa_register 7
 970 0006 BB1D     		add	r3, r7, #6
 971 0008 1880     		strh	r0, [r3]
 972 000a 7B1D     		add	r3, r7, #5
 973 000c 1970     		strb	r1, [r3]
 974 000e BB1C     		add	r3, r7, #2
 975 0010 1A80     		strh	r2, [r3]
 190:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 976              		.loc 2 190 0
 977 0012 0020     		mov	r0, #0
 978 0014 FFF7FEFF 		bl	WIZ_SS_Write
 191:.\wiznet5500.c **** 		// Address Phase
 192:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 979              		.loc 2 192 0
 980 0018 BB1D     		add	r3, r7, #6
 981 001a 1B88     		ldrh	r3, [r3]
 982 001c 1B0A     		lsr	r3, r3, #8
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 22


 983 001e 9BB2     		uxth	r3, r3
 984 0020 DBB2     		uxtb	r3, r3
 985 0022 181C     		mov	r0, r3
 986 0024 FFF7FEFF 		bl	transferSPI
 193:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 987              		.loc 2 193 0
 988 0028 BB1D     		add	r3, r7, #6
 989 002a 1B88     		ldrh	r3, [r3]
 990 002c DBB2     		uxtb	r3, r3
 991 002e 181C     		mov	r0, r3
 992 0030 FFF7FEFF 		bl	transferSPI
 194:.\wiznet5500.c **** 		
 195:.\wiznet5500.c **** 		// Control Phase
 196:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x01<<2)|0x00);		
 993              		.loc 2 196 0
 994 0034 7B1D     		add	r3, r7, #5
 995 0036 1B78     		ldrb	r3, [r3]
 996 0038 DB00     		lsl	r3, r3, #3
 997 003a DBB2     		uxtb	r3, r3
 998 003c 0422     		mov	r2, #4
 999 003e 1343     		orr	r3, r2
 1000 0040 DBB2     		uxtb	r3, r3
 1001 0042 DBB2     		uxtb	r3, r3
 1002 0044 181C     		mov	r0, r3
 1003 0046 FFF7FEFF 		bl	transferSPI
 197:.\wiznet5500.c **** 		
 198:.\wiznet5500.c **** 		// Data Phase
 199:.\wiznet5500.c **** 		transferSPI(data>>8);
 1004              		.loc 2 199 0
 1005 004a BB1C     		add	r3, r7, #2
 1006 004c 1B88     		ldrh	r3, [r3]
 1007 004e 1B0A     		lsr	r3, r3, #8
 1008 0050 9BB2     		uxth	r3, r3
 1009 0052 DBB2     		uxtb	r3, r3
 1010 0054 181C     		mov	r0, r3
 1011 0056 FFF7FEFF 		bl	transferSPI
 200:.\wiznet5500.c **** 		transferSPI(data&0xFF);
 1012              		.loc 2 200 0
 1013 005a BB1C     		add	r3, r7, #2
 1014 005c 1B88     		ldrh	r3, [r3]
 1015 005e DBB2     		uxtb	r3, r3
 1016 0060 181C     		mov	r0, r3
 1017 0062 FFF7FEFF 		bl	transferSPI
 201:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1018              		.loc 2 201 0
 1019 0066 0120     		mov	r0, #1
 1020 0068 FFF7FEFF 		bl	WIZ_SS_Write
 202:.\wiznet5500.c **** 	// return response;
 203:.\wiznet5500.c **** }
 1021              		.loc 2 203 0
 1022 006c BD46     		mov	sp, r7
 1023 006e 02B0     		add	sp, sp, #8
 1024              		@ sp needed
 1025 0070 80BD     		pop	{r7, pc}
 1026              		.cfi_endproc
 1027              	.LFE45:
 1028              		.size	wiznetWrite16b, .-wiznetWrite16b
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 23


 1029              		.section	.text.wiznetWriteArray,"ax",%progbits
 1030              		.align	2
 1031              		.global	wiznetWriteArray
 1032              		.code	16
 1033              		.thumb_func
 1034              		.type	wiznetWriteArray, %function
 1035              	wiznetWriteArray:
 1036              	.LFB46:
 204:.\wiznet5500.c **** 
 205:.\wiznet5500.c **** void wiznetWriteArray(uint16_t regAddr, uint8_t blkSel, uint8_t *srcArray, uint8_t len){
 1037              		.loc 2 205 0
 1038              		.cfi_startproc
 1039 0000 80B5     		push	{r7, lr}
 1040              		.cfi_def_cfa_offset 8
 1041              		.cfi_offset 7, -8
 1042              		.cfi_offset 14, -4
 1043 0002 84B0     		sub	sp, sp, #16
 1044              		.cfi_def_cfa_offset 24
 1045 0004 00AF     		add	r7, sp, #0
 1046              		.cfi_def_cfa_register 7
 1047 0006 3A60     		str	r2, [r7]
 1048 0008 1A1C     		mov	r2, r3
 1049 000a BB1D     		add	r3, r7, #6
 1050 000c 1880     		strh	r0, [r3]
 1051 000e 7B1D     		add	r3, r7, #5
 1052 0010 1970     		strb	r1, [r3]
 1053 0012 3B1D     		add	r3, r7, #4
 1054 0014 1A70     		strb	r2, [r3]
 206:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1055              		.loc 2 206 0
 1056 0016 0020     		mov	r0, #0
 1057 0018 FFF7FEFF 		bl	WIZ_SS_Write
 207:.\wiznet5500.c **** 		// Address Phase
 208:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1058              		.loc 2 208 0
 1059 001c BB1D     		add	r3, r7, #6
 1060 001e 1B88     		ldrh	r3, [r3]
 1061 0020 1B0A     		lsr	r3, r3, #8
 1062 0022 9BB2     		uxth	r3, r3
 1063 0024 DBB2     		uxtb	r3, r3
 1064 0026 181C     		mov	r0, r3
 1065 0028 FFF7FEFF 		bl	transferSPI
 209:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1066              		.loc 2 209 0
 1067 002c BB1D     		add	r3, r7, #6
 1068 002e 1B88     		ldrh	r3, [r3]
 1069 0030 DBB2     		uxtb	r3, r3
 1070 0032 181C     		mov	r0, r3
 1071 0034 FFF7FEFF 		bl	transferSPI
 210:.\wiznet5500.c **** 		
 211:.\wiznet5500.c **** 		// Control Phase
 212:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x01<<2)|0x00);		
 1072              		.loc 2 212 0
 1073 0038 7B1D     		add	r3, r7, #5
 1074 003a 1B78     		ldrb	r3, [r3]
 1075 003c DB00     		lsl	r3, r3, #3
 1076 003e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 24


 1077 0040 0422     		mov	r2, #4
 1078 0042 1343     		orr	r3, r2
 1079 0044 DBB2     		uxtb	r3, r3
 1080 0046 DBB2     		uxtb	r3, r3
 1081 0048 181C     		mov	r0, r3
 1082 004a FFF7FEFF 		bl	transferSPI
 1083              	.LBB6:
 213:.\wiznet5500.c **** 		
 214:.\wiznet5500.c **** 		// Data Phase
 215:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1084              		.loc 2 215 0
 1085 004e 3B1C     		mov	r3, r7
 1086 0050 0F33     		add	r3, r3, #15
 1087 0052 0022     		mov	r2, #0
 1088 0054 1A70     		strb	r2, [r3]
 1089 0056 0FE0     		b	.L41
 1090              	.L42:
 216:.\wiznet5500.c **** 			transferSPI(srcArray[k]);
 1091              		.loc 2 216 0 discriminator 2
 1092 0058 3B1C     		mov	r3, r7
 1093 005a 0F33     		add	r3, r3, #15
 1094 005c 1B78     		ldrb	r3, [r3]
 1095 005e 3A68     		ldr	r2, [r7]
 1096 0060 D318     		add	r3, r2, r3
 1097 0062 1B78     		ldrb	r3, [r3]
 1098 0064 181C     		mov	r0, r3
 1099 0066 FFF7FEFF 		bl	transferSPI
 215:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1100              		.loc 2 215 0 discriminator 2
 1101 006a 3B1C     		mov	r3, r7
 1102 006c 0F33     		add	r3, r3, #15
 1103 006e 1A78     		ldrb	r2, [r3]
 1104 0070 3B1C     		mov	r3, r7
 1105 0072 0F33     		add	r3, r3, #15
 1106 0074 0132     		add	r2, r2, #1
 1107 0076 1A70     		strb	r2, [r3]
 1108              	.L41:
 215:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1109              		.loc 2 215 0 is_stmt 0 discriminator 1
 1110 0078 3A1C     		mov	r2, r7
 1111 007a 0F32     		add	r2, r2, #15
 1112 007c 3B1D     		add	r3, r7, #4
 1113 007e 1278     		ldrb	r2, [r2]
 1114 0080 1B78     		ldrb	r3, [r3]
 1115 0082 9A42     		cmp	r2, r3
 1116 0084 E8D3     		bcc	.L42
 1117              	.LBE6:
 217:.\wiznet5500.c **** 		}
 218:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1118              		.loc 2 218 0 is_stmt 1
 1119 0086 0120     		mov	r0, #1
 1120 0088 FFF7FEFF 		bl	WIZ_SS_Write
 219:.\wiznet5500.c **** 	// return response;
 220:.\wiznet5500.c **** }
 1121              		.loc 2 220 0
 1122 008c BD46     		mov	sp, r7
 1123 008e 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 25


 1124              		@ sp needed
 1125 0090 80BD     		pop	{r7, pc}
 1126              		.cfi_endproc
 1127              	.LFE46:
 1128              		.size	wiznetWriteArray, .-wiznetWriteArray
 1129 0092 C046     		.section	.text.wiznetRead8b,"ax",%progbits
 1130              		.align	2
 1131              		.global	wiznetRead8b
 1132              		.code	16
 1133              		.thumb_func
 1134              		.type	wiznetRead8b, %function
 1135              	wiznetRead8b:
 1136              	.LFB47:
 221:.\wiznet5500.c **** 
 222:.\wiznet5500.c **** uint8_t wiznetRead8b(uint16_t regAddr, uint8_t blkSel){
 1137              		.loc 2 222 0
 1138              		.cfi_startproc
 1139 0000 90B5     		push	{r4, r7, lr}
 1140              		.cfi_def_cfa_offset 12
 1141              		.cfi_offset 4, -12
 1142              		.cfi_offset 7, -8
 1143              		.cfi_offset 14, -4
 1144 0002 85B0     		sub	sp, sp, #20
 1145              		.cfi_def_cfa_offset 32
 1146 0004 00AF     		add	r7, sp, #0
 1147              		.cfi_def_cfa_register 7
 1148 0006 0A1C     		mov	r2, r1
 1149 0008 BB1D     		add	r3, r7, #6
 1150 000a 011C     		add	r1, r0, #0
 1151 000c 1980     		strh	r1, [r3]
 1152 000e 7B1D     		add	r3, r7, #5
 1153 0010 1A70     		strb	r2, [r3]
 223:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1154              		.loc 2 223 0
 1155 0012 0020     		mov	r0, #0
 1156 0014 FFF7FEFF 		bl	WIZ_SS_Write
 224:.\wiznet5500.c **** 		// Address Phase
 225:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1157              		.loc 2 225 0
 1158 0018 BB1D     		add	r3, r7, #6
 1159 001a 1B88     		ldrh	r3, [r3]
 1160 001c 1B0A     		lsr	r3, r3, #8
 1161 001e 9BB2     		uxth	r3, r3
 1162 0020 DBB2     		uxtb	r3, r3
 1163 0022 181C     		mov	r0, r3
 1164 0024 FFF7FEFF 		bl	transferSPI
 226:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1165              		.loc 2 226 0
 1166 0028 BB1D     		add	r3, r7, #6
 1167 002a 1B88     		ldrh	r3, [r3]
 1168 002c DBB2     		uxtb	r3, r3
 1169 002e 181C     		mov	r0, r3
 1170 0030 FFF7FEFF 		bl	transferSPI
 227:.\wiznet5500.c **** 		
 228:.\wiznet5500.c **** 		// Control Phase
 229:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x00<<2)|0x00);		
 1171              		.loc 2 229 0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 26


 1172 0034 7B1D     		add	r3, r7, #5
 1173 0036 1B78     		ldrb	r3, [r3]
 1174 0038 DB00     		lsl	r3, r3, #3
 1175 003a DBB2     		uxtb	r3, r3
 1176 003c 181C     		mov	r0, r3
 1177 003e FFF7FEFF 		bl	transferSPI
 230:.\wiznet5500.c **** 		
 231:.\wiznet5500.c **** 		// Data Phase
 232:.\wiznet5500.c **** 		uint8_t result = transferSPI(0x00);
 1178              		.loc 2 232 0
 1179 0042 3C1C     		mov	r4, r7
 1180 0044 0F34     		add	r4, r4, #15
 1181 0046 0020     		mov	r0, #0
 1182 0048 FFF7FEFF 		bl	transferSPI
 1183 004c 031C     		mov	r3, r0
 1184 004e 2370     		strb	r3, [r4]
 233:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1185              		.loc 2 233 0
 1186 0050 0120     		mov	r0, #1
 1187 0052 FFF7FEFF 		bl	WIZ_SS_Write
 234:.\wiznet5500.c **** 	return result;
 1188              		.loc 2 234 0
 1189 0056 3B1C     		mov	r3, r7
 1190 0058 0F33     		add	r3, r3, #15
 1191 005a 1B78     		ldrb	r3, [r3]
 235:.\wiznet5500.c **** }
 1192              		.loc 2 235 0
 1193 005c 181C     		mov	r0, r3
 1194 005e BD46     		mov	sp, r7
 1195 0060 05B0     		add	sp, sp, #20
 1196              		@ sp needed
 1197 0062 90BD     		pop	{r4, r7, pc}
 1198              		.cfi_endproc
 1199              	.LFE47:
 1200              		.size	wiznetRead8b, .-wiznetRead8b
 1201              		.section	.text.wiznetRead16b,"ax",%progbits
 1202              		.align	2
 1203              		.global	wiznetRead16b
 1204              		.code	16
 1205              		.thumb_func
 1206              		.type	wiznetRead16b, %function
 1207              	wiznetRead16b:
 1208              	.LFB48:
 236:.\wiznet5500.c **** 
 237:.\wiznet5500.c **** uint16_t wiznetRead16b(uint16_t regAddr, uint8_t blkSel){
 1209              		.loc 2 237 0
 1210              		.cfi_startproc
 1211 0000 80B5     		push	{r7, lr}
 1212              		.cfi_def_cfa_offset 8
 1213              		.cfi_offset 7, -8
 1214              		.cfi_offset 14, -4
 1215 0002 84B0     		sub	sp, sp, #16
 1216              		.cfi_def_cfa_offset 24
 1217 0004 00AF     		add	r7, sp, #0
 1218              		.cfi_def_cfa_register 7
 1219 0006 0A1C     		mov	r2, r1
 1220 0008 BB1D     		add	r3, r7, #6
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 27


 1221 000a 011C     		add	r1, r0, #0
 1222 000c 1980     		strh	r1, [r3]
 1223 000e 7B1D     		add	r3, r7, #5
 1224 0010 1A70     		strb	r2, [r3]
 238:.\wiznet5500.c **** 	uint16_t result;
 239:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1225              		.loc 2 239 0
 1226 0012 0020     		mov	r0, #0
 1227 0014 FFF7FEFF 		bl	WIZ_SS_Write
 240:.\wiznet5500.c **** 		// Address Phase
 241:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1228              		.loc 2 241 0
 1229 0018 BB1D     		add	r3, r7, #6
 1230 001a 1B88     		ldrh	r3, [r3]
 1231 001c 1B0A     		lsr	r3, r3, #8
 1232 001e 9BB2     		uxth	r3, r3
 1233 0020 DBB2     		uxtb	r3, r3
 1234 0022 181C     		mov	r0, r3
 1235 0024 FFF7FEFF 		bl	transferSPI
 242:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1236              		.loc 2 242 0
 1237 0028 BB1D     		add	r3, r7, #6
 1238 002a 1B88     		ldrh	r3, [r3]
 1239 002c DBB2     		uxtb	r3, r3
 1240 002e 181C     		mov	r0, r3
 1241 0030 FFF7FEFF 		bl	transferSPI
 243:.\wiznet5500.c **** 		
 244:.\wiznet5500.c **** 		// Control Phase
 245:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x00<<2)|0x00);		
 1242              		.loc 2 245 0
 1243 0034 7B1D     		add	r3, r7, #5
 1244 0036 1B78     		ldrb	r3, [r3]
 1245 0038 DB00     		lsl	r3, r3, #3
 1246 003a DBB2     		uxtb	r3, r3
 1247 003c 181C     		mov	r0, r3
 1248 003e FFF7FEFF 		bl	transferSPI
 246:.\wiznet5500.c **** 		
 247:.\wiznet5500.c **** 		// Data Phase
 248:.\wiznet5500.c **** 		result = transferSPI(0x00)<<8;
 1249              		.loc 2 248 0
 1250 0042 0020     		mov	r0, #0
 1251 0044 FFF7FEFF 		bl	transferSPI
 1252 0048 031C     		mov	r3, r0
 1253 004a 1A1C     		mov	r2, r3
 1254 004c 3B1C     		mov	r3, r7
 1255 004e 0E33     		add	r3, r3, #14
 1256 0050 1202     		lsl	r2, r2, #8
 1257 0052 1A80     		strh	r2, [r3]
 249:.\wiznet5500.c **** 		result |= transferSPI(0x00);
 1258              		.loc 2 249 0
 1259 0054 0020     		mov	r0, #0
 1260 0056 FFF7FEFF 		bl	transferSPI
 1261 005a 031C     		mov	r3, r0
 1262 005c 191C     		mov	r1, r3
 1263 005e 3B1C     		mov	r3, r7
 1264 0060 0E33     		add	r3, r3, #14
 1265 0062 3A1C     		mov	r2, r7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 28


 1266 0064 0E32     		add	r2, r2, #14
 1267 0066 1288     		ldrh	r2, [r2]
 1268 0068 0A43     		orr	r2, r1
 1269 006a 1A80     		strh	r2, [r3]
 250:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1270              		.loc 2 250 0
 1271 006c 0120     		mov	r0, #1
 1272 006e FFF7FEFF 		bl	WIZ_SS_Write
 251:.\wiznet5500.c **** 	return result;
 1273              		.loc 2 251 0
 1274 0072 3B1C     		mov	r3, r7
 1275 0074 0E33     		add	r3, r3, #14
 1276 0076 1B88     		ldrh	r3, [r3]
 252:.\wiznet5500.c **** }
 1277              		.loc 2 252 0
 1278 0078 181C     		mov	r0, r3
 1279 007a BD46     		mov	sp, r7
 1280 007c 04B0     		add	sp, sp, #16
 1281              		@ sp needed
 1282 007e 80BD     		pop	{r7, pc}
 1283              		.cfi_endproc
 1284              	.LFE48:
 1285              		.size	wiznetRead16b, .-wiznetRead16b
 1286              		.section	.text.wiznetReadArray,"ax",%progbits
 1287              		.align	2
 1288              		.global	wiznetReadArray
 1289              		.code	16
 1290              		.thumb_func
 1291              		.type	wiznetReadArray, %function
 1292              	wiznetReadArray:
 1293              	.LFB49:
 253:.\wiznet5500.c **** 
 254:.\wiznet5500.c **** void wiznetReadArray(uint16_t regAddr, uint8_t blkSel, uint8_t *dstArray, uint8_t len){
 1294              		.loc 2 254 0
 1295              		.cfi_startproc
 1296 0000 90B5     		push	{r4, r7, lr}
 1297              		.cfi_def_cfa_offset 12
 1298              		.cfi_offset 4, -12
 1299              		.cfi_offset 7, -8
 1300              		.cfi_offset 14, -4
 1301 0002 85B0     		sub	sp, sp, #20
 1302              		.cfi_def_cfa_offset 32
 1303 0004 00AF     		add	r7, sp, #0
 1304              		.cfi_def_cfa_register 7
 1305 0006 3A60     		str	r2, [r7]
 1306 0008 1A1C     		mov	r2, r3
 1307 000a BB1D     		add	r3, r7, #6
 1308 000c 1880     		strh	r0, [r3]
 1309 000e 7B1D     		add	r3, r7, #5
 1310 0010 1970     		strb	r1, [r3]
 1311 0012 3B1D     		add	r3, r7, #4
 1312 0014 1A70     		strb	r2, [r3]
 255:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1313              		.loc 2 255 0
 1314 0016 0020     		mov	r0, #0
 1315 0018 FFF7FEFF 		bl	WIZ_SS_Write
 256:.\wiznet5500.c **** 		// uint8_t count = 0;
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 29


 257:.\wiznet5500.c **** 		
 258:.\wiznet5500.c **** 		// Address Phase
 259:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1316              		.loc 2 259 0
 1317 001c BB1D     		add	r3, r7, #6
 1318 001e 1B88     		ldrh	r3, [r3]
 1319 0020 1B0A     		lsr	r3, r3, #8
 1320 0022 9BB2     		uxth	r3, r3
 1321 0024 DBB2     		uxtb	r3, r3
 1322 0026 181C     		mov	r0, r3
 1323 0028 FFF7FEFF 		bl	transferSPI
 260:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1324              		.loc 2 260 0
 1325 002c BB1D     		add	r3, r7, #6
 1326 002e 1B88     		ldrh	r3, [r3]
 1327 0030 DBB2     		uxtb	r3, r3
 1328 0032 181C     		mov	r0, r3
 1329 0034 FFF7FEFF 		bl	transferSPI
 261:.\wiznet5500.c **** 		
 262:.\wiznet5500.c **** 		// Control Phase
 263:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x00<<2)|0x00);	
 1330              		.loc 2 263 0
 1331 0038 7B1D     		add	r3, r7, #5
 1332 003a 1B78     		ldrb	r3, [r3]
 1333 003c DB00     		lsl	r3, r3, #3
 1334 003e DBB2     		uxtb	r3, r3
 1335 0040 181C     		mov	r0, r3
 1336 0042 FFF7FEFF 		bl	transferSPI
 1337              	.LBB7:
 264:.\wiznet5500.c **** 		
 265:.\wiznet5500.c **** 		// Data Phase
 266:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1338              		.loc 2 266 0
 1339 0046 3B1C     		mov	r3, r7
 1340 0048 0F33     		add	r3, r3, #15
 1341 004a 0022     		mov	r2, #0
 1342 004c 1A70     		strb	r2, [r3]
 1343 004e 10E0     		b	.L48
 1344              	.L49:
 267:.\wiznet5500.c **** 			dstArray[k] = transferSPI(0x00);
 1345              		.loc 2 267 0 discriminator 2
 1346 0050 3B1C     		mov	r3, r7
 1347 0052 0F33     		add	r3, r3, #15
 1348 0054 1B78     		ldrb	r3, [r3]
 1349 0056 3A68     		ldr	r2, [r7]
 1350 0058 D418     		add	r4, r2, r3
 1351 005a 0020     		mov	r0, #0
 1352 005c FFF7FEFF 		bl	transferSPI
 1353 0060 031C     		mov	r3, r0
 1354 0062 2370     		strb	r3, [r4]
 266:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1355              		.loc 2 266 0 discriminator 2
 1356 0064 3B1C     		mov	r3, r7
 1357 0066 0F33     		add	r3, r3, #15
 1358 0068 1A78     		ldrb	r2, [r3]
 1359 006a 3B1C     		mov	r3, r7
 1360 006c 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 30


 1361 006e 0132     		add	r2, r2, #1
 1362 0070 1A70     		strb	r2, [r3]
 1363              	.L48:
 266:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1364              		.loc 2 266 0 is_stmt 0 discriminator 1
 1365 0072 3A1C     		mov	r2, r7
 1366 0074 0F32     		add	r2, r2, #15
 1367 0076 3B1D     		add	r3, r7, #4
 1368 0078 1278     		ldrb	r2, [r2]
 1369 007a 1B78     		ldrb	r3, [r3]
 1370 007c 9A42     		cmp	r2, r3
 1371 007e E7D3     		bcc	.L49
 1372              	.LBE7:
 268:.\wiznet5500.c **** 			// count++;
 269:.\wiznet5500.c **** 			// printf("%u",k);
 270:.\wiznet5500.c **** 		}
 271:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1373              		.loc 2 271 0 is_stmt 1
 1374 0080 0120     		mov	r0, #1
 1375 0082 FFF7FEFF 		bl	WIZ_SS_Write
 272:.\wiznet5500.c **** 	// return count;
 273:.\wiznet5500.c **** }
 1376              		.loc 2 273 0
 1377 0086 BD46     		mov	sp, r7
 1378 0088 05B0     		add	sp, sp, #20
 1379              		@ sp needed
 1380 008a 90BD     		pop	{r4, r7, pc}
 1381              		.cfi_endproc
 1382              	.LFE49:
 1383              		.size	wiznetReadArray, .-wiznetReadArray
 1384              		.text
 1385              	.Letext0:
 1386              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4
 1387              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4
 1388              		.file 5 ".\\Generated_Source\\PSoC4/cytypes.h"
 1389              		.file 6 "<built-in>"
 1390              		.section	.debug_info,"",%progbits
 1391              	.Ldebug_info0:
 1392 0000 4E050000 		.4byte	0x54e
 1393 0004 0400     		.2byte	0x4
 1394 0006 00000000 		.4byte	.Ldebug_abbrev0
 1395 000a 04       		.byte	0x4
 1396 000b 01       		.uleb128 0x1
 1397 000c 27020000 		.4byte	.LASF54
 1398 0010 01       		.byte	0x1
 1399 0011 C9020000 		.4byte	.LASF55
 1400 0015 B4000000 		.4byte	.LASF56
 1401 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1402 001d 00000000 		.4byte	0
 1403 0021 00000000 		.4byte	.Ldebug_line0
 1404 0025 02       		.uleb128 0x2
 1405 0026 01       		.byte	0x1
 1406 0027 06       		.byte	0x6
 1407 0028 92000000 		.4byte	.LASF0
 1408 002c 03       		.uleb128 0x3
 1409 002d 36000000 		.4byte	.LASF3
 1410 0031 03       		.byte	0x3
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 31


 1411 0032 1C       		.byte	0x1c
 1412 0033 37000000 		.4byte	0x37
 1413 0037 02       		.uleb128 0x2
 1414 0038 01       		.byte	0x1
 1415 0039 08       		.byte	0x8
 1416 003a 19020000 		.4byte	.LASF1
 1417 003e 02       		.uleb128 0x2
 1418 003f 02       		.byte	0x2
 1419 0040 05       		.byte	0x5
 1420 0041 D5010000 		.4byte	.LASF2
 1421 0045 03       		.uleb128 0x3
 1422 0046 F8020000 		.4byte	.LASF4
 1423 004a 03       		.byte	0x3
 1424 004b 26       		.byte	0x26
 1425 004c 50000000 		.4byte	0x50
 1426 0050 02       		.uleb128 0x2
 1427 0051 02       		.byte	0x2
 1428 0052 07       		.byte	0x7
 1429 0053 B4010000 		.4byte	.LASF5
 1430 0057 02       		.uleb128 0x2
 1431 0058 04       		.byte	0x4
 1432 0059 05       		.byte	0x5
 1433 005a 40000000 		.4byte	.LASF6
 1434 005e 02       		.uleb128 0x2
 1435 005f 04       		.byte	0x4
 1436 0060 07       		.byte	0x7
 1437 0061 86010000 		.4byte	.LASF7
 1438 0065 02       		.uleb128 0x2
 1439 0066 08       		.byte	0x8
 1440 0067 05       		.byte	0x5
 1441 0068 84000000 		.4byte	.LASF8
 1442 006c 02       		.uleb128 0x2
 1443 006d 08       		.byte	0x8
 1444 006e 07       		.byte	0x7
 1445 006f 59000000 		.4byte	.LASF9
 1446 0073 04       		.uleb128 0x4
 1447 0074 04       		.byte	0x4
 1448 0075 05       		.byte	0x5
 1449 0076 696E7400 		.ascii	"int\000"
 1450 007a 02       		.uleb128 0x2
 1451 007b 04       		.byte	0x4
 1452 007c 07       		.byte	0x7
 1453 007d 6E010000 		.4byte	.LASF10
 1454 0081 03       		.uleb128 0x3
 1455 0082 60030000 		.4byte	.LASF11
 1456 0086 04       		.byte	0x4
 1457 0087 2A       		.byte	0x2a
 1458 0088 2C000000 		.4byte	0x2c
 1459 008c 03       		.uleb128 0x3
 1460 008d 22010000 		.4byte	.LASF12
 1461 0091 04       		.byte	0x4
 1462 0092 36       		.byte	0x36
 1463 0093 45000000 		.4byte	0x45
 1464 0097 03       		.uleb128 0x3
 1465 0098 3C010000 		.4byte	.LASF13
 1466 009c 05       		.byte	0x5
 1467 009d A3       		.byte	0xa3
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 32


 1468 009e 5E000000 		.4byte	0x5e
 1469 00a2 02       		.uleb128 0x2
 1470 00a3 04       		.byte	0x4
 1471 00a4 04       		.byte	0x4
 1472 00a5 13020000 		.4byte	.LASF14
 1473 00a9 02       		.uleb128 0x2
 1474 00aa 08       		.byte	0x8
 1475 00ab 04       		.byte	0x4
 1476 00ac 2B010000 		.4byte	.LASF15
 1477 00b0 02       		.uleb128 0x2
 1478 00b1 01       		.byte	0x1
 1479 00b2 08       		.byte	0x8
 1480 00b3 E2020000 		.4byte	.LASF16
 1481 00b7 05       		.uleb128 0x5
 1482 00b8 E8010000 		.4byte	.LASF17
 1483 00bc 05       		.byte	0x5
 1484 00bd 4D01     		.2byte	0x14d
 1485 00bf C3000000 		.4byte	0xc3
 1486 00c3 06       		.uleb128 0x6
 1487 00c4 97000000 		.4byte	0x97
 1488 00c8 02       		.uleb128 0x2
 1489 00c9 04       		.byte	0x4
 1490 00ca 07       		.byte	0x7
 1491 00cb 00020000 		.4byte	.LASF18
 1492 00cf 07       		.uleb128 0x7
 1493 00d0 04       		.byte	0x4
 1494 00d1 D5000000 		.4byte	0xd5
 1495 00d5 08       		.uleb128 0x8
 1496 00d6 B0000000 		.4byte	0xb0
 1497 00da 09       		.uleb128 0x9
 1498 00db 92030000 		.4byte	.LASF57
 1499 00df 01       		.byte	0x1
 1500 00e0 0D       		.byte	0xd
 1501 00e1 81000000 		.4byte	0x81
 1502 00e5 00000000 		.4byte	.LFB33
 1503 00e9 38000000 		.4byte	.LFE33-.LFB33
 1504 00ed 01       		.uleb128 0x1
 1505 00ee 9C       		.byte	0x9c
 1506 00ef 02010000 		.4byte	0x102
 1507 00f3 0A       		.uleb128 0xa
 1508 00f4 AF010000 		.4byte	.LASF19
 1509 00f8 01       		.byte	0x1
 1510 00f9 0D       		.byte	0xd
 1511 00fa 81000000 		.4byte	0x81
 1512 00fe 02       		.uleb128 0x2
 1513 00ff 91       		.byte	0x91
 1514 0100 77       		.sleb128 -9
 1515 0101 00       		.byte	0
 1516 0102 0B       		.uleb128 0xb
 1517 0103 AE020000 		.4byte	.LASF29
 1518 0107 02       		.byte	0x2
 1519 0108 1A       		.byte	0x1a
 1520 0109 00000000 		.4byte	.LFB34
 1521 010d 5C010000 		.4byte	.LFE34-.LFB34
 1522 0111 01       		.uleb128 0x1
 1523 0112 9C       		.byte	0x9c
 1524 0113 85010000 		.4byte	0x185
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 33


 1525 0117 0A       		.uleb128 0xa
 1526 0118 42030000 		.4byte	.LASF20
 1527 011c 02       		.byte	0x2
 1528 011d 1A       		.byte	0x1a
 1529 011e 81000000 		.4byte	0x81
 1530 0122 03       		.uleb128 0x3
 1531 0123 91       		.byte	0x91
 1532 0124 BF7F     		.sleb128 -65
 1533 0126 0A       		.uleb128 0xa
 1534 0127 F6010000 		.4byte	.LASF21
 1535 012b 02       		.byte	0x2
 1536 012c 1A       		.byte	0x1a
 1537 012d 81000000 		.4byte	0x81
 1538 0131 03       		.uleb128 0x3
 1539 0132 91       		.byte	0x91
 1540 0133 BE7F     		.sleb128 -66
 1541 0135 0A       		.uleb128 0xa
 1542 0136 7B010000 		.4byte	.LASF22
 1543 013a 02       		.byte	0x2
 1544 013b 1A       		.byte	0x1a
 1545 013c 8C000000 		.4byte	0x8c
 1546 0140 03       		.uleb128 0x3
 1547 0141 91       		.byte	0x91
 1548 0142 BC7F     		.sleb128 -68
 1549 0144 0C       		.uleb128 0xc
 1550 0145 76030000 		.4byte	.LASF23
 1551 0149 02       		.byte	0x2
 1552 014a 1C       		.byte	0x1c
 1553 014b 85010000 		.4byte	0x185
 1554 014f 02       		.uleb128 0x2
 1555 0150 91       		.byte	0x91
 1556 0151 60       		.sleb128 -32
 1557 0152 0C       		.uleb128 0xc
 1558 0153 32010000 		.4byte	.LASF24
 1559 0157 02       		.byte	0x2
 1560 0158 1F       		.byte	0x1f
 1561 0159 95010000 		.4byte	0x195
 1562 015d 02       		.uleb128 0x2
 1563 015e 91       		.byte	0x91
 1564 015f 4C       		.sleb128 -52
 1565 0160 0C       		.uleb128 0xc
 1566 0161 43010000 		.4byte	.LASF25
 1567 0165 02       		.byte	0x2
 1568 0166 2A       		.byte	0x2a
 1569 0167 A5010000 		.4byte	0x1a5
 1570 016b 02       		.uleb128 0x2
 1571 016c 91       		.byte	0x91
 1572 016d 44       		.sleb128 -60
 1573 016e 0D       		.uleb128 0xd
 1574 016f FE000000 		.4byte	.LBB2
 1575 0173 44000000 		.4byte	.LBE2-.LBB2
 1576 0177 0E       		.uleb128 0xe
 1577 0178 6B00     		.ascii	"k\000"
 1578 017a 02       		.byte	0x2
 1579 017b 4D       		.byte	0x4d
 1580 017c 8C000000 		.4byte	0x8c
 1581 0180 02       		.uleb128 0x2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 34


 1582 0181 91       		.byte	0x91
 1583 0182 76       		.sleb128 -10
 1584 0183 00       		.byte	0
 1585 0184 00       		.byte	0
 1586 0185 0F       		.uleb128 0xf
 1587 0186 81000000 		.4byte	0x81
 1588 018a 95010000 		.4byte	0x195
 1589 018e 10       		.uleb128 0x10
 1590 018f C8000000 		.4byte	0xc8
 1591 0193 12       		.byte	0x12
 1592 0194 00       		.byte	0
 1593 0195 0F       		.uleb128 0xf
 1594 0196 81000000 		.4byte	0x81
 1595 019a A5010000 		.4byte	0x1a5
 1596 019e 10       		.uleb128 0x10
 1597 019f C8000000 		.4byte	0xc8
 1598 01a3 11       		.byte	0x11
 1599 01a4 00       		.byte	0
 1600 01a5 0F       		.uleb128 0xf
 1601 01a6 81000000 		.4byte	0x81
 1602 01aa B5010000 		.4byte	0x1b5
 1603 01ae 10       		.uleb128 0x10
 1604 01af C8000000 		.4byte	0xc8
 1605 01b3 05       		.byte	0x5
 1606 01b4 00       		.byte	0
 1607 01b5 11       		.uleb128 0x11
 1608 01b6 70000000 		.4byte	.LASF26
 1609 01ba 02       		.byte	0x2
 1610 01bb 57       		.byte	0x57
 1611 01bc 00000000 		.4byte	.LFB35
 1612 01c0 12000000 		.4byte	.LFE35-.LFB35
 1613 01c4 01       		.uleb128 0x1
 1614 01c5 9C       		.byte	0x9c
 1615 01c6 11       		.uleb128 0x11
 1616 01c7 7F030000 		.4byte	.LASF27
 1617 01cb 02       		.byte	0x2
 1618 01cc 5B       		.byte	0x5b
 1619 01cd 00000000 		.4byte	.LFB36
 1620 01d1 12000000 		.4byte	.LFE36-.LFB36
 1621 01d5 01       		.uleb128 0x1
 1622 01d6 9C       		.byte	0x9c
 1623 01d7 11       		.uleb128 0x11
 1624 01d8 37030000 		.4byte	.LASF28
 1625 01dc 02       		.byte	0x2
 1626 01dd 5F       		.byte	0x5f
 1627 01de 00000000 		.4byte	.LFB37
 1628 01e2 34000000 		.4byte	.LFE37-.LFB37
 1629 01e6 01       		.uleb128 0x1
 1630 01e7 9C       		.byte	0x9c
 1631 01e8 0B       		.uleb128 0xb
 1632 01e9 A1010000 		.4byte	.LASF30
 1633 01ed 02       		.byte	0x2
 1634 01ee 65       		.byte	0x65
 1635 01ef 00000000 		.4byte	.LFB38
 1636 01f3 34000000 		.4byte	.LFE38-.LFB38
 1637 01f7 01       		.uleb128 0x1
 1638 01f8 9C       		.byte	0x9c
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 35


 1639 01f9 09020000 		.4byte	0x209
 1640 01fd 12       		.uleb128 0x12
 1641 01fe 98010000 		.4byte	.LASF58
 1642 0202 02       		.byte	0x2
 1643 0203 66       		.byte	0x66
 1644 0204 8C000000 		.4byte	0x8c
 1645 0208 00       		.byte	0
 1646 0209 11       		.uleb128 0x11
 1647 020a 9E000000 		.4byte	.LASF31
 1648 020e 02       		.byte	0x2
 1649 020f 75       		.byte	0x75
 1650 0210 00000000 		.4byte	.LFB39
 1651 0214 26000000 		.4byte	.LFE39-.LFB39
 1652 0218 01       		.uleb128 0x1
 1653 0219 9C       		.byte	0x9c
 1654 021a 0B       		.uleb128 0xb
 1655 021b 20030000 		.4byte	.LASF32
 1656 021f 02       		.byte	0x2
 1657 0220 7B       		.byte	0x7b
 1658 0221 00000000 		.4byte	.LFB40
 1659 0225 3E000000 		.4byte	.LFE40-.LFB40
 1660 0229 01       		.uleb128 0x1
 1661 022a 9C       		.byte	0x9c
 1662 022b 4C020000 		.4byte	0x24c
 1663 022f 0A       		.uleb128 0xa
 1664 0230 54010000 		.4byte	.LASF33
 1665 0234 02       		.byte	0x2
 1666 0235 7B       		.byte	0x7b
 1667 0236 81000000 		.4byte	0x81
 1668 023a 02       		.uleb128 0x2
 1669 023b 91       		.byte	0x91
 1670 023c 77       		.sleb128 -9
 1671 023d 0A       		.uleb128 0xa
 1672 023e D8020000 		.4byte	.LASF34
 1673 0242 02       		.byte	0x2
 1674 0243 7B       		.byte	0x7b
 1675 0244 81000000 		.4byte	0x81
 1676 0248 02       		.uleb128 0x2
 1677 0249 91       		.byte	0x91
 1678 024a 76       		.sleb128 -10
 1679 024b 00       		.byte	0
 1680 024c 13       		.uleb128 0x13
 1681 024d 07000000 		.4byte	.LASF36
 1682 0251 02       		.byte	0x2
 1683 0252 81       		.byte	0x81
 1684 0253 8C000000 		.4byte	0x8c
 1685 0257 00000000 		.4byte	.LFB41
 1686 025b 58000000 		.4byte	.LFE41-.LFB41
 1687 025f 01       		.uleb128 0x1
 1688 0260 9C       		.byte	0x9c
 1689 0261 82020000 		.4byte	0x282
 1690 0265 0A       		.uleb128 0xa
 1691 0266 68010000 		.4byte	.LASF35
 1692 026a 02       		.byte	0x2
 1693 026b 81       		.byte	0x81
 1694 026c 82020000 		.4byte	0x282
 1695 0270 02       		.uleb128 0x2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 36


 1696 0271 91       		.byte	0x91
 1697 0272 74       		.sleb128 -12
 1698 0273 14       		.uleb128 0x14
 1699 0274 6C656E00 		.ascii	"len\000"
 1700 0278 02       		.byte	0x2
 1701 0279 81       		.byte	0x81
 1702 027a 81000000 		.4byte	0x81
 1703 027e 02       		.uleb128 0x2
 1704 027f 91       		.byte	0x91
 1705 0280 73       		.sleb128 -13
 1706 0281 00       		.byte	0
 1707 0282 07       		.uleb128 0x7
 1708 0283 04       		.byte	0x4
 1709 0284 81000000 		.4byte	0x81
 1710 0288 13       		.uleb128 0x13
 1711 0289 4C030000 		.4byte	.LASF37
 1712 028d 02       		.byte	0x2
 1713 028e 8C       		.byte	0x8c
 1714 028f 8C000000 		.4byte	0x8c
 1715 0293 00000000 		.4byte	.LFB42
 1716 0297 44000000 		.4byte	.LFE42-.LFB42
 1717 029b 01       		.uleb128 0x1
 1718 029c 9C       		.byte	0x9c
 1719 029d BE020000 		.4byte	0x2be
 1720 02a1 0A       		.uleb128 0xa
 1721 02a2 68010000 		.4byte	.LASF35
 1722 02a6 02       		.byte	0x2
 1723 02a7 8C       		.byte	0x8c
 1724 02a8 82020000 		.4byte	0x282
 1725 02ac 02       		.uleb128 0x2
 1726 02ad 91       		.byte	0x91
 1727 02ae 74       		.sleb128 -12
 1728 02af 14       		.uleb128 0x14
 1729 02b0 6C656E00 		.ascii	"len\000"
 1730 02b4 02       		.byte	0x2
 1731 02b5 8C       		.byte	0x8c
 1732 02b6 81000000 		.4byte	0x81
 1733 02ba 02       		.uleb128 0x2
 1734 02bb 91       		.byte	0x91
 1735 02bc 73       		.sleb128 -13
 1736 02bd 00       		.byte	0
 1737 02be 0B       		.uleb128 0xb
 1738 02bf 21000000 		.4byte	.LASF38
 1739 02c3 02       		.byte	0x2
 1740 02c4 9C       		.byte	0x9c
 1741 02c5 00000000 		.4byte	.LFB43
 1742 02c9 2C010000 		.4byte	.LFE43-.LFB43
 1743 02cd 01       		.uleb128 0x1
 1744 02ce 9C       		.byte	0x9c
 1745 02cf 4E030000 		.4byte	0x34e
 1746 02d3 0A       		.uleb128 0xa
 1747 02d4 09020000 		.4byte	.LASF39
 1748 02d8 02       		.byte	0x2
 1749 02d9 9C       		.byte	0x9c
 1750 02da 81000000 		.4byte	0x81
 1751 02de 03       		.uleb128 0x3
 1752 02df 91       		.byte	0x91
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 37


 1753 02e0 EF7D     		.sleb128 -273
 1754 02e2 0C       		.uleb128 0xc
 1755 02e3 5E010000 		.4byte	.LASF40
 1756 02e7 02       		.byte	0x2
 1757 02e8 9D       		.byte	0x9d
 1758 02e9 4E030000 		.4byte	0x34e
 1759 02ed 03       		.uleb128 0x3
 1760 02ee 91       		.byte	0x91
 1761 02ef F47D     		.sleb128 -268
 1762 02f1 15       		.uleb128 0x15
 1763 02f2 00000000 		.4byte	.LASF59
 1764 02f6 06       		.byte	0x6
 1765 02f7 00       		.byte	0
 1766 02f8 73000000 		.4byte	0x73
 1767 02fc 07030000 		.4byte	0x307
 1768 0300 16       		.uleb128 0x16
 1769 0301 CF000000 		.4byte	0xcf
 1770 0305 17       		.uleb128 0x17
 1771 0306 00       		.byte	0
 1772 0307 18       		.uleb128 0x18
 1773 0308 38000000 		.4byte	.LBB3
 1774 030c 3C000000 		.4byte	.LBE3-.LBB3
 1775 0310 21030000 		.4byte	0x321
 1776 0314 0E       		.uleb128 0xe
 1777 0315 6300     		.ascii	"c\000"
 1778 0317 02       		.byte	0x2
 1779 0318 A1       		.byte	0xa1
 1780 0319 81000000 		.4byte	0x81
 1781 031d 02       		.uleb128 0x2
 1782 031e 91       		.byte	0x91
 1783 031f 77       		.sleb128 -9
 1784 0320 00       		.byte	0
 1785 0321 0D       		.uleb128 0xd
 1786 0322 7A000000 		.4byte	.LBB4
 1787 0326 96000000 		.4byte	.LBE4-.LBB4
 1788 032a 0E       		.uleb128 0xe
 1789 032b 6A00     		.ascii	"j\000"
 1790 032d 02       		.byte	0x2
 1791 032e A3       		.byte	0xa3
 1792 032f 81000000 		.4byte	0x81
 1793 0333 02       		.uleb128 0x2
 1794 0334 91       		.byte	0x91
 1795 0335 76       		.sleb128 -10
 1796 0336 0D       		.uleb128 0xd
 1797 0337 98000000 		.4byte	.LBB5
 1798 033b 54000000 		.4byte	.LBE5-.LBB5
 1799 033f 0E       		.uleb128 0xe
 1800 0340 6B00     		.ascii	"k\000"
 1801 0342 02       		.byte	0x2
 1802 0343 A5       		.byte	0xa5
 1803 0344 81000000 		.4byte	0x81
 1804 0348 02       		.uleb128 0x2
 1805 0349 91       		.byte	0x91
 1806 034a 75       		.sleb128 -11
 1807 034b 00       		.byte	0
 1808 034c 00       		.byte	0
 1809 034d 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 38


 1810 034e 0F       		.uleb128 0xf
 1811 034f 81000000 		.4byte	0x81
 1812 0353 5E030000 		.4byte	0x35e
 1813 0357 10       		.uleb128 0x10
 1814 0358 C8000000 		.4byte	0xc8
 1815 035c FF       		.byte	0xff
 1816 035d 00       		.byte	0
 1817 035e 0B       		.uleb128 0xb
 1818 035f C7010000 		.4byte	.LASF41
 1819 0363 02       		.byte	0x2
 1820 0364 AE       		.byte	0xae
 1821 0365 00000000 		.4byte	.LFB44
 1822 0369 60000000 		.4byte	.LFE44-.LFB44
 1823 036d 01       		.uleb128 0x1
 1824 036e 9C       		.byte	0x9c
 1825 036f 9E030000 		.4byte	0x39e
 1826 0373 0A       		.uleb128 0xa
 1827 0374 EE010000 		.4byte	.LASF42
 1828 0378 02       		.byte	0x2
 1829 0379 AE       		.byte	0xae
 1830 037a 8C000000 		.4byte	0x8c
 1831 037e 02       		.uleb128 0x2
 1832 037f 91       		.byte	0x91
 1833 0380 76       		.sleb128 -10
 1834 0381 0A       		.uleb128 0xa
 1835 0382 1A000000 		.4byte	.LASF43
 1836 0386 02       		.byte	0x2
 1837 0387 AE       		.byte	0xae
 1838 0388 81000000 		.4byte	0x81
 1839 038c 02       		.uleb128 0x2
 1840 038d 91       		.byte	0x91
 1841 038e 75       		.sleb128 -11
 1842 038f 0A       		.uleb128 0xa
 1843 0390 AF010000 		.4byte	.LASF19
 1844 0394 02       		.byte	0x2
 1845 0395 AE       		.byte	0xae
 1846 0396 81000000 		.4byte	0x81
 1847 039a 02       		.uleb128 0x2
 1848 039b 91       		.byte	0x91
 1849 039c 74       		.sleb128 -12
 1850 039d 00       		.byte	0
 1851 039e 0B       		.uleb128 0xb
 1852 039f 13010000 		.4byte	.LASF44
 1853 03a3 02       		.byte	0x2
 1854 03a4 BD       		.byte	0xbd
 1855 03a5 00000000 		.4byte	.LFB45
 1856 03a9 72000000 		.4byte	.LFE45-.LFB45
 1857 03ad 01       		.uleb128 0x1
 1858 03ae 9C       		.byte	0x9c
 1859 03af DE030000 		.4byte	0x3de
 1860 03b3 0A       		.uleb128 0xa
 1861 03b4 EE010000 		.4byte	.LASF42
 1862 03b8 02       		.byte	0x2
 1863 03b9 BD       		.byte	0xbd
 1864 03ba 8C000000 		.4byte	0x8c
 1865 03be 02       		.uleb128 0x2
 1866 03bf 91       		.byte	0x91
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 39


 1867 03c0 76       		.sleb128 -10
 1868 03c1 0A       		.uleb128 0xa
 1869 03c2 1A000000 		.4byte	.LASF43
 1870 03c6 02       		.byte	0x2
 1871 03c7 BD       		.byte	0xbd
 1872 03c8 81000000 		.4byte	0x81
 1873 03cc 02       		.uleb128 0x2
 1874 03cd 91       		.byte	0x91
 1875 03ce 75       		.sleb128 -11
 1876 03cf 0A       		.uleb128 0xa
 1877 03d0 AF010000 		.4byte	.LASF19
 1878 03d4 02       		.byte	0x2
 1879 03d5 BD       		.byte	0xbd
 1880 03d6 8C000000 		.4byte	0x8c
 1881 03da 02       		.uleb128 0x2
 1882 03db 91       		.byte	0x91
 1883 03dc 72       		.sleb128 -14
 1884 03dd 00       		.byte	0
 1885 03de 0B       		.uleb128 0xb
 1886 03df E7020000 		.4byte	.LASF45
 1887 03e3 02       		.byte	0x2
 1888 03e4 CD       		.byte	0xcd
 1889 03e5 00000000 		.4byte	.LFB46
 1890 03e9 92000000 		.4byte	.LFE46-.LFB46
 1891 03ed 01       		.uleb128 0x1
 1892 03ee 9C       		.byte	0x9c
 1893 03ef 42040000 		.4byte	0x442
 1894 03f3 0A       		.uleb128 0xa
 1895 03f4 EE010000 		.4byte	.LASF42
 1896 03f8 02       		.byte	0x2
 1897 03f9 CD       		.byte	0xcd
 1898 03fa 8C000000 		.4byte	0x8c
 1899 03fe 02       		.uleb128 0x2
 1900 03ff 91       		.byte	0x91
 1901 0400 6E       		.sleb128 -18
 1902 0401 0A       		.uleb128 0xa
 1903 0402 1A000000 		.4byte	.LASF43
 1904 0406 02       		.byte	0x2
 1905 0407 CD       		.byte	0xcd
 1906 0408 81000000 		.4byte	0x81
 1907 040c 02       		.uleb128 0x2
 1908 040d 91       		.byte	0x91
 1909 040e 6D       		.sleb128 -19
 1910 040f 0A       		.uleb128 0xa
 1911 0410 7B000000 		.4byte	.LASF46
 1912 0414 02       		.byte	0x2
 1913 0415 CD       		.byte	0xcd
 1914 0416 82020000 		.4byte	0x282
 1915 041a 02       		.uleb128 0x2
 1916 041b 91       		.byte	0x91
 1917 041c 68       		.sleb128 -24
 1918 041d 14       		.uleb128 0x14
 1919 041e 6C656E00 		.ascii	"len\000"
 1920 0422 02       		.byte	0x2
 1921 0423 CD       		.byte	0xcd
 1922 0424 81000000 		.4byte	0x81
 1923 0428 02       		.uleb128 0x2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 40


 1924 0429 91       		.byte	0x91
 1925 042a 6C       		.sleb128 -20
 1926 042b 0D       		.uleb128 0xd
 1927 042c 4E000000 		.4byte	.LBB6
 1928 0430 38000000 		.4byte	.LBE6-.LBB6
 1929 0434 0E       		.uleb128 0xe
 1930 0435 6B00     		.ascii	"k\000"
 1931 0437 02       		.byte	0x2
 1932 0438 D7       		.byte	0xd7
 1933 0439 81000000 		.4byte	0x81
 1934 043d 02       		.uleb128 0x2
 1935 043e 91       		.byte	0x91
 1936 043f 77       		.sleb128 -9
 1937 0440 00       		.byte	0
 1938 0441 00       		.byte	0
 1939 0442 13       		.uleb128 0x13
 1940 0443 13030000 		.4byte	.LASF47
 1941 0447 02       		.byte	0x2
 1942 0448 DE       		.byte	0xde
 1943 0449 81000000 		.4byte	0x81
 1944 044d 00000000 		.4byte	.LFB47
 1945 0451 64000000 		.4byte	.LFE47-.LFB47
 1946 0455 01       		.uleb128 0x1
 1947 0456 9C       		.byte	0x9c
 1948 0457 86040000 		.4byte	0x486
 1949 045b 0A       		.uleb128 0xa
 1950 045c EE010000 		.4byte	.LASF42
 1951 0460 02       		.byte	0x2
 1952 0461 DE       		.byte	0xde
 1953 0462 8C000000 		.4byte	0x8c
 1954 0466 02       		.uleb128 0x2
 1955 0467 91       		.byte	0x91
 1956 0468 66       		.sleb128 -26
 1957 0469 0A       		.uleb128 0xa
 1958 046a 1A000000 		.4byte	.LASF43
 1959 046e 02       		.byte	0x2
 1960 046f DE       		.byte	0xde
 1961 0470 81000000 		.4byte	0x81
 1962 0474 02       		.uleb128 0x2
 1963 0475 91       		.byte	0x91
 1964 0476 65       		.sleb128 -27
 1965 0477 0C       		.uleb128 0xc
 1966 0478 8B030000 		.4byte	.LASF48
 1967 047c 02       		.byte	0x2
 1968 047d E8       		.byte	0xe8
 1969 047e 81000000 		.4byte	0x81
 1970 0482 02       		.uleb128 0x2
 1971 0483 91       		.byte	0x91
 1972 0484 6F       		.sleb128 -17
 1973 0485 00       		.byte	0
 1974 0486 13       		.uleb128 0x13
 1975 0487 68030000 		.4byte	.LASF49
 1976 048b 02       		.byte	0x2
 1977 048c ED       		.byte	0xed
 1978 048d 8C000000 		.4byte	0x8c
 1979 0491 00000000 		.4byte	.LFB48
 1980 0495 80000000 		.4byte	.LFE48-.LFB48
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 41


 1981 0499 01       		.uleb128 0x1
 1982 049a 9C       		.byte	0x9c
 1983 049b CA040000 		.4byte	0x4ca
 1984 049f 0A       		.uleb128 0xa
 1985 04a0 EE010000 		.4byte	.LASF42
 1986 04a4 02       		.byte	0x2
 1987 04a5 ED       		.byte	0xed
 1988 04a6 8C000000 		.4byte	0x8c
 1989 04aa 02       		.uleb128 0x2
 1990 04ab 91       		.byte	0x91
 1991 04ac 6E       		.sleb128 -18
 1992 04ad 0A       		.uleb128 0xa
 1993 04ae 1A000000 		.4byte	.LASF43
 1994 04b2 02       		.byte	0x2
 1995 04b3 ED       		.byte	0xed
 1996 04b4 81000000 		.4byte	0x81
 1997 04b8 02       		.uleb128 0x2
 1998 04b9 91       		.byte	0x91
 1999 04ba 6D       		.sleb128 -19
 2000 04bb 0C       		.uleb128 0xc
 2001 04bc 8B030000 		.4byte	.LASF48
 2002 04c0 02       		.byte	0x2
 2003 04c1 EE       		.byte	0xee
 2004 04c2 8C000000 		.4byte	0x8c
 2005 04c6 02       		.uleb128 0x2
 2006 04c7 91       		.byte	0x91
 2007 04c8 76       		.sleb128 -10
 2008 04c9 00       		.byte	0
 2009 04ca 0B       		.uleb128 0xb
 2010 04cb B9020000 		.4byte	.LASF50
 2011 04cf 02       		.byte	0x2
 2012 04d0 FE       		.byte	0xfe
 2013 04d1 00000000 		.4byte	.LFB49
 2014 04d5 8C000000 		.4byte	.LFE49-.LFB49
 2015 04d9 01       		.uleb128 0x1
 2016 04da 9C       		.byte	0x9c
 2017 04db 2F050000 		.4byte	0x52f
 2018 04df 0A       		.uleb128 0xa
 2019 04e0 EE010000 		.4byte	.LASF42
 2020 04e4 02       		.byte	0x2
 2021 04e5 FE       		.byte	0xfe
 2022 04e6 8C000000 		.4byte	0x8c
 2023 04ea 02       		.uleb128 0x2
 2024 04eb 91       		.byte	0x91
 2025 04ec 66       		.sleb128 -26
 2026 04ed 0A       		.uleb128 0xa
 2027 04ee 1A000000 		.4byte	.LASF43
 2028 04f2 02       		.byte	0x2
 2029 04f3 FE       		.byte	0xfe
 2030 04f4 81000000 		.4byte	0x81
 2031 04f8 02       		.uleb128 0x2
 2032 04f9 91       		.byte	0x91
 2033 04fa 65       		.sleb128 -27
 2034 04fb 0A       		.uleb128 0xa
 2035 04fc DF010000 		.4byte	.LASF51
 2036 0500 02       		.byte	0x2
 2037 0501 FE       		.byte	0xfe
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 42


 2038 0502 82020000 		.4byte	0x282
 2039 0506 02       		.uleb128 0x2
 2040 0507 91       		.byte	0x91
 2041 0508 60       		.sleb128 -32
 2042 0509 14       		.uleb128 0x14
 2043 050a 6C656E00 		.ascii	"len\000"
 2044 050e 02       		.byte	0x2
 2045 050f FE       		.byte	0xfe
 2046 0510 81000000 		.4byte	0x81
 2047 0514 02       		.uleb128 0x2
 2048 0515 91       		.byte	0x91
 2049 0516 64       		.sleb128 -28
 2050 0517 0D       		.uleb128 0xd
 2051 0518 46000000 		.4byte	.LBB7
 2052 051c 3A000000 		.4byte	.LBE7-.LBB7
 2053 0520 19       		.uleb128 0x19
 2054 0521 6B00     		.ascii	"k\000"
 2055 0523 02       		.byte	0x2
 2056 0524 0A01     		.2byte	0x10a
 2057 0526 81000000 		.4byte	0x81
 2058 052a 02       		.uleb128 0x2
 2059 052b 91       		.byte	0x91
 2060 052c 6F       		.sleb128 -17
 2061 052d 00       		.byte	0
 2062 052e 00       		.byte	0
 2063 052f 0C       		.uleb128 0xc
 2064 0530 49000000 		.4byte	.LASF52
 2065 0534 02       		.byte	0x2
 2066 0535 17       		.byte	0x17
 2067 0536 8C000000 		.4byte	0x8c
 2068 053a 05       		.uleb128 0x5
 2069 053b 03       		.byte	0x3
 2070 053c 00000000 		.4byte	wiznetTxPointer
 2071 0540 0C       		.uleb128 0xc
 2072 0541 03030000 		.4byte	.LASF53
 2073 0545 02       		.byte	0x2
 2074 0546 18       		.byte	0x18
 2075 0547 8C000000 		.4byte	0x8c
 2076 054b 05       		.uleb128 0x5
 2077 054c 03       		.byte	0x3
 2078 054d 02000000 		.4byte	wiznetRxPointer
 2079 0551 00       		.byte	0
 2080              		.section	.debug_abbrev,"",%progbits
 2081              	.Ldebug_abbrev0:
 2082 0000 01       		.uleb128 0x1
 2083 0001 11       		.uleb128 0x11
 2084 0002 01       		.byte	0x1
 2085 0003 25       		.uleb128 0x25
 2086 0004 0E       		.uleb128 0xe
 2087 0005 13       		.uleb128 0x13
 2088 0006 0B       		.uleb128 0xb
 2089 0007 03       		.uleb128 0x3
 2090 0008 0E       		.uleb128 0xe
 2091 0009 1B       		.uleb128 0x1b
 2092 000a 0E       		.uleb128 0xe
 2093 000b 55       		.uleb128 0x55
 2094 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 43


 2095 000d 11       		.uleb128 0x11
 2096 000e 01       		.uleb128 0x1
 2097 000f 10       		.uleb128 0x10
 2098 0010 17       		.uleb128 0x17
 2099 0011 00       		.byte	0
 2100 0012 00       		.byte	0
 2101 0013 02       		.uleb128 0x2
 2102 0014 24       		.uleb128 0x24
 2103 0015 00       		.byte	0
 2104 0016 0B       		.uleb128 0xb
 2105 0017 0B       		.uleb128 0xb
 2106 0018 3E       		.uleb128 0x3e
 2107 0019 0B       		.uleb128 0xb
 2108 001a 03       		.uleb128 0x3
 2109 001b 0E       		.uleb128 0xe
 2110 001c 00       		.byte	0
 2111 001d 00       		.byte	0
 2112 001e 03       		.uleb128 0x3
 2113 001f 16       		.uleb128 0x16
 2114 0020 00       		.byte	0
 2115 0021 03       		.uleb128 0x3
 2116 0022 0E       		.uleb128 0xe
 2117 0023 3A       		.uleb128 0x3a
 2118 0024 0B       		.uleb128 0xb
 2119 0025 3B       		.uleb128 0x3b
 2120 0026 0B       		.uleb128 0xb
 2121 0027 49       		.uleb128 0x49
 2122 0028 13       		.uleb128 0x13
 2123 0029 00       		.byte	0
 2124 002a 00       		.byte	0
 2125 002b 04       		.uleb128 0x4
 2126 002c 24       		.uleb128 0x24
 2127 002d 00       		.byte	0
 2128 002e 0B       		.uleb128 0xb
 2129 002f 0B       		.uleb128 0xb
 2130 0030 3E       		.uleb128 0x3e
 2131 0031 0B       		.uleb128 0xb
 2132 0032 03       		.uleb128 0x3
 2133 0033 08       		.uleb128 0x8
 2134 0034 00       		.byte	0
 2135 0035 00       		.byte	0
 2136 0036 05       		.uleb128 0x5
 2137 0037 16       		.uleb128 0x16
 2138 0038 00       		.byte	0
 2139 0039 03       		.uleb128 0x3
 2140 003a 0E       		.uleb128 0xe
 2141 003b 3A       		.uleb128 0x3a
 2142 003c 0B       		.uleb128 0xb
 2143 003d 3B       		.uleb128 0x3b
 2144 003e 05       		.uleb128 0x5
 2145 003f 49       		.uleb128 0x49
 2146 0040 13       		.uleb128 0x13
 2147 0041 00       		.byte	0
 2148 0042 00       		.byte	0
 2149 0043 06       		.uleb128 0x6
 2150 0044 35       		.uleb128 0x35
 2151 0045 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 44


 2152 0046 49       		.uleb128 0x49
 2153 0047 13       		.uleb128 0x13
 2154 0048 00       		.byte	0
 2155 0049 00       		.byte	0
 2156 004a 07       		.uleb128 0x7
 2157 004b 0F       		.uleb128 0xf
 2158 004c 00       		.byte	0
 2159 004d 0B       		.uleb128 0xb
 2160 004e 0B       		.uleb128 0xb
 2161 004f 49       		.uleb128 0x49
 2162 0050 13       		.uleb128 0x13
 2163 0051 00       		.byte	0
 2164 0052 00       		.byte	0
 2165 0053 08       		.uleb128 0x8
 2166 0054 26       		.uleb128 0x26
 2167 0055 00       		.byte	0
 2168 0056 49       		.uleb128 0x49
 2169 0057 13       		.uleb128 0x13
 2170 0058 00       		.byte	0
 2171 0059 00       		.byte	0
 2172 005a 09       		.uleb128 0x9
 2173 005b 2E       		.uleb128 0x2e
 2174 005c 01       		.byte	0x1
 2175 005d 03       		.uleb128 0x3
 2176 005e 0E       		.uleb128 0xe
 2177 005f 3A       		.uleb128 0x3a
 2178 0060 0B       		.uleb128 0xb
 2179 0061 3B       		.uleb128 0x3b
 2180 0062 0B       		.uleb128 0xb
 2181 0063 27       		.uleb128 0x27
 2182 0064 19       		.uleb128 0x19
 2183 0065 49       		.uleb128 0x49
 2184 0066 13       		.uleb128 0x13
 2185 0067 11       		.uleb128 0x11
 2186 0068 01       		.uleb128 0x1
 2187 0069 12       		.uleb128 0x12
 2188 006a 06       		.uleb128 0x6
 2189 006b 40       		.uleb128 0x40
 2190 006c 18       		.uleb128 0x18
 2191 006d 9642     		.uleb128 0x2116
 2192 006f 19       		.uleb128 0x19
 2193 0070 01       		.uleb128 0x1
 2194 0071 13       		.uleb128 0x13
 2195 0072 00       		.byte	0
 2196 0073 00       		.byte	0
 2197 0074 0A       		.uleb128 0xa
 2198 0075 05       		.uleb128 0x5
 2199 0076 00       		.byte	0
 2200 0077 03       		.uleb128 0x3
 2201 0078 0E       		.uleb128 0xe
 2202 0079 3A       		.uleb128 0x3a
 2203 007a 0B       		.uleb128 0xb
 2204 007b 3B       		.uleb128 0x3b
 2205 007c 0B       		.uleb128 0xb
 2206 007d 49       		.uleb128 0x49
 2207 007e 13       		.uleb128 0x13
 2208 007f 02       		.uleb128 0x2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 45


 2209 0080 18       		.uleb128 0x18
 2210 0081 00       		.byte	0
 2211 0082 00       		.byte	0
 2212 0083 0B       		.uleb128 0xb
 2213 0084 2E       		.uleb128 0x2e
 2214 0085 01       		.byte	0x1
 2215 0086 3F       		.uleb128 0x3f
 2216 0087 19       		.uleb128 0x19
 2217 0088 03       		.uleb128 0x3
 2218 0089 0E       		.uleb128 0xe
 2219 008a 3A       		.uleb128 0x3a
 2220 008b 0B       		.uleb128 0xb
 2221 008c 3B       		.uleb128 0x3b
 2222 008d 0B       		.uleb128 0xb
 2223 008e 27       		.uleb128 0x27
 2224 008f 19       		.uleb128 0x19
 2225 0090 11       		.uleb128 0x11
 2226 0091 01       		.uleb128 0x1
 2227 0092 12       		.uleb128 0x12
 2228 0093 06       		.uleb128 0x6
 2229 0094 40       		.uleb128 0x40
 2230 0095 18       		.uleb128 0x18
 2231 0096 9642     		.uleb128 0x2116
 2232 0098 19       		.uleb128 0x19
 2233 0099 01       		.uleb128 0x1
 2234 009a 13       		.uleb128 0x13
 2235 009b 00       		.byte	0
 2236 009c 00       		.byte	0
 2237 009d 0C       		.uleb128 0xc
 2238 009e 34       		.uleb128 0x34
 2239 009f 00       		.byte	0
 2240 00a0 03       		.uleb128 0x3
 2241 00a1 0E       		.uleb128 0xe
 2242 00a2 3A       		.uleb128 0x3a
 2243 00a3 0B       		.uleb128 0xb
 2244 00a4 3B       		.uleb128 0x3b
 2245 00a5 0B       		.uleb128 0xb
 2246 00a6 49       		.uleb128 0x49
 2247 00a7 13       		.uleb128 0x13
 2248 00a8 02       		.uleb128 0x2
 2249 00a9 18       		.uleb128 0x18
 2250 00aa 00       		.byte	0
 2251 00ab 00       		.byte	0
 2252 00ac 0D       		.uleb128 0xd
 2253 00ad 0B       		.uleb128 0xb
 2254 00ae 01       		.byte	0x1
 2255 00af 11       		.uleb128 0x11
 2256 00b0 01       		.uleb128 0x1
 2257 00b1 12       		.uleb128 0x12
 2258 00b2 06       		.uleb128 0x6
 2259 00b3 00       		.byte	0
 2260 00b4 00       		.byte	0
 2261 00b5 0E       		.uleb128 0xe
 2262 00b6 34       		.uleb128 0x34
 2263 00b7 00       		.byte	0
 2264 00b8 03       		.uleb128 0x3
 2265 00b9 08       		.uleb128 0x8
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 46


 2266 00ba 3A       		.uleb128 0x3a
 2267 00bb 0B       		.uleb128 0xb
 2268 00bc 3B       		.uleb128 0x3b
 2269 00bd 0B       		.uleb128 0xb
 2270 00be 49       		.uleb128 0x49
 2271 00bf 13       		.uleb128 0x13
 2272 00c0 02       		.uleb128 0x2
 2273 00c1 18       		.uleb128 0x18
 2274 00c2 00       		.byte	0
 2275 00c3 00       		.byte	0
 2276 00c4 0F       		.uleb128 0xf
 2277 00c5 01       		.uleb128 0x1
 2278 00c6 01       		.byte	0x1
 2279 00c7 49       		.uleb128 0x49
 2280 00c8 13       		.uleb128 0x13
 2281 00c9 01       		.uleb128 0x1
 2282 00ca 13       		.uleb128 0x13
 2283 00cb 00       		.byte	0
 2284 00cc 00       		.byte	0
 2285 00cd 10       		.uleb128 0x10
 2286 00ce 21       		.uleb128 0x21
 2287 00cf 00       		.byte	0
 2288 00d0 49       		.uleb128 0x49
 2289 00d1 13       		.uleb128 0x13
 2290 00d2 2F       		.uleb128 0x2f
 2291 00d3 0B       		.uleb128 0xb
 2292 00d4 00       		.byte	0
 2293 00d5 00       		.byte	0
 2294 00d6 11       		.uleb128 0x11
 2295 00d7 2E       		.uleb128 0x2e
 2296 00d8 00       		.byte	0
 2297 00d9 3F       		.uleb128 0x3f
 2298 00da 19       		.uleb128 0x19
 2299 00db 03       		.uleb128 0x3
 2300 00dc 0E       		.uleb128 0xe
 2301 00dd 3A       		.uleb128 0x3a
 2302 00de 0B       		.uleb128 0xb
 2303 00df 3B       		.uleb128 0x3b
 2304 00e0 0B       		.uleb128 0xb
 2305 00e1 27       		.uleb128 0x27
 2306 00e2 19       		.uleb128 0x19
 2307 00e3 11       		.uleb128 0x11
 2308 00e4 01       		.uleb128 0x1
 2309 00e5 12       		.uleb128 0x12
 2310 00e6 06       		.uleb128 0x6
 2311 00e7 40       		.uleb128 0x40
 2312 00e8 18       		.uleb128 0x18
 2313 00e9 9642     		.uleb128 0x2116
 2314 00eb 19       		.uleb128 0x19
 2315 00ec 00       		.byte	0
 2316 00ed 00       		.byte	0
 2317 00ee 12       		.uleb128 0x12
 2318 00ef 34       		.uleb128 0x34
 2319 00f0 00       		.byte	0
 2320 00f1 03       		.uleb128 0x3
 2321 00f2 0E       		.uleb128 0xe
 2322 00f3 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 47


 2323 00f4 0B       		.uleb128 0xb
 2324 00f5 3B       		.uleb128 0x3b
 2325 00f6 0B       		.uleb128 0xb
 2326 00f7 49       		.uleb128 0x49
 2327 00f8 13       		.uleb128 0x13
 2328 00f9 00       		.byte	0
 2329 00fa 00       		.byte	0
 2330 00fb 13       		.uleb128 0x13
 2331 00fc 2E       		.uleb128 0x2e
 2332 00fd 01       		.byte	0x1
 2333 00fe 3F       		.uleb128 0x3f
 2334 00ff 19       		.uleb128 0x19
 2335 0100 03       		.uleb128 0x3
 2336 0101 0E       		.uleb128 0xe
 2337 0102 3A       		.uleb128 0x3a
 2338 0103 0B       		.uleb128 0xb
 2339 0104 3B       		.uleb128 0x3b
 2340 0105 0B       		.uleb128 0xb
 2341 0106 27       		.uleb128 0x27
 2342 0107 19       		.uleb128 0x19
 2343 0108 49       		.uleb128 0x49
 2344 0109 13       		.uleb128 0x13
 2345 010a 11       		.uleb128 0x11
 2346 010b 01       		.uleb128 0x1
 2347 010c 12       		.uleb128 0x12
 2348 010d 06       		.uleb128 0x6
 2349 010e 40       		.uleb128 0x40
 2350 010f 18       		.uleb128 0x18
 2351 0110 9642     		.uleb128 0x2116
 2352 0112 19       		.uleb128 0x19
 2353 0113 01       		.uleb128 0x1
 2354 0114 13       		.uleb128 0x13
 2355 0115 00       		.byte	0
 2356 0116 00       		.byte	0
 2357 0117 14       		.uleb128 0x14
 2358 0118 05       		.uleb128 0x5
 2359 0119 00       		.byte	0
 2360 011a 03       		.uleb128 0x3
 2361 011b 08       		.uleb128 0x8
 2362 011c 3A       		.uleb128 0x3a
 2363 011d 0B       		.uleb128 0xb
 2364 011e 3B       		.uleb128 0x3b
 2365 011f 0B       		.uleb128 0xb
 2366 0120 49       		.uleb128 0x49
 2367 0121 13       		.uleb128 0x13
 2368 0122 02       		.uleb128 0x2
 2369 0123 18       		.uleb128 0x18
 2370 0124 00       		.byte	0
 2371 0125 00       		.byte	0
 2372 0126 15       		.uleb128 0x15
 2373 0127 2E       		.uleb128 0x2e
 2374 0128 01       		.byte	0x1
 2375 0129 3F       		.uleb128 0x3f
 2376 012a 19       		.uleb128 0x19
 2377 012b 03       		.uleb128 0x3
 2378 012c 0E       		.uleb128 0xe
 2379 012d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 48


 2380 012e 0B       		.uleb128 0xb
 2381 012f 3B       		.uleb128 0x3b
 2382 0130 0B       		.uleb128 0xb
 2383 0131 27       		.uleb128 0x27
 2384 0132 19       		.uleb128 0x19
 2385 0133 49       		.uleb128 0x49
 2386 0134 13       		.uleb128 0x13
 2387 0135 3C       		.uleb128 0x3c
 2388 0136 19       		.uleb128 0x19
 2389 0137 01       		.uleb128 0x1
 2390 0138 13       		.uleb128 0x13
 2391 0139 00       		.byte	0
 2392 013a 00       		.byte	0
 2393 013b 16       		.uleb128 0x16
 2394 013c 05       		.uleb128 0x5
 2395 013d 00       		.byte	0
 2396 013e 49       		.uleb128 0x49
 2397 013f 13       		.uleb128 0x13
 2398 0140 00       		.byte	0
 2399 0141 00       		.byte	0
 2400 0142 17       		.uleb128 0x17
 2401 0143 18       		.uleb128 0x18
 2402 0144 00       		.byte	0
 2403 0145 00       		.byte	0
 2404 0146 00       		.byte	0
 2405 0147 18       		.uleb128 0x18
 2406 0148 0B       		.uleb128 0xb
 2407 0149 01       		.byte	0x1
 2408 014a 11       		.uleb128 0x11
 2409 014b 01       		.uleb128 0x1
 2410 014c 12       		.uleb128 0x12
 2411 014d 06       		.uleb128 0x6
 2412 014e 01       		.uleb128 0x1
 2413 014f 13       		.uleb128 0x13
 2414 0150 00       		.byte	0
 2415 0151 00       		.byte	0
 2416 0152 19       		.uleb128 0x19
 2417 0153 34       		.uleb128 0x34
 2418 0154 00       		.byte	0
 2419 0155 03       		.uleb128 0x3
 2420 0156 08       		.uleb128 0x8
 2421 0157 3A       		.uleb128 0x3a
 2422 0158 0B       		.uleb128 0xb
 2423 0159 3B       		.uleb128 0x3b
 2424 015a 05       		.uleb128 0x5
 2425 015b 49       		.uleb128 0x49
 2426 015c 13       		.uleb128 0x13
 2427 015d 02       		.uleb128 0x2
 2428 015e 18       		.uleb128 0x18
 2429 015f 00       		.byte	0
 2430 0160 00       		.byte	0
 2431 0161 00       		.byte	0
 2432              		.section	.debug_aranges,"",%progbits
 2433 0000 9C000000 		.4byte	0x9c
 2434 0004 0200     		.2byte	0x2
 2435 0006 00000000 		.4byte	.Ldebug_info0
 2436 000a 04       		.byte	0x4
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 49


 2437 000b 00       		.byte	0
 2438 000c 0000     		.2byte	0
 2439 000e 0000     		.2byte	0
 2440 0010 00000000 		.4byte	.LFB33
 2441 0014 38000000 		.4byte	.LFE33-.LFB33
 2442 0018 00000000 		.4byte	.LFB34
 2443 001c 5C010000 		.4byte	.LFE34-.LFB34
 2444 0020 00000000 		.4byte	.LFB35
 2445 0024 12000000 		.4byte	.LFE35-.LFB35
 2446 0028 00000000 		.4byte	.LFB36
 2447 002c 12000000 		.4byte	.LFE36-.LFB36
 2448 0030 00000000 		.4byte	.LFB37
 2449 0034 34000000 		.4byte	.LFE37-.LFB37
 2450 0038 00000000 		.4byte	.LFB38
 2451 003c 34000000 		.4byte	.LFE38-.LFB38
 2452 0040 00000000 		.4byte	.LFB39
 2453 0044 26000000 		.4byte	.LFE39-.LFB39
 2454 0048 00000000 		.4byte	.LFB40
 2455 004c 3E000000 		.4byte	.LFE40-.LFB40
 2456 0050 00000000 		.4byte	.LFB41
 2457 0054 58000000 		.4byte	.LFE41-.LFB41
 2458 0058 00000000 		.4byte	.LFB42
 2459 005c 44000000 		.4byte	.LFE42-.LFB42
 2460 0060 00000000 		.4byte	.LFB43
 2461 0064 2C010000 		.4byte	.LFE43-.LFB43
 2462 0068 00000000 		.4byte	.LFB44
 2463 006c 60000000 		.4byte	.LFE44-.LFB44
 2464 0070 00000000 		.4byte	.LFB45
 2465 0074 72000000 		.4byte	.LFE45-.LFB45
 2466 0078 00000000 		.4byte	.LFB46
 2467 007c 92000000 		.4byte	.LFE46-.LFB46
 2468 0080 00000000 		.4byte	.LFB47
 2469 0084 64000000 		.4byte	.LFE47-.LFB47
 2470 0088 00000000 		.4byte	.LFB48
 2471 008c 80000000 		.4byte	.LFE48-.LFB48
 2472 0090 00000000 		.4byte	.LFB49
 2473 0094 8C000000 		.4byte	.LFE49-.LFB49
 2474 0098 00000000 		.4byte	0
 2475 009c 00000000 		.4byte	0
 2476              		.section	.debug_ranges,"",%progbits
 2477              	.Ldebug_ranges0:
 2478 0000 00000000 		.4byte	.LFB33
 2479 0004 38000000 		.4byte	.LFE33
 2480 0008 00000000 		.4byte	.LFB34
 2481 000c 5C010000 		.4byte	.LFE34
 2482 0010 00000000 		.4byte	.LFB35
 2483 0014 12000000 		.4byte	.LFE35
 2484 0018 00000000 		.4byte	.LFB36
 2485 001c 12000000 		.4byte	.LFE36
 2486 0020 00000000 		.4byte	.LFB37
 2487 0024 34000000 		.4byte	.LFE37
 2488 0028 00000000 		.4byte	.LFB38
 2489 002c 34000000 		.4byte	.LFE38
 2490 0030 00000000 		.4byte	.LFB39
 2491 0034 26000000 		.4byte	.LFE39
 2492 0038 00000000 		.4byte	.LFB40
 2493 003c 3E000000 		.4byte	.LFE40
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 50


 2494 0040 00000000 		.4byte	.LFB41
 2495 0044 58000000 		.4byte	.LFE41
 2496 0048 00000000 		.4byte	.LFB42
 2497 004c 44000000 		.4byte	.LFE42
 2498 0050 00000000 		.4byte	.LFB43
 2499 0054 2C010000 		.4byte	.LFE43
 2500 0058 00000000 		.4byte	.LFB44
 2501 005c 60000000 		.4byte	.LFE44
 2502 0060 00000000 		.4byte	.LFB45
 2503 0064 72000000 		.4byte	.LFE45
 2504 0068 00000000 		.4byte	.LFB46
 2505 006c 92000000 		.4byte	.LFE46
 2506 0070 00000000 		.4byte	.LFB47
 2507 0074 64000000 		.4byte	.LFE47
 2508 0078 00000000 		.4byte	.LFB48
 2509 007c 80000000 		.4byte	.LFE48
 2510 0080 00000000 		.4byte	.LFB49
 2511 0084 8C000000 		.4byte	.LFE49
 2512 0088 00000000 		.4byte	0
 2513 008c 00000000 		.4byte	0
 2514              		.section	.debug_line,"",%progbits
 2515              	.Ldebug_line0:
 2516 0000 6D030000 		.section	.debug_str,"MS",%progbits,1
 2516      02006201 
 2516      00000201 
 2516      FB0E0D00 
 2516      01010101 
 2517              	.LASF59:
 2518 0000 7072696E 		.ascii	"printf\000"
 2518      746600
 2519              	.LASF36:
 2520 0007 77697A6E 		.ascii	"wiznetReadUdpFrame\000"
 2520      65745265 
 2520      61645564 
 2520      70467261 
 2520      6D6500
 2521              	.LASF43:
 2522 001a 626C6B53 		.ascii	"blkSel\000"
 2522      656C00
 2523              	.LASF38:
 2524 0021 77697A6E 		.ascii	"wiznetPrintRegisters\000"
 2524      65745072 
 2524      696E7452 
 2524      65676973 
 2524      74657273 
 2525              	.LASF3:
 2526 0036 5F5F7569 		.ascii	"__uint8_t\000"
 2526      6E74385F 
 2526      7400
 2527              	.LASF6:
 2528 0040 6C6F6E67 		.ascii	"long int\000"
 2528      20696E74 
 2528      00
 2529              	.LASF52:
 2530 0049 77697A6E 		.ascii	"wiznetTxPointer\000"
 2530      65745478 
 2530      506F696E 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 51


 2530      74657200 
 2531              	.LASF9:
 2532 0059 6C6F6E67 		.ascii	"long long unsigned int\000"
 2532      206C6F6E 
 2532      6720756E 
 2532      7369676E 
 2532      65642069 
 2533              	.LASF26:
 2534 0070 77697A6E 		.ascii	"wiznetOpen\000"
 2534      65744F70 
 2534      656E00
 2535              	.LASF46:
 2536 007b 73726341 		.ascii	"srcArray\000"
 2536      72726179 
 2536      00
 2537              	.LASF8:
 2538 0084 6C6F6E67 		.ascii	"long long int\000"
 2538      206C6F6E 
 2538      6720696E 
 2538      7400
 2539              	.LASF0:
 2540 0092 7369676E 		.ascii	"signed char\000"
 2540      65642063 
 2540      68617200 
 2541              	.LASF31:
 2542 009e 77697A6E 		.ascii	"wiznetClearInterrupts\000"
 2542      6574436C 
 2542      65617249 
 2542      6E746572 
 2542      72757074 
 2543              	.LASF56:
 2544 00b4 433A5C55 		.ascii	"C:\\Users\\Samuel\\Documents\\GitHub\\BYU-MarsRover"
 2544      73657273 
 2544      5C53616D 
 2544      75656C5C 
 2544      446F6375 
 2545 00e2 5C41726D 		.ascii	"\\Arm\\arm_controller_v2\\arm_controller_v2.1.cydsn"
 2545      5C61726D 
 2545      5F636F6E 
 2545      74726F6C 
 2545      6C65725F 
 2546 0112 00       		.ascii	"\000"
 2547              	.LASF44:
 2548 0113 77697A6E 		.ascii	"wiznetWrite16b\000"
 2548      65745772 
 2548      69746531 
 2548      366200
 2549              	.LASF12:
 2550 0122 75696E74 		.ascii	"uint16_t\000"
 2550      31365F74 
 2550      00
 2551              	.LASF15:
 2552 012b 646F7562 		.ascii	"double\000"
 2552      6C6500
 2553              	.LASF24:
 2554 0132 75647043 		.ascii	"udpConfig\000"
 2554      6F6E6669 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 52


 2554      6700
 2555              	.LASF13:
 2556 013c 75696E74 		.ascii	"uint32\000"
 2556      333200
 2557              	.LASF25:
 2558 0143 77697A6E 		.ascii	"wiznetOldMacAddr\000"
 2558      65744F6C 
 2558      644D6163 
 2558      41646472 
 2558      00
 2559              	.LASF33:
 2560 0154 636F6D6D 		.ascii	"commonInt\000"
 2560      6F6E496E 
 2560      7400
 2561              	.LASF40:
 2562 015e 72656164 		.ascii	"readArray\000"
 2562      41727261 
 2562      7900
 2563              	.LASF35:
 2564 0168 61727261 		.ascii	"array\000"
 2564      7900
 2565              	.LASF10:
 2566 016e 756E7369 		.ascii	"unsigned int\000"
 2566      676E6564 
 2566      20696E74 
 2566      00
 2567              	.LASF22:
 2568 017b 64737455 		.ascii	"dstUdpPort\000"
 2568      6470506F 
 2568      727400
 2569              	.LASF7:
 2570 0186 6C6F6E67 		.ascii	"long unsigned int\000"
 2570      20756E73 
 2570      69676E65 
 2570      6420696E 
 2570      7400
 2571              	.LASF58:
 2572 0198 72656376 		.ascii	"recvSize\000"
 2572      53697A65 
 2572      00
 2573              	.LASF30:
 2574 01a1 77697A6E 		.ascii	"wiznetReceive\000"
 2574      65745265 
 2574      63656976 
 2574      6500
 2575              	.LASF19:
 2576 01af 64617461 		.ascii	"data\000"
 2576      00
 2577              	.LASF5:
 2578 01b4 73686F72 		.ascii	"short unsigned int\000"
 2578      7420756E 
 2578      7369676E 
 2578      65642069 
 2578      6E7400
 2579              	.LASF41:
 2580 01c7 77697A6E 		.ascii	"wiznetWrite8b\000"
 2580      65745772 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 53


 2580      69746538 
 2580      6200
 2581              	.LASF2:
 2582 01d5 73686F72 		.ascii	"short int\000"
 2582      7420696E 
 2582      7400
 2583              	.LASF51:
 2584 01df 64737441 		.ascii	"dstArray\000"
 2584      72726179 
 2584      00
 2585              	.LASF17:
 2586 01e8 72656733 		.ascii	"reg32\000"
 2586      3200
 2587              	.LASF42:
 2588 01ee 72656741 		.ascii	"regAddr\000"
 2588      64647200 
 2589              	.LASF21:
 2590 01f6 64737449 		.ascii	"dstIpAddr\000"
 2590      70416464 
 2590      7200
 2591              	.LASF18:
 2592 0200 73697A65 		.ascii	"sizetype\000"
 2592      74797065 
 2592      00
 2593              	.LASF39:
 2594 0209 626C6B53 		.ascii	"blkSelect\000"
 2594      656C6563 
 2594      7400
 2595              	.LASF14:
 2596 0213 666C6F61 		.ascii	"float\000"
 2596      7400
 2597              	.LASF1:
 2598 0219 756E7369 		.ascii	"unsigned char\000"
 2598      676E6564 
 2598      20636861 
 2598      7200
 2599              	.LASF54:
 2600 0227 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2600      4320342E 
 2600      382E3420 
 2600      32303134 
 2600      30353236 
 2601 025a 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2601      20726576 
 2601      6973696F 
 2601      6E203231 
 2601      31333538 
 2602 028d 30202D73 		.ascii	"0 -std=gnu99 -ffunction-sections\000"
 2602      74643D67 
 2602      6E753939 
 2602      202D6666 
 2602      756E6374 
 2603              	.LASF29:
 2604 02ae 77697A6E 		.ascii	"wiznetInit\000"
 2604      6574496E 
 2604      697400
 2605              	.LASF50:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 54


 2606 02b9 77697A6E 		.ascii	"wiznetReadArray\000"
 2606      65745265 
 2606      61644172 
 2606      72617900 
 2607              	.LASF55:
 2608 02c9 2E5C7769 		.ascii	".\\wiznet5500.c\000"
 2608      7A6E6574 
 2608      35353030 
 2608      2E6300
 2609              	.LASF34:
 2610 02d8 736F636B 		.ascii	"socketInt\000"
 2610      6574496E 
 2610      7400
 2611              	.LASF16:
 2612 02e2 63686172 		.ascii	"char\000"
 2612      00
 2613              	.LASF45:
 2614 02e7 77697A6E 		.ascii	"wiznetWriteArray\000"
 2614      65745772 
 2614      69746541 
 2614      72726179 
 2614      00
 2615              	.LASF4:
 2616 02f8 5F5F7569 		.ascii	"__uint16_t\000"
 2616      6E743136 
 2616      5F7400
 2617              	.LASF53:
 2618 0303 77697A6E 		.ascii	"wiznetRxPointer\000"
 2618      65745278 
 2618      506F696E 
 2618      74657200 
 2619              	.LASF47:
 2620 0313 77697A6E 		.ascii	"wiznetRead8b\000"
 2620      65745265 
 2620      61643862 
 2620      00
 2621              	.LASF32:
 2622 0320 77697A6E 		.ascii	"wiznetConfigInterrupts\000"
 2622      6574436F 
 2622      6E666967 
 2622      496E7465 
 2622      72727570 
 2623              	.LASF28:
 2624 0337 77697A6E 		.ascii	"wiznetSend\000"
 2624      65745365 
 2624      6E6400
 2625              	.LASF20:
 2626 0342 6F776E49 		.ascii	"ownIpAddr\000"
 2626      70416464 
 2626      7200
 2627              	.LASF37:
 2628 034c 77697A6E 		.ascii	"wiznetWriteUdpFrame\000"
 2628      65745772 
 2628      69746555 
 2628      64704672 
 2628      616D6500 
 2629              	.LASF11:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccXu4ynk.s 			page 55


 2630 0360 75696E74 		.ascii	"uint8_t\000"
 2630      385F7400 
 2631              	.LASF49:
 2632 0368 77697A6E 		.ascii	"wiznetRead16b\000"
 2632      65745265 
 2632      61643136 
 2632      6200
 2633              	.LASF23:
 2634 0376 636D6441 		.ascii	"cmdArray\000"
 2634      72726179 
 2634      00
 2635              	.LASF27:
 2636 037f 77697A6E 		.ascii	"wiznetClose\000"
 2636      6574436C 
 2636      6F736500 
 2637              	.LASF48:
 2638 038b 72657375 		.ascii	"result\000"
 2638      6C7400
 2639              	.LASF57:
 2640 0392 7472616E 		.ascii	"transferSPI\000"
 2640      73666572 
 2640      53504900 
 2641              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br

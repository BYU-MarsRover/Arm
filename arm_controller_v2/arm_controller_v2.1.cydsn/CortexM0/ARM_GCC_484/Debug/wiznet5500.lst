ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"wiznet5500.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.transferSPI,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	transferSPI, %function
  22              	transferSPI:
  23              	.LFB33:
  24              		.file 1 ".\\spi.h"
   1:.\spi.h       **** #ifndef CYPRESS_ROVER_SPI_DEF_H
   2:.\spi.h       **** #define CYPRESS_ROVER_SPI_DEF_H
   3:.\spi.h       **** 
   4:.\spi.h       **** #include <project.h>
   5:.\spi.h       **** #include <stdint.h>
   6:.\spi.h       **** 
   7:.\spi.h       **** // Trying the C99 Definition, as per http://www.greenend.org.uk/rjk/tech/inline.html
   8:.\spi.h       **** // inline uint8_t transferSPI(uint8_t);
   9:.\spi.h       **** 
  10:.\spi.h       **** 
  11:.\spi.h       **** // Try defining the whole thing in the header:
  12:.\spi.h       **** // inline uint8_t transferSPI(uint8_t data){ // This results in compile failure, must be static
  13:.\spi.h       **** static inline uint8_t transferSPI(uint8_t data){
  25              		.loc 1 13 0
  26              		.cfi_startproc
  27 0000 80B5     		push	{r7, lr}
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 7, -8
  30              		.cfi_offset 14, -4
  31 0002 82B0     		sub	sp, sp, #8
  32              		.cfi_def_cfa_offset 16
  33 0004 00AF     		add	r7, sp, #0
  34              		.cfi_def_cfa_register 7
  35 0006 021C     		mov	r2, r0
  36 0008 FB1D     		add	r3, r7, #7
  37 000a 1A70     		strb	r2, [r3]
  14:.\spi.h       **** 	SPIM_1_WriteTxData(data);//SPI_1_SpiUartWriteTxData(data);
  38              		.loc 1 14 0
  39 000c FB1D     		add	r3, r7, #7
  40 000e 1B78     		ldrb	r3, [r3]
  41 0010 181C     		mov	r0, r3
  42 0012 FFF7FEFF 		bl	SPIM_1_WriteTxData
  15:.\spi.h       **** 	while(!(SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE)); //SPI_1_SpiIsBusBusy()
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 2


  43              		.loc 1 15 0
  44 0016 C046     		mov	r8, r8
  45              	.L2:
  46              		.loc 1 15 0 is_stmt 0 discriminator 1
  47 0018 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
  48 001c 031C     		mov	r3, r0
  49 001e 1A1C     		mov	r2, r3
  50 0020 0123     		mov	r3, #1
  51 0022 1340     		and	r3, r2
  52 0024 F8D0     		beq	.L2
  16:.\spi.h       **** 	return( ((uint8_t) (SPIM_1_ReadRxData())) ); //SPI_1_SpiUartReadRxData()
  53              		.loc 1 16 0 is_stmt 1
  54 0026 FFF7FEFF 		bl	SPIM_1_ReadRxData
  55 002a 031C     		mov	r3, r0
  17:.\spi.h       **** }
  56              		.loc 1 17 0
  57 002c 181C     		mov	r0, r3
  58 002e BD46     		mov	sp, r7
  59 0030 02B0     		add	sp, sp, #8
  60              		@ sp needed
  61 0032 80BD     		pop	{r7, pc}
  62              		.cfi_endproc
  63              	.LFE33:
  64              		.size	transferSPI, .-transferSPI
  65              		.bss
  66              		.align	1
  67              	wiznetTxPointer:
  68 0000 0000     		.space	2
  69              		.align	1
  70              	wiznetRxPointer:
  71 0002 0000     		.space	2
  72              		.section	.rodata
  73              		.align	2
  74              	.LC0:
  75 0000 00       		.byte	0
  76 0001 C0       		.byte	-64
  77 0002 A8       		.byte	-88
  78 0003 01       		.byte	1
  79 0004 01       		.byte	1
  80 0005 FF       		.byte	-1
  81 0006 FF       		.byte	-1
  82 0007 FF       		.byte	-1
  83 0008 00       		.byte	0
  84 0009 00       		.byte	0
  85 000a 08       		.byte	8
  86 000b DC       		.byte	-36
  87 000c FF       		.byte	-1
  88 000d FF       		.byte	-1
  89 000e FF       		.byte	-1
  90 000f C0       		.byte	-64
  91 0010 A8       		.byte	-88
  92 0011 01       		.byte	1
  93 0012 FE       		.byte	-2
  94 0013 00       		.align	2
  95              	.LC1:
  96 0014 02       		.byte	2
  97 0015 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 3


  98 0016 FF       		.byte	-1
  99 0017 00       		.byte	0
 100 0018 FE       		.byte	-2
 101 0019 01       		.byte	1
 102 001a 00       		.byte	0
 103 001b 00       		.byte	0
 104 001c 00       		.byte	0
 105 001d 00       		.byte	0
 106 001e 00       		.byte	0
 107 001f 00       		.byte	0
 108 0020 C0       		.byte	-64
 109 0021 A8       		.byte	-88
 110 0022 01       		.byte	1
 111 0023 01       		.byte	1
 112 0024 69       		.byte	105
 113 0025 87       		.byte	-121
 114              		.section	.text.wiznetInit,"ax",%progbits
 115              		.align	2
 116              		.global	wiznetInit
 117              		.code	16
 118              		.thumb_func
 119              		.type	wiznetInit, %function
 120              	wiznetInit:
 121              	.LFB34:
 122              		.file 2 ".\\wiznet5500.c"
   1:.\wiznet5500.c **** // BYU Mars Rover WizNet Library
   2:.\wiznet5500.c **** // Authors:
   3:.\wiznet5500.c **** // 		Steve Carlson
   4:.\wiznet5500.c **** // 		<Your Name Here>
   5:.\wiznet5500.c **** 
   6:.\wiznet5500.c **** // Totally Bare-bones, written-in-24-hours.
   7:.\wiznet5500.c **** // Recommend using https://github.com/Wiznet/WIZ_Ethernet_Library later
   8:.\wiznet5500.c **** 
   9:.\wiznet5500.c **** #include <project.h>
  10:.\wiznet5500.c **** #include <stdint.h>
  11:.\wiznet5500.c **** #include "wiznet5500.h"
  12:.\wiznet5500.c **** #include "spi.h"
  13:.\wiznet5500.c **** // #include "rover_main.h" // For some reason, including this breaks it all. 
  14:.\wiznet5500.c **** // 		Only needed for the following macros:
  15:.\wiznet5500.c **** #define HIGH			1
  16:.\wiznet5500.c **** #define LOW				0
  17:.\wiznet5500.c **** 
  18:.\wiznet5500.c **** // Application-Scope Defines
  19:.\wiznet5500.c **** 
  20:.\wiznet5500.c **** #define WIZ_MAX_MESSAGE_SEGMENT		100
  21:.\wiznet5500.c **** 
  22:.\wiznet5500.c **** // Global Variables
  23:.\wiznet5500.c **** static uint16_t wiznetTxPointer;
  24:.\wiznet5500.c **** static uint16_t wiznetRxPointer;
  25:.\wiznet5500.c **** 
  26:.\wiznet5500.c **** uint8_t wiznetInit(uint8_t ownIpAddr, uint8_t dstIpAddr, uint16_t dstUdpPort){
 123              		.loc 2 26 0
 124              		.cfi_startproc
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 4


 129 0002 90B0     		sub	sp, sp, #64
 130              		.cfi_def_cfa_offset 72
 131 0004 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
 133 0006 FB1D     		add	r3, r7, #7
 134 0008 1870     		strb	r0, [r3]
 135 000a BB1D     		add	r3, r7, #6
 136 000c 1970     		strb	r1, [r3]
 137 000e 3B1D     		add	r3, r7, #4
 138 0010 1A80     		strh	r2, [r3]
  27:.\wiznet5500.c **** 	// This is terrible, need a better way.
  28:.\wiznet5500.c **** 	uint8_t cmdArray[] = {0x00,192u,168u,1u,1u,255u,255u,255u,0u,0x00,0x08,0xDC,0xFF,0xFF,0xFF,192u,16
 139              		.loc 2 28 0
 140 0012 3A1C     		mov	r2, r7
 141 0014 2832     		add	r2, r2, #40
 142 0016 504B     		ldr	r3, .L8
 143 0018 111C     		mov	r1, r2
 144 001a 1A1C     		mov	r2, r3
 145 001c 1323     		mov	r3, #19
 146 001e 081C     		mov	r0, r1
 147 0020 111C     		mov	r1, r2
 148 0022 1A1C     		mov	r2, r3
 149 0024 FFF7FEFF 		bl	memcpy
  29:.\wiznet5500.c **** 	//                    --- | Gateway Addr  | Subnet Mask     | WizNet's MAC Address        | WizNet
  30:.\wiznet5500.c **** 
  31:.\wiznet5500.c **** 	uint8_t udpConfig[] = {0x02,0x00,0xFF,0x00,0xFE,0x01,0x00,0x00,0x00,0x00,0x00,0x00,192u,168u,1u,1u
 150              		.loc 2 31 0
 151 0028 3A1C     		mov	r2, r7
 152 002a 1432     		add	r2, r2, #20
 153 002c 4B4B     		ldr	r3, .L8+4
 154 002e 111C     		mov	r1, r2
 155 0030 1A1C     		mov	r2, r3
 156 0032 1223     		mov	r3, #18
 157 0034 081C     		mov	r0, r1
 158 0036 111C     		mov	r1, r2
 159 0038 1A1C     		mov	r2, r3
 160 003a FFF7FEFF 		bl	memcpy
  32:.\wiznet5500.c **** 	//                     UDP |IDLE|Clr |----| :65025  |  No Dst Hw Address          | 192.168.1.1   
  33:.\wiznet5500.c **** 	
  34:.\wiznet5500.c **** 	
  35:.\wiznet5500.c **** 	// Destination IP Address Ending
  36:.\wiznet5500.c **** 	// cmdArray[4] = dstIpAddr; // Gateway should always be 192.168.1.1
  37:.\wiznet5500.c **** 	udpConfig[15] = dstIpAddr;
 161              		.loc 2 37 0
 162 003e 3B1C     		mov	r3, r7
 163 0040 1433     		add	r3, r3, #20
 164 0042 BA1D     		add	r2, r7, #6
 165 0044 1278     		ldrb	r2, [r2]
 166 0046 DA73     		strb	r2, [r3, #15]
  38:.\wiznet5500.c **** 	udpConfig[16] = dstUdpPort>>8;
 167              		.loc 2 38 0
 168 0048 3B1D     		add	r3, r7, #4
 169 004a 1B88     		ldrh	r3, [r3]
 170 004c 1B0A     		lsr	r3, r3, #8
 171 004e 9BB2     		uxth	r3, r3
 172 0050 DAB2     		uxtb	r2, r3
 173 0052 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 5


 174 0054 1433     		add	r3, r3, #20
 175 0056 1A74     		strb	r2, [r3, #16]
  39:.\wiznet5500.c **** 	udpConfig[17] = dstUdpPort&0xFF;
 176              		.loc 2 39 0
 177 0058 3B1D     		add	r3, r7, #4
 178 005a 1B88     		ldrh	r3, [r3]
 179 005c DAB2     		uxtb	r2, r3
 180 005e 3B1C     		mov	r3, r7
 181 0060 1433     		add	r3, r3, #20
 182 0062 5A74     		strb	r2, [r3, #17]
  40:.\wiznet5500.c **** 	
  41:.\wiznet5500.c **** 	// Learn Current MAC
  42:.\wiznet5500.c **** 	uint8_t wiznetOldMacAddr[6];
  43:.\wiznet5500.c **** 	wiznetReadArray(WIZNET_SHAR, WIZNET_BLK_COMMON, wiznetOldMacAddr, 6); // sizeof(wiznetOldMacAddr)
 183              		.loc 2 43 0
 184 0064 3B1C     		mov	r3, r7
 185 0066 0C33     		add	r3, r3, #12
 186 0068 0920     		mov	r0, #9
 187 006a 0021     		mov	r1, #0
 188 006c 1A1C     		mov	r2, r3
 189 006e 0623     		mov	r3, #6
 190 0070 FFF7FEFF 		bl	wiznetReadArray
  44:.\wiznet5500.c **** 	
  45:.\wiznet5500.c **** 	// WizNet Module IP Address Ending
  46:.\wiznet5500.c **** 	cmdArray[18] = ownIpAddr;
 191              		.loc 2 46 0
 192 0074 3B1C     		mov	r3, r7
 193 0076 2833     		add	r3, r3, #40
 194 0078 FA1D     		add	r2, r7, #7
 195 007a 1278     		ldrb	r2, [r2]
 196 007c 9A74     		strb	r2, [r3, #18]
  47:.\wiznet5500.c **** 	
  48:.\wiznet5500.c **** 	// Ephemeral Port (WizNet's own UDP Port when sending UDP, usually value above 0xC000)
  49:.\wiznet5500.c **** 	// uint16_t ephemUdpPort = (0xC000 + ((wiznetOldMacAddr[5]*(1+ownIpAddr))&0x3FFF) ); //Nice way to
  50:.\wiznet5500.c **** 	// udpConfig[4] = ephemUdpPort>>8;
  51:.\wiznet5500.c **** 	// udpConfig[5] = ephemUdpPort&0xFF;
  52:.\wiznet5500.c **** 	
  53:.\wiznet5500.c **** 	udpConfig[4] = dstUdpPort>>8;
 197              		.loc 2 53 0
 198 007e 3B1D     		add	r3, r7, #4
 199 0080 1B88     		ldrh	r3, [r3]
 200 0082 1B0A     		lsr	r3, r3, #8
 201 0084 9BB2     		uxth	r3, r3
 202 0086 DAB2     		uxtb	r2, r3
 203 0088 3B1C     		mov	r3, r7
 204 008a 1433     		add	r3, r3, #20
 205 008c 1A71     		strb	r2, [r3, #4]
  54:.\wiznet5500.c **** 	udpConfig[5] = dstUdpPort&0xFF;
 206              		.loc 2 54 0
 207 008e 3B1D     		add	r3, r7, #4
 208 0090 1B88     		ldrh	r3, [r3]
 209 0092 DAB2     		uxtb	r2, r3
 210 0094 3B1C     		mov	r3, r7
 211 0096 1433     		add	r3, r3, #20
 212 0098 5A71     		strb	r2, [r3, #5]
  55:.\wiznet5500.c **** 	
  56:.\wiznet5500.c **** 	// Write all the thus prepared values to the WizNet Module and Open the Socket
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 6


  57:.\wiznet5500.c **** 	wiznetWriteArray(WIZNET_MR,WIZNET_BLK_COMMON,cmdArray,sizeof(cmdArray));
 213              		.loc 2 57 0
 214 009a 3B1C     		mov	r3, r7
 215 009c 2833     		add	r3, r3, #40
 216 009e 0020     		mov	r0, #0
 217 00a0 0021     		mov	r1, #0
 218 00a2 1A1C     		mov	r2, r3
 219 00a4 1323     		mov	r3, #19
 220 00a6 FFF7FEFF 		bl	wiznetWriteArray
  58:.\wiznet5500.c **** 	wiznetWriteArray(WIZNET_Sn_MR,WIZNET_BLK_S0_REG,udpConfig,sizeof(udpConfig));
 221              		.loc 2 58 0
 222 00aa 3B1C     		mov	r3, r7
 223 00ac 1433     		add	r3, r3, #20
 224 00ae 0020     		mov	r0, #0
 225 00b0 0121     		mov	r1, #1
 226 00b2 1A1C     		mov	r2, r3
 227 00b4 1223     		mov	r3, #18
 228 00b6 FFF7FEFF 		bl	wiznetWriteArray
  59:.\wiznet5500.c **** 	wiznetWriteArray(WIZNET_SHAR,WIZNET_BLK_COMMON,wiznetOldMacAddr,6);
 229              		.loc 2 59 0
 230 00ba 3B1C     		mov	r3, r7
 231 00bc 0C33     		add	r3, r3, #12
 232 00be 0920     		mov	r0, #9
 233 00c0 0021     		mov	r1, #0
 234 00c2 1A1C     		mov	r2, r3
 235 00c4 0623     		mov	r3, #6
 236 00c6 FFF7FEFF 		bl	wiznetWriteArray
  60:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_MSSR,WIZNET_BLK_S0_REG,WIZ_MAX_MESSAGE_SEGMENT);
 237              		.loc 2 60 0
 238 00ca 1220     		mov	r0, #18
 239 00cc 0121     		mov	r1, #1
 240 00ce 6422     		mov	r2, #100
 241 00d0 FFF7FEFF 		bl	wiznetWrite16b
  61:.\wiznet5500.c **** 	CyDelay(100);
 242              		.loc 2 61 0
 243 00d4 6420     		mov	r0, #100
 244 00d6 FFF7FEFF 		bl	CyDelay
  62:.\wiznet5500.c **** 	wiznetOpen();
 245              		.loc 2 62 0
 246 00da FFF7FEFF 		bl	wiznetOpen
  63:.\wiznet5500.c **** 	
  64:.\wiznet5500.c **** 	// Configure Wiznet Interrupts
  65:.\wiznet5500.c **** 	wiznetConfigInterrupts(0x00,(WIZNET_Sn_IMR_SEND_OK | WIZNET_Sn_IMR_RECV) );
 247              		.loc 2 65 0
 248 00de 0020     		mov	r0, #0
 249 00e0 1421     		mov	r1, #20
 250 00e2 FFF7FEFF 		bl	wiznetConfigInterrupts
  66:.\wiznet5500.c **** 
  67:.\wiznet5500.c **** 	// Write sequential values to the TX Buffer, to know where on earth it is writing from.
  68:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 251              		.loc 2 68 0
 252 00e6 0020     		mov	r0, #0
 253 00e8 FFF7FEFF 		bl	WIZ_SS_Write
  69:.\wiznet5500.c **** 		// Address Phase
  70:.\wiznet5500.c **** 		transferSPI(0>>8);
 254              		.loc 2 70 0
 255 00ec 0020     		mov	r0, #0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 7


 256 00ee FFF7FEFF 		bl	transferSPI
  71:.\wiznet5500.c **** 		transferSPI(0&0xFF);
 257              		.loc 2 71 0
 258 00f2 0020     		mov	r0, #0
 259 00f4 FFF7FEFF 		bl	transferSPI
  72:.\wiznet5500.c **** 		
  73:.\wiznet5500.c **** 		// Control Phase
  74:.\wiznet5500.c **** 		transferSPI(((WIZNET_BLK_S0_TX&0x1F)<<3)|(0x01<<2)|0x00);		
 260              		.loc 2 74 0
 261 00f8 1420     		mov	r0, #20
 262 00fa FFF7FEFF 		bl	transferSPI
 263              	.LBB2:
  75:.\wiznet5500.c **** 		
  76:.\wiznet5500.c **** 		// Data Phase
  77:.\wiznet5500.c **** 		for(uint16_t k=0; k<1024; k++){
 264              		.loc 2 77 0
 265 00fe 3B1C     		mov	r3, r7
 266 0100 3E33     		add	r3, r3, #62
 267 0102 0022     		mov	r2, #0
 268 0104 1A80     		strh	r2, [r3]
 269 0106 16E0     		b	.L5
 270              	.L6:
  78:.\wiznet5500.c **** 			transferSPI((uint8_t)(k>>8));
 271              		.loc 2 78 0 discriminator 2
 272 0108 3B1C     		mov	r3, r7
 273 010a 3E33     		add	r3, r3, #62
 274 010c 1B88     		ldrh	r3, [r3]
 275 010e 1B0A     		lsr	r3, r3, #8
 276 0110 9BB2     		uxth	r3, r3
 277 0112 DBB2     		uxtb	r3, r3
 278 0114 181C     		mov	r0, r3
 279 0116 FFF7FEFF 		bl	transferSPI
  79:.\wiznet5500.c **** 			transferSPI((uint8_t)(k&0xFF));
 280              		.loc 2 79 0 discriminator 2
 281 011a 3B1C     		mov	r3, r7
 282 011c 3E33     		add	r3, r3, #62
 283 011e 1B88     		ldrh	r3, [r3]
 284 0120 DBB2     		uxtb	r3, r3
 285 0122 181C     		mov	r0, r3
 286 0124 FFF7FEFF 		bl	transferSPI
  77:.\wiznet5500.c **** 		for(uint16_t k=0; k<1024; k++){
 287              		.loc 2 77 0 discriminator 2
 288 0128 3B1C     		mov	r3, r7
 289 012a 3E33     		add	r3, r3, #62
 290 012c 1A88     		ldrh	r2, [r3]
 291 012e 3B1C     		mov	r3, r7
 292 0130 3E33     		add	r3, r3, #62
 293 0132 0132     		add	r2, r2, #1
 294 0134 1A80     		strh	r2, [r3]
 295              	.L5:
  77:.\wiznet5500.c **** 		for(uint16_t k=0; k<1024; k++){
 296              		.loc 2 77 0 is_stmt 0 discriminator 1
 297 0136 3B1C     		mov	r3, r7
 298 0138 3E33     		add	r3, r3, #62
 299 013a 1A88     		ldrh	r2, [r3]
 300 013c 084B     		ldr	r3, .L8+8
 301 013e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 8


 302 0140 E2D9     		bls	.L6
 303              	.LBE2:
  80:.\wiznet5500.c **** 		}
  81:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 304              		.loc 2 81 0 is_stmt 1
 305 0142 0120     		mov	r0, #1
 306 0144 FFF7FEFF 		bl	WIZ_SS_Write
  82:.\wiznet5500.c ****     
  83:.\wiznet5500.c ****     return wiznetOldMacAddr[5];
 307              		.loc 2 83 0
 308 0148 3B1C     		mov	r3, r7
 309 014a 0C33     		add	r3, r3, #12
 310 014c 5B79     		ldrb	r3, [r3, #5]
  84:.\wiznet5500.c **** }
 311              		.loc 2 84 0
 312 014e 181C     		mov	r0, r3
 313 0150 BD46     		mov	sp, r7
 314 0152 10B0     		add	sp, sp, #64
 315              		@ sp needed
 316 0154 80BD     		pop	{r7, pc}
 317              	.L9:
 318 0156 C046     		.align	2
 319              	.L8:
 320 0158 00000000 		.word	.LC0
 321 015c 14000000 		.word	.LC1
 322 0160 FF030000 		.word	1023
 323              		.cfi_endproc
 324              	.LFE34:
 325              		.size	wiznetInit, .-wiznetInit
 326              		.section	.text.wiznetOpen,"ax",%progbits
 327              		.align	2
 328              		.global	wiznetOpen
 329              		.code	16
 330              		.thumb_func
 331              		.type	wiznetOpen, %function
 332              	wiznetOpen:
 333              	.LFB35:
  85:.\wiznet5500.c **** 
  86:.\wiznet5500.c **** // Public Functions
  87:.\wiznet5500.c **** void wiznetOpen(void){
 334              		.loc 2 87 0
 335              		.cfi_startproc
 336 0000 80B5     		push	{r7, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 7, -8
 339              		.cfi_offset 14, -4
 340 0002 00AF     		add	r7, sp, #0
 341              		.cfi_def_cfa_register 7
  88:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x01); // OPEN UDP on Socket 0
 342              		.loc 2 88 0
 343 0004 0120     		mov	r0, #1
 344 0006 0121     		mov	r1, #1
 345 0008 0122     		mov	r2, #1
 346 000a FFF7FEFF 		bl	wiznetWrite8b
  89:.\wiznet5500.c **** }
 347              		.loc 2 89 0
 348 000e BD46     		mov	sp, r7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 9


 349              		@ sp needed
 350 0010 80BD     		pop	{r7, pc}
 351              		.cfi_endproc
 352              	.LFE35:
 353              		.size	wiznetOpen, .-wiznetOpen
 354 0012 C046     		.section	.text.wiznetClose,"ax",%progbits
 355              		.align	2
 356              		.global	wiznetClose
 357              		.code	16
 358              		.thumb_func
 359              		.type	wiznetClose, %function
 360              	wiznetClose:
 361              	.LFB36:
  90:.\wiznet5500.c **** 
  91:.\wiznet5500.c **** void wiznetClose(void){
 362              		.loc 2 91 0
 363              		.cfi_startproc
 364 0000 80B5     		push	{r7, lr}
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 7, -8
 367              		.cfi_offset 14, -4
 368 0002 00AF     		add	r7, sp, #0
 369              		.cfi_def_cfa_register 7
  92:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x10); // Close UDP on Socket 0
 370              		.loc 2 92 0
 371 0004 0120     		mov	r0, #1
 372 0006 0121     		mov	r1, #1
 373 0008 1022     		mov	r2, #16
 374 000a FFF7FEFF 		bl	wiznetWrite8b
  93:.\wiznet5500.c **** }
 375              		.loc 2 93 0
 376 000e BD46     		mov	sp, r7
 377              		@ sp needed
 378 0010 80BD     		pop	{r7, pc}
 379              		.cfi_endproc
 380              	.LFE36:
 381              		.size	wiznetClose, .-wiznetClose
 382 0012 C046     		.section	.text.wiznetSend,"ax",%progbits
 383              		.align	2
 384              		.global	wiznetSend
 385              		.code	16
 386              		.thumb_func
 387              		.type	wiznetSend, %function
 388              	wiznetSend:
 389              	.LFB37:
  94:.\wiznet5500.c **** 
  95:.\wiznet5500.c **** void wiznetSend(void){
 390              		.loc 2 95 0
 391              		.cfi_startproc
 392 0000 80B5     		push	{r7, lr}
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 7, -8
 395              		.cfi_offset 14, -4
 396 0002 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
  96:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG,wiznetTxPointer);
 398              		.loc 2 96 0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 10


 399 0004 0A4B     		ldr	r3, .L13
 400 0006 1B88     		ldrh	r3, [r3]
 401 0008 2420     		mov	r0, #36
 402 000a 0121     		mov	r1, #1
 403 000c 1A1C     		mov	r2, r3
 404 000e FFF7FEFF 		bl	wiznetWrite16b
  97:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x20);
 405              		.loc 2 97 0
 406 0012 0120     		mov	r0, #1
 407 0014 0121     		mov	r1, #1
 408 0016 2022     		mov	r2, #32
 409 0018 FFF7FEFF 		bl	wiznetWrite8b
  98:.\wiznet5500.c **** 	wiznetTxPointer = wiznetRead16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG);
 410              		.loc 2 98 0
 411 001c 2420     		mov	r0, #36
 412 001e 0121     		mov	r1, #1
 413 0020 FFF7FEFF 		bl	wiznetRead16b
 414 0024 031C     		mov	r3, r0
 415 0026 1A1C     		mov	r2, r3
 416 0028 014B     		ldr	r3, .L13
 417 002a 1A80     		strh	r2, [r3]
  99:.\wiznet5500.c **** }
 418              		.loc 2 99 0
 419 002c BD46     		mov	sp, r7
 420              		@ sp needed
 421 002e 80BD     		pop	{r7, pc}
 422              	.L14:
 423              		.align	2
 424              	.L13:
 425 0030 00000000 		.word	wiznetTxPointer
 426              		.cfi_endproc
 427              	.LFE37:
 428              		.size	wiznetSend, .-wiznetSend
 429              		.section	.text.wiznetReceive,"ax",%progbits
 430              		.align	2
 431              		.global	wiznetReceive
 432              		.code	16
 433              		.thumb_func
 434              		.type	wiznetReceive, %function
 435              	wiznetReceive:
 436              	.LFB38:
 100:.\wiznet5500.c **** 
 101:.\wiznet5500.c **** void wiznetReceive(void){
 437              		.loc 2 101 0
 438              		.cfi_startproc
 439 0000 80B5     		push	{r7, lr}
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 0002 00AF     		add	r7, sp, #0
 444              		.cfi_def_cfa_register 7
 102:.\wiznet5500.c **** 	uint16_t recvSize;
 103:.\wiznet5500.c **** 	wiznetRxPointer = wiznetRead16b(WIZNET_Sn_RX_RD,WIZNET_BLK_S0_REG);
 445              		.loc 2 103 0
 446 0004 2820     		mov	r0, #40
 447 0006 0121     		mov	r1, #1
 448 0008 FFF7FEFF 		bl	wiznetRead16b
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 11


 449 000c 031C     		mov	r3, r0
 450 000e 1A1C     		mov	r2, r3
 451 0010 074B     		ldr	r3, .L16
 452 0012 1A80     		strh	r2, [r3]
 104:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x40);
 453              		.loc 2 104 0
 454 0014 0120     		mov	r0, #1
 455 0016 0121     		mov	r1, #1
 456 0018 4022     		mov	r2, #64
 457 001a FFF7FEFF 		bl	wiznetWrite8b
 105:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_RX_RD,WIZNET_BLK_S0_REG,wiznetRxPointer);
 458              		.loc 2 105 0
 459 001e 044B     		ldr	r3, .L16
 460 0020 1B88     		ldrh	r3, [r3]
 461 0022 2820     		mov	r0, #40
 462 0024 0121     		mov	r1, #1
 463 0026 1A1C     		mov	r2, r3
 464 0028 FFF7FEFF 		bl	wiznetWrite16b
 106:.\wiznet5500.c **** 	
 107:.\wiznet5500.c **** 	// printf(%u,wiznetRxPointer);
 108:.\wiznet5500.c **** }
 465              		.loc 2 108 0
 466 002c BD46     		mov	sp, r7
 467              		@ sp needed
 468 002e 80BD     		pop	{r7, pc}
 469              	.L17:
 470              		.align	2
 471              	.L16:
 472 0030 02000000 		.word	wiznetRxPointer
 473              		.cfi_endproc
 474              	.LFE38:
 475              		.size	wiznetReceive, .-wiznetReceive
 476              		.section	.text.wiznetClearInterrupts,"ax",%progbits
 477              		.align	2
 478              		.global	wiznetClearInterrupts
 479              		.code	16
 480              		.thumb_func
 481              		.type	wiznetClearInterrupts, %function
 482              	wiznetClearInterrupts:
 483              	.LFB39:
 109:.\wiznet5500.c **** 
 110:.\wiznet5500.c **** // void wiznetReceive(void){
 111:.\wiznet5500.c **** 	
 112:.\wiznet5500.c **** // }
 113:.\wiznet5500.c **** 
 114:.\wiznet5500.c **** // uint8_t wiznetReadInterrupts(void){
 115:.\wiznet5500.c **** // }
 116:.\wiznet5500.c **** 
 117:.\wiznet5500.c **** void wiznetClearInterrupts(void){
 484              		.loc 2 117 0
 485              		.cfi_startproc
 486 0000 80B5     		push	{r7, lr}
 487              		.cfi_def_cfa_offset 8
 488              		.cfi_offset 7, -8
 489              		.cfi_offset 14, -4
 490 0002 00AF     		add	r7, sp, #0
 491              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 12


 118:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_IR,WIZNET_BLK_S0_REG, 0xFF);
 492              		.loc 2 118 0
 493 0004 0220     		mov	r0, #2
 494 0006 0121     		mov	r1, #1
 495 0008 FF22     		mov	r2, #255
 496 000a FFF7FEFF 		bl	wiznetWrite8b
 119:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_SIR,WIZNET_BLK_COMMON, 0xFF);
 497              		.loc 2 119 0
 498 000e 1720     		mov	r0, #23
 499 0010 0021     		mov	r1, #0
 500 0012 FF22     		mov	r2, #255
 501 0014 FFF7FEFF 		bl	wiznetWrite8b
 120:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_IR,WIZNET_BLK_COMMON, 0xFF); // Counter-intuitive, but datasheet specifies wr
 502              		.loc 2 120 0
 503 0018 1520     		mov	r0, #21
 504 001a 0021     		mov	r1, #0
 505 001c FF22     		mov	r2, #255
 506 001e FFF7FEFF 		bl	wiznetWrite8b
 121:.\wiznet5500.c **** }
 507              		.loc 2 121 0
 508 0022 BD46     		mov	sp, r7
 509              		@ sp needed
 510 0024 80BD     		pop	{r7, pc}
 511              		.cfi_endproc
 512              	.LFE39:
 513              		.size	wiznetClearInterrupts, .-wiznetClearInterrupts
 514 0026 C046     		.section	.text.wiznetConfigInterrupts,"ax",%progbits
 515              		.align	2
 516              		.global	wiznetConfigInterrupts
 517              		.code	16
 518              		.thumb_func
 519              		.type	wiznetConfigInterrupts, %function
 520              	wiznetConfigInterrupts:
 521              	.LFB40:
 122:.\wiznet5500.c **** 
 123:.\wiznet5500.c **** void wiznetConfigInterrupts(uint8_t commonInt, uint8_t socketInt){
 522              		.loc 2 123 0
 523              		.cfi_startproc
 524 0000 80B5     		push	{r7, lr}
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 7, -8
 527              		.cfi_offset 14, -4
 528 0002 82B0     		sub	sp, sp, #8
 529              		.cfi_def_cfa_offset 16
 530 0004 00AF     		add	r7, sp, #0
 531              		.cfi_def_cfa_register 7
 532 0006 0A1C     		mov	r2, r1
 533 0008 FB1D     		add	r3, r7, #7
 534 000a 011C     		add	r1, r0, #0
 535 000c 1970     		strb	r1, [r3]
 536 000e BB1D     		add	r3, r7, #6
 537 0010 1A70     		strb	r2, [r3]
 124:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_IMR,WIZNET_BLK_S0_REG, socketInt);
 538              		.loc 2 124 0
 539 0012 BB1D     		add	r3, r7, #6
 540 0014 1B78     		ldrb	r3, [r3]
 541 0016 2C20     		mov	r0, #44
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 13


 542 0018 0121     		mov	r1, #1
 543 001a 1A1C     		mov	r2, r3
 544 001c FFF7FEFF 		bl	wiznetWrite8b
 125:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_SIMR,WIZNET_BLK_COMMON, 0x01); // Hardwired to just Socket 0
 545              		.loc 2 125 0
 546 0020 1820     		mov	r0, #24
 547 0022 0021     		mov	r1, #0
 548 0024 0122     		mov	r2, #1
 549 0026 FFF7FEFF 		bl	wiznetWrite8b
 126:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_IMR,WIZNET_BLK_COMMON, commonInt);
 550              		.loc 2 126 0
 551 002a FB1D     		add	r3, r7, #7
 552 002c 1B78     		ldrb	r3, [r3]
 553 002e 1620     		mov	r0, #22
 554 0030 0021     		mov	r1, #0
 555 0032 1A1C     		mov	r2, r3
 556 0034 FFF7FEFF 		bl	wiznetWrite8b
 127:.\wiznet5500.c **** }
 557              		.loc 2 127 0
 558 0038 BD46     		mov	sp, r7
 559 003a 02B0     		add	sp, sp, #8
 560              		@ sp needed
 561 003c 80BD     		pop	{r7, pc}
 562              		.cfi_endproc
 563              	.LFE40:
 564              		.size	wiznetConfigInterrupts, .-wiznetConfigInterrupts
 565 003e C046     		.section	.text.wiznetReadUdpFrame,"ax",%progbits
 566              		.align	2
 567              		.global	wiznetReadUdpFrame
 568              		.code	16
 569              		.thumb_func
 570              		.type	wiznetReadUdpFrame, %function
 571              	wiznetReadUdpFrame:
 572              	.LFB41:
 128:.\wiznet5500.c **** 
 129:.\wiznet5500.c **** uint16_t wiznetReadUdpFrame(uint8_t *array, uint8_t len){
 573              		.loc 2 129 0
 574              		.cfi_startproc
 575 0000 80B5     		push	{r7, lr}
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 7, -8
 578              		.cfi_offset 14, -4
 579 0002 82B0     		sub	sp, sp, #8
 580              		.cfi_def_cfa_offset 16
 581 0004 00AF     		add	r7, sp, #0
 582              		.cfi_def_cfa_register 7
 583 0006 7860     		str	r0, [r7, #4]
 584 0008 0A1C     		mov	r2, r1
 585 000a FB1C     		add	r3, r7, #3
 586 000c 1A70     		strb	r2, [r3]
 130:.\wiznet5500.c **** 	wiznetReadArray(wiznetRxPointer, WIZNET_BLK_S0_RX, array, len);
 587              		.loc 2 130 0
 588 000e 114B     		ldr	r3, .L22
 589 0010 1988     		ldrh	r1, [r3]
 590 0012 7A68     		ldr	r2, [r7, #4]
 591 0014 FB1C     		add	r3, r7, #3
 592 0016 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 14


 593 0018 081C     		mov	r0, r1
 594 001a 0321     		mov	r1, #3
 595 001c FFF7FEFF 		bl	wiznetReadArray
 131:.\wiznet5500.c **** 	
 132:.\wiznet5500.c **** 	// uint16_t recvSize = 0;
 133:.\wiznet5500.c **** 	wiznetRxPointer = wiznetRead16b(WIZNET_Sn_RX_WR,WIZNET_BLK_S0_REG);
 596              		.loc 2 133 0
 597 0020 2A20     		mov	r0, #42
 598 0022 0121     		mov	r1, #1
 599 0024 FFF7FEFF 		bl	wiznetRead16b
 600 0028 031C     		mov	r3, r0
 601 002a 1A1C     		mov	r2, r3
 602 002c 094B     		ldr	r3, .L22
 603 002e 1A80     		strh	r2, [r3]
 134:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_RX_RD,WIZNET_BLK_S0_REG,wiznetRxPointer);
 604              		.loc 2 134 0
 605 0030 084B     		ldr	r3, .L22
 606 0032 1B88     		ldrh	r3, [r3]
 607 0034 2820     		mov	r0, #40
 608 0036 0121     		mov	r1, #1
 609 0038 1A1C     		mov	r2, r3
 610 003a FFF7FEFF 		bl	wiznetWrite16b
 135:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x40);
 611              		.loc 2 135 0
 612 003e 0120     		mov	r0, #1
 613 0040 0121     		mov	r1, #1
 614 0042 4022     		mov	r2, #64
 615 0044 FFF7FEFF 		bl	wiznetWrite8b
 136:.\wiznet5500.c **** 	return wiznetRxPointer;
 616              		.loc 2 136 0
 617 0048 024B     		ldr	r3, .L22
 618 004a 1B88     		ldrh	r3, [r3]
 137:.\wiznet5500.c **** 	// return recvSize;
 138:.\wiznet5500.c **** }
 619              		.loc 2 138 0
 620 004c 181C     		mov	r0, r3
 621 004e BD46     		mov	sp, r7
 622 0050 02B0     		add	sp, sp, #8
 623              		@ sp needed
 624 0052 80BD     		pop	{r7, pc}
 625              	.L23:
 626              		.align	2
 627              	.L22:
 628 0054 02000000 		.word	wiznetRxPointer
 629              		.cfi_endproc
 630              	.LFE41:
 631              		.size	wiznetReadUdpFrame, .-wiznetReadUdpFrame
 632              		.section	.text.wiznetWriteUdpFrame,"ax",%progbits
 633              		.align	2
 634              		.global	wiznetWriteUdpFrame
 635              		.code	16
 636              		.thumb_func
 637              		.type	wiznetWriteUdpFrame, %function
 638              	wiznetWriteUdpFrame:
 639              	.LFB42:
 139:.\wiznet5500.c **** 
 140:.\wiznet5500.c **** uint16_t wiznetWriteUdpFrame(uint8_t *array, uint8_t len){
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 15


 640              		.loc 2 140 0
 641              		.cfi_startproc
 642 0000 80B5     		push	{r7, lr}
 643              		.cfi_def_cfa_offset 8
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 82B0     		sub	sp, sp, #8
 647              		.cfi_def_cfa_offset 16
 648 0004 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 650 0006 7860     		str	r0, [r7, #4]
 651 0008 0A1C     		mov	r2, r1
 652 000a FB1C     		add	r3, r7, #3
 653 000c 1A70     		strb	r2, [r3]
 141:.\wiznet5500.c **** 	
 142:.\wiznet5500.c **** 	// wiznetTxPointer = wiznetRead16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG);
 143:.\wiznet5500.c **** 	// wiznetWriteArray(wiznetTxPointer,WIZNET_BLK_S0_TX,array,len);
 144:.\wiznet5500.c **** 	// wiznetTxPointer += len;																	
 145:.\wiznet5500.c **** 	// wiznetWrite16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG,wiznetTxPointer);
 146:.\wiznet5500.c **** 	
 147:.\wiznet5500.c **** 	// Re-ordered the above and put the pointer manip in the Send method due to fluke.
 148:.\wiznet5500.c **** 	wiznetWriteArray(wiznetTxPointer,WIZNET_BLK_S0_TX,array,len);
 654              		.loc 2 148 0
 655 000e 0C4B     		ldr	r3, .L26
 656 0010 1988     		ldrh	r1, [r3]
 657 0012 7A68     		ldr	r2, [r7, #4]
 658 0014 FB1C     		add	r3, r7, #3
 659 0016 1B78     		ldrb	r3, [r3]
 660 0018 081C     		mov	r0, r1
 661 001a 0221     		mov	r1, #2
 662 001c FFF7FEFF 		bl	wiznetWriteArray
 149:.\wiznet5500.c **** 	wiznetTxPointer += len;
 663              		.loc 2 149 0
 664 0020 FB1C     		add	r3, r7, #3
 665 0022 1B78     		ldrb	r3, [r3]
 666 0024 9AB2     		uxth	r2, r3
 667 0026 064B     		ldr	r3, .L26
 668 0028 1B88     		ldrh	r3, [r3]
 669 002a D318     		add	r3, r2, r3
 670 002c 9AB2     		uxth	r2, r3
 671 002e 044B     		ldr	r3, .L26
 672 0030 1A80     		strh	r2, [r3]
 150:.\wiznet5500.c **** 	
 151:.\wiznet5500.c **** 	// CyDelay(10); // These two lines proved that the fluke with the WizNet is not time-variant
 152:.\wiznet5500.c **** 	// wiznetRead16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG);
 153:.\wiznet5500.c **** 	return wiznetTxPointer;
 673              		.loc 2 153 0
 674 0032 034B     		ldr	r3, .L26
 675 0034 1B88     		ldrh	r3, [r3]
 154:.\wiznet5500.c **** }
 676              		.loc 2 154 0
 677 0036 181C     		mov	r0, r3
 678 0038 BD46     		mov	sp, r7
 679 003a 02B0     		add	sp, sp, #8
 680              		@ sp needed
 681 003c 80BD     		pop	{r7, pc}
 682              	.L27:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 16


 683 003e C046     		.align	2
 684              	.L26:
 685 0040 00000000 		.word	wiznetTxPointer
 686              		.cfi_endproc
 687              	.LFE42:
 688              		.size	wiznetWriteUdpFrame, .-wiznetWriteUdpFrame
 689              		.section	.rodata
 690 0026 0000     		.align	2
 691              	.LC8:
 692 0028 0A0900   		.ascii	"\012\011\000"
 693 002b 00       		.align	2
 694              	.LC10:
 695 002c 25580900 		.ascii	"%X\011\000"
 696              		.section	.text.wiznetPrintRegisters,"ax",%progbits
 697              		.align	2
 698              		.global	wiznetPrintRegisters
 699              		.code	16
 700              		.thumb_func
 701              		.type	wiznetPrintRegisters, %function
 702              	wiznetPrintRegisters:
 703              	.LFB43:
 155:.\wiznet5500.c **** 
 156:.\wiznet5500.c **** void wiznetPrintRegisters(uint8_t blkSelect){
 704              		.loc 2 156 0
 705              		.cfi_startproc
 706 0000 80B5     		push	{r7, lr}
 707              		.cfi_def_cfa_offset 8
 708              		.cfi_offset 7, -8
 709              		.cfi_offset 14, -4
 710 0002 C4B0     		sub	sp, sp, #272
 711              		.cfi_def_cfa_offset 280
 712 0004 00AF     		add	r7, sp, #0
 713              		.cfi_def_cfa_register 7
 714 0006 021C     		mov	r2, r0
 715 0008 444B     		ldr	r3, .L35
 716 000a 8821     		mov	r1, #136
 717 000c 4900     		lsl	r1, r1, #1
 718 000e C919     		add	r1, r1, r7
 719 0010 CB18     		add	r3, r1, r3
 720 0012 1A70     		strb	r2, [r3]
 157:.\wiznet5500.c **** 	uint8_t readArray[256];
 158:.\wiznet5500.c **** 	wiznetReadArray(0, blkSelect, readArray, 255);
 721              		.loc 2 158 0
 722 0014 414B     		ldr	r3, .L35
 723 0016 8822     		mov	r2, #136
 724 0018 5200     		lsl	r2, r2, #1
 725 001a D219     		add	r2, r2, r7
 726 001c D318     		add	r3, r2, r3
 727 001e 1A78     		ldrb	r2, [r3]
 728 0020 3B1C     		mov	r3, r7
 729 0022 0C33     		add	r3, r3, #12
 730 0024 0020     		mov	r0, #0
 731 0026 111C     		mov	r1, r2
 732 0028 1A1C     		mov	r2, r3
 733 002a FF23     		mov	r3, #255
 734 002c FFF7FEFF 		bl	wiznetReadArray
 159:.\wiznet5500.c **** 	
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 17


 160:.\wiznet5500.c **** 	printf("\n\t");
 735              		.loc 2 160 0
 736 0030 3B4B     		ldr	r3, .L35+4
 737 0032 181C     		mov	r0, r3
 738 0034 FFF7FEFF 		bl	printf
 739              	.LBB3:
 161:.\wiznet5500.c **** 	for(uint8_t c=0; c<16; c++)	printf("%X\t",c);
 740              		.loc 2 161 0
 741 0038 1021     		mov	r1, #16
 742 003a FF31     		add	r1, r1, #255
 743 003c 7B18     		add	r3, r7, r1
 744 003e 0022     		mov	r2, #0
 745 0040 1A70     		strb	r2, [r3]
 746 0042 11E0     		b	.L29
 747              	.L30:
 748              		.loc 2 161 0 is_stmt 0 discriminator 2
 749 0044 1022     		mov	r2, #16
 750 0046 FF32     		add	r2, r2, #255
 751 0048 BB18     		add	r3, r7, r2
 752 004a 1B78     		ldrb	r3, [r3]
 753 004c 354A     		ldr	r2, .L35+8
 754 004e 101C     		mov	r0, r2
 755 0050 191C     		mov	r1, r3
 756 0052 FFF7FEFF 		bl	printf
 757 0056 1021     		mov	r1, #16
 758 0058 FF31     		add	r1, r1, #255
 759 005a 7B18     		add	r3, r7, r1
 760 005c 1A78     		ldrb	r2, [r3]
 761 005e 1021     		mov	r1, #16
 762 0060 FF31     		add	r1, r1, #255
 763 0062 7B18     		add	r3, r7, r1
 764 0064 0132     		add	r2, r2, #1
 765 0066 1A70     		strb	r2, [r3]
 766              	.L29:
 767              		.loc 2 161 0 discriminator 1
 768 0068 1022     		mov	r2, #16
 769 006a FF32     		add	r2, r2, #255
 770 006c BB18     		add	r3, r7, r2
 771 006e 1B78     		ldrb	r3, [r3]
 772 0070 0F2B     		cmp	r3, #15
 773 0072 E7D9     		bls	.L30
 774              	.LBE3:
 162:.\wiznet5500.c **** 	printf("\n");
 775              		.loc 2 162 0 is_stmt 1
 776 0074 0A20     		mov	r0, #10
 777 0076 FFF7FEFF 		bl	putchar
 778              	.LBB4:
 163:.\wiznet5500.c **** 	for(uint8_t j=0; j<8; j++){
 779              		.loc 2 163 0
 780 007a 8721     		mov	r1, #135
 781 007c 4900     		lsl	r1, r1, #1
 782 007e 7B18     		add	r3, r7, r1
 783 0080 0022     		mov	r2, #0
 784 0082 1A70     		strb	r2, [r3]
 785 0084 3EE0     		b	.L31
 786              	.L34:
 164:.\wiznet5500.c **** 		printf("%X\t",j);
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 18


 787              		.loc 2 164 0
 788 0086 8722     		mov	r2, #135
 789 0088 5200     		lsl	r2, r2, #1
 790 008a BB18     		add	r3, r7, r2
 791 008c 1B78     		ldrb	r3, [r3]
 792 008e 254A     		ldr	r2, .L35+8
 793 0090 101C     		mov	r0, r2
 794 0092 191C     		mov	r1, r3
 795 0094 FFF7FEFF 		bl	printf
 796              	.LBB5:
 165:.\wiznet5500.c **** 		for(uint8_t k=0; k<16; k++){
 797              		.loc 2 165 0
 798 0098 0E21     		mov	r1, #14
 799 009a FF31     		add	r1, r1, #255
 800 009c 7B18     		add	r3, r7, r1
 801 009e 0022     		mov	r2, #0
 802 00a0 1A70     		strb	r2, [r3]
 803 00a2 1DE0     		b	.L32
 804              	.L33:
 166:.\wiznet5500.c **** 			printf("%X\t",readArray[(16*j)+k]);
 805              		.loc 2 166 0 discriminator 2
 806 00a4 8722     		mov	r2, #135
 807 00a6 5200     		lsl	r2, r2, #1
 808 00a8 BB18     		add	r3, r7, r2
 809 00aa 1B78     		ldrb	r3, [r3]
 810 00ac 1A01     		lsl	r2, r3, #4
 811 00ae 0E21     		mov	r1, #14
 812 00b0 FF31     		add	r1, r1, #255
 813 00b2 7B18     		add	r3, r7, r1
 814 00b4 1B78     		ldrb	r3, [r3]
 815 00b6 D318     		add	r3, r2, r3
 816 00b8 1B4A     		ldr	r2, .L35+12
 817 00ba 8821     		mov	r1, #136
 818 00bc 4900     		lsl	r1, r1, #1
 819 00be C919     		add	r1, r1, r7
 820 00c0 8A18     		add	r2, r1, r2
 821 00c2 D35C     		ldrb	r3, [r2, r3]
 822 00c4 174A     		ldr	r2, .L35+8
 823 00c6 101C     		mov	r0, r2
 824 00c8 191C     		mov	r1, r3
 825 00ca FFF7FEFF 		bl	printf
 165:.\wiznet5500.c **** 		for(uint8_t k=0; k<16; k++){
 826              		.loc 2 165 0 discriminator 2
 827 00ce 0E22     		mov	r2, #14
 828 00d0 FF32     		add	r2, r2, #255
 829 00d2 BB18     		add	r3, r7, r2
 830 00d4 1A78     		ldrb	r2, [r3]
 831 00d6 0E21     		mov	r1, #14
 832 00d8 FF31     		add	r1, r1, #255
 833 00da 7B18     		add	r3, r7, r1
 834 00dc 0132     		add	r2, r2, #1
 835 00de 1A70     		strb	r2, [r3]
 836              	.L32:
 165:.\wiznet5500.c **** 		for(uint8_t k=0; k<16; k++){
 837              		.loc 2 165 0 is_stmt 0 discriminator 1
 838 00e0 0E22     		mov	r2, #14
 839 00e2 FF32     		add	r2, r2, #255
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 19


 840 00e4 BB18     		add	r3, r7, r2
 841 00e6 1B78     		ldrb	r3, [r3]
 842 00e8 0F2B     		cmp	r3, #15
 843 00ea DBD9     		bls	.L33
 844              	.LBE5:
 167:.\wiznet5500.c **** 		}
 168:.\wiznet5500.c **** 		printf("\n");
 845              		.loc 2 168 0 is_stmt 1
 846 00ec 0A20     		mov	r0, #10
 847 00ee FFF7FEFF 		bl	putchar
 163:.\wiznet5500.c **** 	for(uint8_t j=0; j<8; j++){
 848              		.loc 2 163 0
 849 00f2 8721     		mov	r1, #135
 850 00f4 4900     		lsl	r1, r1, #1
 851 00f6 7B18     		add	r3, r7, r1
 852 00f8 1A78     		ldrb	r2, [r3]
 853 00fa 8721     		mov	r1, #135
 854 00fc 4900     		lsl	r1, r1, #1
 855 00fe 7B18     		add	r3, r7, r1
 856 0100 0132     		add	r2, r2, #1
 857 0102 1A70     		strb	r2, [r3]
 858              	.L31:
 163:.\wiznet5500.c **** 	for(uint8_t j=0; j<8; j++){
 859              		.loc 2 163 0 is_stmt 0 discriminator 1
 860 0104 8722     		mov	r2, #135
 861 0106 5200     		lsl	r2, r2, #1
 862 0108 BB18     		add	r3, r7, r2
 863 010a 1B78     		ldrb	r3, [r3]
 864 010c 072B     		cmp	r3, #7
 865 010e BAD9     		bls	.L34
 866              	.LBE4:
 169:.\wiznet5500.c **** 	}
 170:.\wiznet5500.c **** 	printf("\n");
 867              		.loc 2 170 0 is_stmt 1
 868 0110 0A20     		mov	r0, #10
 869 0112 FFF7FEFF 		bl	putchar
 171:.\wiznet5500.c **** }
 870              		.loc 2 171 0
 871 0116 BD46     		mov	sp, r7
 872 0118 44B0     		add	sp, sp, #272
 873              		@ sp needed
 874 011a 80BD     		pop	{r7, pc}
 875              	.L36:
 876              		.align	2
 877              	.L35:
 878 011c F7FEFFFF 		.word	-265
 879 0120 28000000 		.word	.LC8
 880 0124 2C000000 		.word	.LC10
 881 0128 FCFEFFFF 		.word	-260
 882              		.cfi_endproc
 883              	.LFE43:
 884              		.size	wiznetPrintRegisters, .-wiznetPrintRegisters
 885              		.section	.text.wiznetWrite8b,"ax",%progbits
 886              		.align	2
 887              		.global	wiznetWrite8b
 888              		.code	16
 889              		.thumb_func
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 20


 890              		.type	wiznetWrite8b, %function
 891              	wiznetWrite8b:
 892              	.LFB44:
 172:.\wiznet5500.c **** 
 173:.\wiznet5500.c **** // Private-like Functions, but visible until this is re-written in C++
 174:.\wiznet5500.c **** void wiznetWrite8b(uint16_t regAddr, uint8_t blkSel, uint8_t data){
 893              		.loc 2 174 0
 894              		.cfi_startproc
 895 0000 80B5     		push	{r7, lr}
 896              		.cfi_def_cfa_offset 8
 897              		.cfi_offset 7, -8
 898              		.cfi_offset 14, -4
 899 0002 82B0     		sub	sp, sp, #8
 900              		.cfi_def_cfa_offset 16
 901 0004 00AF     		add	r7, sp, #0
 902              		.cfi_def_cfa_register 7
 903 0006 BB1D     		add	r3, r7, #6
 904 0008 1880     		strh	r0, [r3]
 905 000a 7B1D     		add	r3, r7, #5
 906 000c 1970     		strb	r1, [r3]
 907 000e 3B1D     		add	r3, r7, #4
 908 0010 1A70     		strb	r2, [r3]
 175:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 909              		.loc 2 175 0
 910 0012 0020     		mov	r0, #0
 911 0014 FFF7FEFF 		bl	WIZ_SS_Write
 176:.\wiznet5500.c **** 		// Address Phase
 177:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 912              		.loc 2 177 0
 913 0018 BB1D     		add	r3, r7, #6
 914 001a 1B88     		ldrh	r3, [r3]
 915 001c 1B0A     		lsr	r3, r3, #8
 916 001e 9BB2     		uxth	r3, r3
 917 0020 DBB2     		uxtb	r3, r3
 918 0022 181C     		mov	r0, r3
 919 0024 FFF7FEFF 		bl	transferSPI
 178:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 920              		.loc 2 178 0
 921 0028 BB1D     		add	r3, r7, #6
 922 002a 1B88     		ldrh	r3, [r3]
 923 002c DBB2     		uxtb	r3, r3
 924 002e 181C     		mov	r0, r3
 925 0030 FFF7FEFF 		bl	transferSPI
 179:.\wiznet5500.c **** 		
 180:.\wiznet5500.c **** 		// Control Phase
 181:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x01<<2)|0x00);		
 926              		.loc 2 181 0
 927 0034 7B1D     		add	r3, r7, #5
 928 0036 1B78     		ldrb	r3, [r3]
 929 0038 DB00     		lsl	r3, r3, #3
 930 003a DBB2     		uxtb	r3, r3
 931 003c 0422     		mov	r2, #4
 932 003e 1343     		orr	r3, r2
 933 0040 DBB2     		uxtb	r3, r3
 934 0042 DBB2     		uxtb	r3, r3
 935 0044 181C     		mov	r0, r3
 936 0046 FFF7FEFF 		bl	transferSPI
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 21


 182:.\wiznet5500.c **** 		
 183:.\wiznet5500.c **** 		// Data Phase
 184:.\wiznet5500.c **** 		transferSPI(data);
 937              		.loc 2 184 0
 938 004a 3B1D     		add	r3, r7, #4
 939 004c 1B78     		ldrb	r3, [r3]
 940 004e 181C     		mov	r0, r3
 941 0050 FFF7FEFF 		bl	transferSPI
 185:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 942              		.loc 2 185 0
 943 0054 0120     		mov	r0, #1
 944 0056 FFF7FEFF 		bl	WIZ_SS_Write
 186:.\wiznet5500.c **** 	// return response;
 187:.\wiznet5500.c **** }
 945              		.loc 2 187 0
 946 005a BD46     		mov	sp, r7
 947 005c 02B0     		add	sp, sp, #8
 948              		@ sp needed
 949 005e 80BD     		pop	{r7, pc}
 950              		.cfi_endproc
 951              	.LFE44:
 952              		.size	wiznetWrite8b, .-wiznetWrite8b
 953              		.section	.text.wiznetWrite16b,"ax",%progbits
 954              		.align	2
 955              		.global	wiznetWrite16b
 956              		.code	16
 957              		.thumb_func
 958              		.type	wiznetWrite16b, %function
 959              	wiznetWrite16b:
 960              	.LFB45:
 188:.\wiznet5500.c **** 
 189:.\wiznet5500.c **** void wiznetWrite16b(uint16_t regAddr, uint8_t blkSel, uint16_t data){
 961              		.loc 2 189 0
 962              		.cfi_startproc
 963 0000 80B5     		push	{r7, lr}
 964              		.cfi_def_cfa_offset 8
 965              		.cfi_offset 7, -8
 966              		.cfi_offset 14, -4
 967 0002 82B0     		sub	sp, sp, #8
 968              		.cfi_def_cfa_offset 16
 969 0004 00AF     		add	r7, sp, #0
 970              		.cfi_def_cfa_register 7
 971 0006 BB1D     		add	r3, r7, #6
 972 0008 1880     		strh	r0, [r3]
 973 000a 7B1D     		add	r3, r7, #5
 974 000c 1970     		strb	r1, [r3]
 975 000e BB1C     		add	r3, r7, #2
 976 0010 1A80     		strh	r2, [r3]
 190:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 977              		.loc 2 190 0
 978 0012 0020     		mov	r0, #0
 979 0014 FFF7FEFF 		bl	WIZ_SS_Write
 191:.\wiznet5500.c **** 		// Address Phase
 192:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 980              		.loc 2 192 0
 981 0018 BB1D     		add	r3, r7, #6
 982 001a 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 22


 983 001c 1B0A     		lsr	r3, r3, #8
 984 001e 9BB2     		uxth	r3, r3
 985 0020 DBB2     		uxtb	r3, r3
 986 0022 181C     		mov	r0, r3
 987 0024 FFF7FEFF 		bl	transferSPI
 193:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 988              		.loc 2 193 0
 989 0028 BB1D     		add	r3, r7, #6
 990 002a 1B88     		ldrh	r3, [r3]
 991 002c DBB2     		uxtb	r3, r3
 992 002e 181C     		mov	r0, r3
 993 0030 FFF7FEFF 		bl	transferSPI
 194:.\wiznet5500.c **** 		
 195:.\wiznet5500.c **** 		// Control Phase
 196:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x01<<2)|0x00);		
 994              		.loc 2 196 0
 995 0034 7B1D     		add	r3, r7, #5
 996 0036 1B78     		ldrb	r3, [r3]
 997 0038 DB00     		lsl	r3, r3, #3
 998 003a DBB2     		uxtb	r3, r3
 999 003c 0422     		mov	r2, #4
 1000 003e 1343     		orr	r3, r2
 1001 0040 DBB2     		uxtb	r3, r3
 1002 0042 DBB2     		uxtb	r3, r3
 1003 0044 181C     		mov	r0, r3
 1004 0046 FFF7FEFF 		bl	transferSPI
 197:.\wiznet5500.c **** 		
 198:.\wiznet5500.c **** 		// Data Phase
 199:.\wiznet5500.c **** 		transferSPI(data>>8);
 1005              		.loc 2 199 0
 1006 004a BB1C     		add	r3, r7, #2
 1007 004c 1B88     		ldrh	r3, [r3]
 1008 004e 1B0A     		lsr	r3, r3, #8
 1009 0050 9BB2     		uxth	r3, r3
 1010 0052 DBB2     		uxtb	r3, r3
 1011 0054 181C     		mov	r0, r3
 1012 0056 FFF7FEFF 		bl	transferSPI
 200:.\wiznet5500.c **** 		transferSPI(data&0xFF);
 1013              		.loc 2 200 0
 1014 005a BB1C     		add	r3, r7, #2
 1015 005c 1B88     		ldrh	r3, [r3]
 1016 005e DBB2     		uxtb	r3, r3
 1017 0060 181C     		mov	r0, r3
 1018 0062 FFF7FEFF 		bl	transferSPI
 201:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1019              		.loc 2 201 0
 1020 0066 0120     		mov	r0, #1
 1021 0068 FFF7FEFF 		bl	WIZ_SS_Write
 202:.\wiznet5500.c **** 	// return response;
 203:.\wiznet5500.c **** }
 1022              		.loc 2 203 0
 1023 006c BD46     		mov	sp, r7
 1024 006e 02B0     		add	sp, sp, #8
 1025              		@ sp needed
 1026 0070 80BD     		pop	{r7, pc}
 1027              		.cfi_endproc
 1028              	.LFE45:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 23


 1029              		.size	wiznetWrite16b, .-wiznetWrite16b
 1030              		.section	.text.wiznetWriteArray,"ax",%progbits
 1031              		.align	2
 1032              		.global	wiznetWriteArray
 1033              		.code	16
 1034              		.thumb_func
 1035              		.type	wiznetWriteArray, %function
 1036              	wiznetWriteArray:
 1037              	.LFB46:
 204:.\wiznet5500.c **** 
 205:.\wiznet5500.c **** void wiznetWriteArray(uint16_t regAddr, uint8_t blkSel, uint8_t *srcArray, uint8_t len){
 1038              		.loc 2 205 0
 1039              		.cfi_startproc
 1040 0000 80B5     		push	{r7, lr}
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 7, -8
 1043              		.cfi_offset 14, -4
 1044 0002 84B0     		sub	sp, sp, #16
 1045              		.cfi_def_cfa_offset 24
 1046 0004 00AF     		add	r7, sp, #0
 1047              		.cfi_def_cfa_register 7
 1048 0006 3A60     		str	r2, [r7]
 1049 0008 1A1C     		mov	r2, r3
 1050 000a BB1D     		add	r3, r7, #6
 1051 000c 1880     		strh	r0, [r3]
 1052 000e 7B1D     		add	r3, r7, #5
 1053 0010 1970     		strb	r1, [r3]
 1054 0012 3B1D     		add	r3, r7, #4
 1055 0014 1A70     		strb	r2, [r3]
 206:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1056              		.loc 2 206 0
 1057 0016 0020     		mov	r0, #0
 1058 0018 FFF7FEFF 		bl	WIZ_SS_Write
 207:.\wiznet5500.c **** 		// Address Phase
 208:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1059              		.loc 2 208 0
 1060 001c BB1D     		add	r3, r7, #6
 1061 001e 1B88     		ldrh	r3, [r3]
 1062 0020 1B0A     		lsr	r3, r3, #8
 1063 0022 9BB2     		uxth	r3, r3
 1064 0024 DBB2     		uxtb	r3, r3
 1065 0026 181C     		mov	r0, r3
 1066 0028 FFF7FEFF 		bl	transferSPI
 209:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1067              		.loc 2 209 0
 1068 002c BB1D     		add	r3, r7, #6
 1069 002e 1B88     		ldrh	r3, [r3]
 1070 0030 DBB2     		uxtb	r3, r3
 1071 0032 181C     		mov	r0, r3
 1072 0034 FFF7FEFF 		bl	transferSPI
 210:.\wiznet5500.c **** 		
 211:.\wiznet5500.c **** 		// Control Phase
 212:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x01<<2)|0x00);		
 1073              		.loc 2 212 0
 1074 0038 7B1D     		add	r3, r7, #5
 1075 003a 1B78     		ldrb	r3, [r3]
 1076 003c DB00     		lsl	r3, r3, #3
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 24


 1077 003e DBB2     		uxtb	r3, r3
 1078 0040 0422     		mov	r2, #4
 1079 0042 1343     		orr	r3, r2
 1080 0044 DBB2     		uxtb	r3, r3
 1081 0046 DBB2     		uxtb	r3, r3
 1082 0048 181C     		mov	r0, r3
 1083 004a FFF7FEFF 		bl	transferSPI
 1084              	.LBB6:
 213:.\wiznet5500.c **** 		
 214:.\wiznet5500.c **** 		// Data Phase
 215:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1085              		.loc 2 215 0
 1086 004e 3B1C     		mov	r3, r7
 1087 0050 0F33     		add	r3, r3, #15
 1088 0052 0022     		mov	r2, #0
 1089 0054 1A70     		strb	r2, [r3]
 1090 0056 0FE0     		b	.L40
 1091              	.L41:
 216:.\wiznet5500.c **** 			transferSPI(srcArray[k]);
 1092              		.loc 2 216 0 discriminator 2
 1093 0058 3B1C     		mov	r3, r7
 1094 005a 0F33     		add	r3, r3, #15
 1095 005c 1B78     		ldrb	r3, [r3]
 1096 005e 3A68     		ldr	r2, [r7]
 1097 0060 D318     		add	r3, r2, r3
 1098 0062 1B78     		ldrb	r3, [r3]
 1099 0064 181C     		mov	r0, r3
 1100 0066 FFF7FEFF 		bl	transferSPI
 215:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1101              		.loc 2 215 0 discriminator 2
 1102 006a 3B1C     		mov	r3, r7
 1103 006c 0F33     		add	r3, r3, #15
 1104 006e 1A78     		ldrb	r2, [r3]
 1105 0070 3B1C     		mov	r3, r7
 1106 0072 0F33     		add	r3, r3, #15
 1107 0074 0132     		add	r2, r2, #1
 1108 0076 1A70     		strb	r2, [r3]
 1109              	.L40:
 215:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1110              		.loc 2 215 0 is_stmt 0 discriminator 1
 1111 0078 3A1C     		mov	r2, r7
 1112 007a 0F32     		add	r2, r2, #15
 1113 007c 3B1D     		add	r3, r7, #4
 1114 007e 1278     		ldrb	r2, [r2]
 1115 0080 1B78     		ldrb	r3, [r3]
 1116 0082 9A42     		cmp	r2, r3
 1117 0084 E8D3     		bcc	.L41
 1118              	.LBE6:
 217:.\wiznet5500.c **** 		}
 218:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1119              		.loc 2 218 0 is_stmt 1
 1120 0086 0120     		mov	r0, #1
 1121 0088 FFF7FEFF 		bl	WIZ_SS_Write
 219:.\wiznet5500.c **** 	// return response;
 220:.\wiznet5500.c **** }
 1122              		.loc 2 220 0
 1123 008c BD46     		mov	sp, r7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 25


 1124 008e 04B0     		add	sp, sp, #16
 1125              		@ sp needed
 1126 0090 80BD     		pop	{r7, pc}
 1127              		.cfi_endproc
 1128              	.LFE46:
 1129              		.size	wiznetWriteArray, .-wiznetWriteArray
 1130 0092 C046     		.section	.text.wiznetRead8b,"ax",%progbits
 1131              		.align	2
 1132              		.global	wiznetRead8b
 1133              		.code	16
 1134              		.thumb_func
 1135              		.type	wiznetRead8b, %function
 1136              	wiznetRead8b:
 1137              	.LFB47:
 221:.\wiznet5500.c **** 
 222:.\wiznet5500.c **** uint8_t wiznetRead8b(uint16_t regAddr, uint8_t blkSel){
 1138              		.loc 2 222 0
 1139              		.cfi_startproc
 1140 0000 90B5     		push	{r4, r7, lr}
 1141              		.cfi_def_cfa_offset 12
 1142              		.cfi_offset 4, -12
 1143              		.cfi_offset 7, -8
 1144              		.cfi_offset 14, -4
 1145 0002 85B0     		sub	sp, sp, #20
 1146              		.cfi_def_cfa_offset 32
 1147 0004 00AF     		add	r7, sp, #0
 1148              		.cfi_def_cfa_register 7
 1149 0006 0A1C     		mov	r2, r1
 1150 0008 BB1D     		add	r3, r7, #6
 1151 000a 011C     		add	r1, r0, #0
 1152 000c 1980     		strh	r1, [r3]
 1153 000e 7B1D     		add	r3, r7, #5
 1154 0010 1A70     		strb	r2, [r3]
 223:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1155              		.loc 2 223 0
 1156 0012 0020     		mov	r0, #0
 1157 0014 FFF7FEFF 		bl	WIZ_SS_Write
 224:.\wiznet5500.c **** 		// Address Phase
 225:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1158              		.loc 2 225 0
 1159 0018 BB1D     		add	r3, r7, #6
 1160 001a 1B88     		ldrh	r3, [r3]
 1161 001c 1B0A     		lsr	r3, r3, #8
 1162 001e 9BB2     		uxth	r3, r3
 1163 0020 DBB2     		uxtb	r3, r3
 1164 0022 181C     		mov	r0, r3
 1165 0024 FFF7FEFF 		bl	transferSPI
 226:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1166              		.loc 2 226 0
 1167 0028 BB1D     		add	r3, r7, #6
 1168 002a 1B88     		ldrh	r3, [r3]
 1169 002c DBB2     		uxtb	r3, r3
 1170 002e 181C     		mov	r0, r3
 1171 0030 FFF7FEFF 		bl	transferSPI
 227:.\wiznet5500.c **** 		
 228:.\wiznet5500.c **** 		// Control Phase
 229:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x00<<2)|0x00);		
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 26


 1172              		.loc 2 229 0
 1173 0034 7B1D     		add	r3, r7, #5
 1174 0036 1B78     		ldrb	r3, [r3]
 1175 0038 DB00     		lsl	r3, r3, #3
 1176 003a DBB2     		uxtb	r3, r3
 1177 003c 181C     		mov	r0, r3
 1178 003e FFF7FEFF 		bl	transferSPI
 230:.\wiznet5500.c **** 		
 231:.\wiznet5500.c **** 		// Data Phase
 232:.\wiznet5500.c **** 		uint8_t result = transferSPI(0x00);
 1179              		.loc 2 232 0
 1180 0042 3C1C     		mov	r4, r7
 1181 0044 0F34     		add	r4, r4, #15
 1182 0046 0020     		mov	r0, #0
 1183 0048 FFF7FEFF 		bl	transferSPI
 1184 004c 031C     		mov	r3, r0
 1185 004e 2370     		strb	r3, [r4]
 233:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1186              		.loc 2 233 0
 1187 0050 0120     		mov	r0, #1
 1188 0052 FFF7FEFF 		bl	WIZ_SS_Write
 234:.\wiznet5500.c **** 	return result;
 1189              		.loc 2 234 0
 1190 0056 3B1C     		mov	r3, r7
 1191 0058 0F33     		add	r3, r3, #15
 1192 005a 1B78     		ldrb	r3, [r3]
 235:.\wiznet5500.c **** }
 1193              		.loc 2 235 0
 1194 005c 181C     		mov	r0, r3
 1195 005e BD46     		mov	sp, r7
 1196 0060 05B0     		add	sp, sp, #20
 1197              		@ sp needed
 1198 0062 90BD     		pop	{r4, r7, pc}
 1199              		.cfi_endproc
 1200              	.LFE47:
 1201              		.size	wiznetRead8b, .-wiznetRead8b
 1202              		.section	.text.wiznetRead16b,"ax",%progbits
 1203              		.align	2
 1204              		.global	wiznetRead16b
 1205              		.code	16
 1206              		.thumb_func
 1207              		.type	wiznetRead16b, %function
 1208              	wiznetRead16b:
 1209              	.LFB48:
 236:.\wiznet5500.c **** 
 237:.\wiznet5500.c **** uint16_t wiznetRead16b(uint16_t regAddr, uint8_t blkSel){
 1210              		.loc 2 237 0
 1211              		.cfi_startproc
 1212 0000 80B5     		push	{r7, lr}
 1213              		.cfi_def_cfa_offset 8
 1214              		.cfi_offset 7, -8
 1215              		.cfi_offset 14, -4
 1216 0002 84B0     		sub	sp, sp, #16
 1217              		.cfi_def_cfa_offset 24
 1218 0004 00AF     		add	r7, sp, #0
 1219              		.cfi_def_cfa_register 7
 1220 0006 0A1C     		mov	r2, r1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 27


 1221 0008 BB1D     		add	r3, r7, #6
 1222 000a 011C     		add	r1, r0, #0
 1223 000c 1980     		strh	r1, [r3]
 1224 000e 7B1D     		add	r3, r7, #5
 1225 0010 1A70     		strb	r2, [r3]
 238:.\wiznet5500.c **** 	uint16_t result;
 239:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1226              		.loc 2 239 0
 1227 0012 0020     		mov	r0, #0
 1228 0014 FFF7FEFF 		bl	WIZ_SS_Write
 240:.\wiznet5500.c **** 		// Address Phase
 241:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1229              		.loc 2 241 0
 1230 0018 BB1D     		add	r3, r7, #6
 1231 001a 1B88     		ldrh	r3, [r3]
 1232 001c 1B0A     		lsr	r3, r3, #8
 1233 001e 9BB2     		uxth	r3, r3
 1234 0020 DBB2     		uxtb	r3, r3
 1235 0022 181C     		mov	r0, r3
 1236 0024 FFF7FEFF 		bl	transferSPI
 242:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1237              		.loc 2 242 0
 1238 0028 BB1D     		add	r3, r7, #6
 1239 002a 1B88     		ldrh	r3, [r3]
 1240 002c DBB2     		uxtb	r3, r3
 1241 002e 181C     		mov	r0, r3
 1242 0030 FFF7FEFF 		bl	transferSPI
 243:.\wiznet5500.c **** 		
 244:.\wiznet5500.c **** 		// Control Phase
 245:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x00<<2)|0x00);		
 1243              		.loc 2 245 0
 1244 0034 7B1D     		add	r3, r7, #5
 1245 0036 1B78     		ldrb	r3, [r3]
 1246 0038 DB00     		lsl	r3, r3, #3
 1247 003a DBB2     		uxtb	r3, r3
 1248 003c 181C     		mov	r0, r3
 1249 003e FFF7FEFF 		bl	transferSPI
 246:.\wiznet5500.c **** 		
 247:.\wiznet5500.c **** 		// Data Phase
 248:.\wiznet5500.c **** 		result = transferSPI(0x00)<<8;
 1250              		.loc 2 248 0
 1251 0042 0020     		mov	r0, #0
 1252 0044 FFF7FEFF 		bl	transferSPI
 1253 0048 031C     		mov	r3, r0
 1254 004a 1A1C     		mov	r2, r3
 1255 004c 3B1C     		mov	r3, r7
 1256 004e 0E33     		add	r3, r3, #14
 1257 0050 1202     		lsl	r2, r2, #8
 1258 0052 1A80     		strh	r2, [r3]
 249:.\wiznet5500.c **** 		result |= transferSPI(0x00);
 1259              		.loc 2 249 0
 1260 0054 0020     		mov	r0, #0
 1261 0056 FFF7FEFF 		bl	transferSPI
 1262 005a 031C     		mov	r3, r0
 1263 005c 191C     		mov	r1, r3
 1264 005e 3B1C     		mov	r3, r7
 1265 0060 0E33     		add	r3, r3, #14
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 28


 1266 0062 3A1C     		mov	r2, r7
 1267 0064 0E32     		add	r2, r2, #14
 1268 0066 1288     		ldrh	r2, [r2]
 1269 0068 0A43     		orr	r2, r1
 1270 006a 1A80     		strh	r2, [r3]
 250:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1271              		.loc 2 250 0
 1272 006c 0120     		mov	r0, #1
 1273 006e FFF7FEFF 		bl	WIZ_SS_Write
 251:.\wiznet5500.c **** 	return result;
 1274              		.loc 2 251 0
 1275 0072 3B1C     		mov	r3, r7
 1276 0074 0E33     		add	r3, r3, #14
 1277 0076 1B88     		ldrh	r3, [r3]
 252:.\wiznet5500.c **** }
 1278              		.loc 2 252 0
 1279 0078 181C     		mov	r0, r3
 1280 007a BD46     		mov	sp, r7
 1281 007c 04B0     		add	sp, sp, #16
 1282              		@ sp needed
 1283 007e 80BD     		pop	{r7, pc}
 1284              		.cfi_endproc
 1285              	.LFE48:
 1286              		.size	wiznetRead16b, .-wiznetRead16b
 1287              		.section	.text.wiznetReadArray,"ax",%progbits
 1288              		.align	2
 1289              		.global	wiznetReadArray
 1290              		.code	16
 1291              		.thumb_func
 1292              		.type	wiznetReadArray, %function
 1293              	wiznetReadArray:
 1294              	.LFB49:
 253:.\wiznet5500.c **** 
 254:.\wiznet5500.c **** void wiznetReadArray(uint16_t regAddr, uint8_t blkSel, uint8_t *dstArray, uint8_t len){
 1295              		.loc 2 254 0
 1296              		.cfi_startproc
 1297 0000 90B5     		push	{r4, r7, lr}
 1298              		.cfi_def_cfa_offset 12
 1299              		.cfi_offset 4, -12
 1300              		.cfi_offset 7, -8
 1301              		.cfi_offset 14, -4
 1302 0002 85B0     		sub	sp, sp, #20
 1303              		.cfi_def_cfa_offset 32
 1304 0004 00AF     		add	r7, sp, #0
 1305              		.cfi_def_cfa_register 7
 1306 0006 3A60     		str	r2, [r7]
 1307 0008 1A1C     		mov	r2, r3
 1308 000a BB1D     		add	r3, r7, #6
 1309 000c 1880     		strh	r0, [r3]
 1310 000e 7B1D     		add	r3, r7, #5
 1311 0010 1970     		strb	r1, [r3]
 1312 0012 3B1D     		add	r3, r7, #4
 1313 0014 1A70     		strb	r2, [r3]
 255:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1314              		.loc 2 255 0
 1315 0016 0020     		mov	r0, #0
 1316 0018 FFF7FEFF 		bl	WIZ_SS_Write
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 29


 256:.\wiznet5500.c **** 		// uint8_t count = 0;
 257:.\wiznet5500.c **** 		
 258:.\wiznet5500.c **** 		// Address Phase
 259:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1317              		.loc 2 259 0
 1318 001c BB1D     		add	r3, r7, #6
 1319 001e 1B88     		ldrh	r3, [r3]
 1320 0020 1B0A     		lsr	r3, r3, #8
 1321 0022 9BB2     		uxth	r3, r3
 1322 0024 DBB2     		uxtb	r3, r3
 1323 0026 181C     		mov	r0, r3
 1324 0028 FFF7FEFF 		bl	transferSPI
 260:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1325              		.loc 2 260 0
 1326 002c BB1D     		add	r3, r7, #6
 1327 002e 1B88     		ldrh	r3, [r3]
 1328 0030 DBB2     		uxtb	r3, r3
 1329 0032 181C     		mov	r0, r3
 1330 0034 FFF7FEFF 		bl	transferSPI
 261:.\wiznet5500.c **** 		
 262:.\wiznet5500.c **** 		// Control Phase
 263:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x00<<2)|0x00);	
 1331              		.loc 2 263 0
 1332 0038 7B1D     		add	r3, r7, #5
 1333 003a 1B78     		ldrb	r3, [r3]
 1334 003c DB00     		lsl	r3, r3, #3
 1335 003e DBB2     		uxtb	r3, r3
 1336 0040 181C     		mov	r0, r3
 1337 0042 FFF7FEFF 		bl	transferSPI
 1338              	.LBB7:
 264:.\wiznet5500.c **** 		
 265:.\wiznet5500.c **** 		// Data Phase
 266:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1339              		.loc 2 266 0
 1340 0046 3B1C     		mov	r3, r7
 1341 0048 0F33     		add	r3, r3, #15
 1342 004a 0022     		mov	r2, #0
 1343 004c 1A70     		strb	r2, [r3]
 1344 004e 10E0     		b	.L47
 1345              	.L48:
 267:.\wiznet5500.c **** 			dstArray[k] = transferSPI(0x00);
 1346              		.loc 2 267 0 discriminator 2
 1347 0050 3B1C     		mov	r3, r7
 1348 0052 0F33     		add	r3, r3, #15
 1349 0054 1B78     		ldrb	r3, [r3]
 1350 0056 3A68     		ldr	r2, [r7]
 1351 0058 D418     		add	r4, r2, r3
 1352 005a 0020     		mov	r0, #0
 1353 005c FFF7FEFF 		bl	transferSPI
 1354 0060 031C     		mov	r3, r0
 1355 0062 2370     		strb	r3, [r4]
 266:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1356              		.loc 2 266 0 discriminator 2
 1357 0064 3B1C     		mov	r3, r7
 1358 0066 0F33     		add	r3, r3, #15
 1359 0068 1A78     		ldrb	r2, [r3]
 1360 006a 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 30


 1361 006c 0F33     		add	r3, r3, #15
 1362 006e 0132     		add	r2, r2, #1
 1363 0070 1A70     		strb	r2, [r3]
 1364              	.L47:
 266:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1365              		.loc 2 266 0 is_stmt 0 discriminator 1
 1366 0072 3A1C     		mov	r2, r7
 1367 0074 0F32     		add	r2, r2, #15
 1368 0076 3B1D     		add	r3, r7, #4
 1369 0078 1278     		ldrb	r2, [r2]
 1370 007a 1B78     		ldrb	r3, [r3]
 1371 007c 9A42     		cmp	r2, r3
 1372 007e E7D3     		bcc	.L48
 1373              	.LBE7:
 268:.\wiznet5500.c **** 			// count++;
 269:.\wiznet5500.c **** 			// printf("%u",k);
 270:.\wiznet5500.c **** 		}
 271:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1374              		.loc 2 271 0 is_stmt 1
 1375 0080 0120     		mov	r0, #1
 1376 0082 FFF7FEFF 		bl	WIZ_SS_Write
 272:.\wiznet5500.c **** 	// return count;
 273:.\wiznet5500.c **** }
 1377              		.loc 2 273 0
 1378 0086 BD46     		mov	sp, r7
 1379 0088 05B0     		add	sp, sp, #20
 1380              		@ sp needed
 1381 008a 90BD     		pop	{r4, r7, pc}
 1382              		.cfi_endproc
 1383              	.LFE49:
 1384              		.size	wiznetReadArray, .-wiznetReadArray
 1385              		.text
 1386              	.Letext0:
 1387              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4
 1388              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4
 1389              		.file 5 ".\\Generated_Source\\PSoC4/cytypes.h"
 1390              		.file 6 "<built-in>"
 1391              		.section	.debug_info,"",%progbits
 1392              	.Ldebug_info0:
 1393 0000 41050000 		.4byte	0x541
 1394 0004 0400     		.2byte	0x4
 1395 0006 00000000 		.4byte	.Ldebug_abbrev0
 1396 000a 04       		.byte	0x4
 1397 000b 01       		.uleb128 0x1
 1398 000c 20020000 		.4byte	.LASF53
 1399 0010 01       		.byte	0x1
 1400 0011 C2020000 		.4byte	.LASF54
 1401 0015 B4000000 		.4byte	.LASF55
 1402 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1403 001d 00000000 		.4byte	0
 1404 0021 00000000 		.4byte	.Ldebug_line0
 1405 0025 02       		.uleb128 0x2
 1406 0026 01       		.byte	0x1
 1407 0027 06       		.byte	0x6
 1408 0028 92000000 		.4byte	.LASF0
 1409 002c 03       		.uleb128 0x3
 1410 002d 36000000 		.4byte	.LASF3
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 31


 1411 0031 03       		.byte	0x3
 1412 0032 1C       		.byte	0x1c
 1413 0033 37000000 		.4byte	0x37
 1414 0037 02       		.uleb128 0x2
 1415 0038 01       		.byte	0x1
 1416 0039 08       		.byte	0x8
 1417 003a 12020000 		.4byte	.LASF1
 1418 003e 02       		.uleb128 0x2
 1419 003f 02       		.byte	0x2
 1420 0040 05       		.byte	0x5
 1421 0041 D4010000 		.4byte	.LASF2
 1422 0045 03       		.uleb128 0x3
 1423 0046 F1020000 		.4byte	.LASF4
 1424 004a 03       		.byte	0x3
 1425 004b 26       		.byte	0x26
 1426 004c 50000000 		.4byte	0x50
 1427 0050 02       		.uleb128 0x2
 1428 0051 02       		.byte	0x2
 1429 0052 07       		.byte	0x7
 1430 0053 B3010000 		.4byte	.LASF5
 1431 0057 02       		.uleb128 0x2
 1432 0058 04       		.byte	0x4
 1433 0059 05       		.byte	0x5
 1434 005a 40000000 		.4byte	.LASF6
 1435 005e 02       		.uleb128 0x2
 1436 005f 04       		.byte	0x4
 1437 0060 07       		.byte	0x7
 1438 0061 85010000 		.4byte	.LASF7
 1439 0065 02       		.uleb128 0x2
 1440 0066 08       		.byte	0x8
 1441 0067 05       		.byte	0x5
 1442 0068 84000000 		.4byte	.LASF8
 1443 006c 02       		.uleb128 0x2
 1444 006d 08       		.byte	0x8
 1445 006e 07       		.byte	0x7
 1446 006f 59000000 		.4byte	.LASF9
 1447 0073 04       		.uleb128 0x4
 1448 0074 04       		.byte	0x4
 1449 0075 05       		.byte	0x5
 1450 0076 696E7400 		.ascii	"int\000"
 1451 007a 02       		.uleb128 0x2
 1452 007b 04       		.byte	0x4
 1453 007c 07       		.byte	0x7
 1454 007d 6D010000 		.4byte	.LASF10
 1455 0081 03       		.uleb128 0x3
 1456 0082 59030000 		.4byte	.LASF11
 1457 0086 04       		.byte	0x4
 1458 0087 2A       		.byte	0x2a
 1459 0088 2C000000 		.4byte	0x2c
 1460 008c 03       		.uleb128 0x3
 1461 008d 28010000 		.4byte	.LASF12
 1462 0091 04       		.byte	0x4
 1463 0092 36       		.byte	0x36
 1464 0093 45000000 		.4byte	0x45
 1465 0097 03       		.uleb128 0x3
 1466 0098 22010000 		.4byte	.LASF13
 1467 009c 05       		.byte	0x5
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 32


 1468 009d A1       		.byte	0xa1
 1469 009e 37000000 		.4byte	0x37
 1470 00a2 02       		.uleb128 0x2
 1471 00a3 04       		.byte	0x4
 1472 00a4 04       		.byte	0x4
 1473 00a5 0C020000 		.4byte	.LASF14
 1474 00a9 02       		.uleb128 0x2
 1475 00aa 08       		.byte	0x8
 1476 00ab 04       		.byte	0x4
 1477 00ac 31010000 		.4byte	.LASF15
 1478 00b0 02       		.uleb128 0x2
 1479 00b1 01       		.byte	0x1
 1480 00b2 08       		.byte	0x8
 1481 00b3 DB020000 		.4byte	.LASF16
 1482 00b7 02       		.uleb128 0x2
 1483 00b8 04       		.byte	0x4
 1484 00b9 07       		.byte	0x7
 1485 00ba F9010000 		.4byte	.LASF17
 1486 00be 05       		.uleb128 0x5
 1487 00bf 04       		.byte	0x4
 1488 00c0 C4000000 		.4byte	0xc4
 1489 00c4 06       		.uleb128 0x6
 1490 00c5 B0000000 		.4byte	0xb0
 1491 00c9 07       		.uleb128 0x7
 1492 00ca 8B030000 		.4byte	.LASF56
 1493 00ce 01       		.byte	0x1
 1494 00cf 0D       		.byte	0xd
 1495 00d0 81000000 		.4byte	0x81
 1496 00d4 00000000 		.4byte	.LFB33
 1497 00d8 34000000 		.4byte	.LFE33-.LFB33
 1498 00dc 01       		.uleb128 0x1
 1499 00dd 9C       		.byte	0x9c
 1500 00de F1000000 		.4byte	0xf1
 1501 00e2 08       		.uleb128 0x8
 1502 00e3 AE010000 		.4byte	.LASF18
 1503 00e7 01       		.byte	0x1
 1504 00e8 0D       		.byte	0xd
 1505 00e9 81000000 		.4byte	0x81
 1506 00ed 02       		.uleb128 0x2
 1507 00ee 91       		.byte	0x91
 1508 00ef 77       		.sleb128 -9
 1509 00f0 00       		.byte	0
 1510 00f1 09       		.uleb128 0x9
 1511 00f2 A7020000 		.4byte	.LASF33
 1512 00f6 02       		.byte	0x2
 1513 00f7 1A       		.byte	0x1a
 1514 00f8 81000000 		.4byte	0x81
 1515 00fc 00000000 		.4byte	.LFB34
 1516 0100 64010000 		.4byte	.LFE34-.LFB34
 1517 0104 01       		.uleb128 0x1
 1518 0105 9C       		.byte	0x9c
 1519 0106 78010000 		.4byte	0x178
 1520 010a 08       		.uleb128 0x8
 1521 010b 3B030000 		.4byte	.LASF19
 1522 010f 02       		.byte	0x2
 1523 0110 1A       		.byte	0x1a
 1524 0111 81000000 		.4byte	0x81
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 33


 1525 0115 03       		.uleb128 0x3
 1526 0116 91       		.byte	0x91
 1527 0117 BF7F     		.sleb128 -65
 1528 0119 08       		.uleb128 0x8
 1529 011a EF010000 		.4byte	.LASF20
 1530 011e 02       		.byte	0x2
 1531 011f 1A       		.byte	0x1a
 1532 0120 81000000 		.4byte	0x81
 1533 0124 03       		.uleb128 0x3
 1534 0125 91       		.byte	0x91
 1535 0126 BE7F     		.sleb128 -66
 1536 0128 08       		.uleb128 0x8
 1537 0129 7A010000 		.4byte	.LASF21
 1538 012d 02       		.byte	0x2
 1539 012e 1A       		.byte	0x1a
 1540 012f 8C000000 		.4byte	0x8c
 1541 0133 03       		.uleb128 0x3
 1542 0134 91       		.byte	0x91
 1543 0135 BC7F     		.sleb128 -68
 1544 0137 0A       		.uleb128 0xa
 1545 0138 6F030000 		.4byte	.LASF22
 1546 013c 02       		.byte	0x2
 1547 013d 1C       		.byte	0x1c
 1548 013e 78010000 		.4byte	0x178
 1549 0142 02       		.uleb128 0x2
 1550 0143 91       		.byte	0x91
 1551 0144 60       		.sleb128 -32
 1552 0145 0A       		.uleb128 0xa
 1553 0146 38010000 		.4byte	.LASF23
 1554 014a 02       		.byte	0x2
 1555 014b 1F       		.byte	0x1f
 1556 014c 88010000 		.4byte	0x188
 1557 0150 02       		.uleb128 0x2
 1558 0151 91       		.byte	0x91
 1559 0152 4C       		.sleb128 -52
 1560 0153 0A       		.uleb128 0xa
 1561 0154 42010000 		.4byte	.LASF24
 1562 0158 02       		.byte	0x2
 1563 0159 2A       		.byte	0x2a
 1564 015a 98010000 		.4byte	0x198
 1565 015e 02       		.uleb128 0x2
 1566 015f 91       		.byte	0x91
 1567 0160 44       		.sleb128 -60
 1568 0161 0B       		.uleb128 0xb
 1569 0162 FE000000 		.4byte	.LBB2
 1570 0166 44000000 		.4byte	.LBE2-.LBB2
 1571 016a 0C       		.uleb128 0xc
 1572 016b 6B00     		.ascii	"k\000"
 1573 016d 02       		.byte	0x2
 1574 016e 4D       		.byte	0x4d
 1575 016f 8C000000 		.4byte	0x8c
 1576 0173 02       		.uleb128 0x2
 1577 0174 91       		.byte	0x91
 1578 0175 76       		.sleb128 -10
 1579 0176 00       		.byte	0
 1580 0177 00       		.byte	0
 1581 0178 0D       		.uleb128 0xd
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 34


 1582 0179 81000000 		.4byte	0x81
 1583 017d 88010000 		.4byte	0x188
 1584 0181 0E       		.uleb128 0xe
 1585 0182 B7000000 		.4byte	0xb7
 1586 0186 12       		.byte	0x12
 1587 0187 00       		.byte	0
 1588 0188 0D       		.uleb128 0xd
 1589 0189 81000000 		.4byte	0x81
 1590 018d 98010000 		.4byte	0x198
 1591 0191 0E       		.uleb128 0xe
 1592 0192 B7000000 		.4byte	0xb7
 1593 0196 11       		.byte	0x11
 1594 0197 00       		.byte	0
 1595 0198 0D       		.uleb128 0xd
 1596 0199 81000000 		.4byte	0x81
 1597 019d A8010000 		.4byte	0x1a8
 1598 01a1 0E       		.uleb128 0xe
 1599 01a2 B7000000 		.4byte	0xb7
 1600 01a6 05       		.byte	0x5
 1601 01a7 00       		.byte	0
 1602 01a8 0F       		.uleb128 0xf
 1603 01a9 70000000 		.4byte	.LASF25
 1604 01ad 02       		.byte	0x2
 1605 01ae 57       		.byte	0x57
 1606 01af 00000000 		.4byte	.LFB35
 1607 01b3 12000000 		.4byte	.LFE35-.LFB35
 1608 01b7 01       		.uleb128 0x1
 1609 01b8 9C       		.byte	0x9c
 1610 01b9 0F       		.uleb128 0xf
 1611 01ba 78030000 		.4byte	.LASF26
 1612 01be 02       		.byte	0x2
 1613 01bf 5B       		.byte	0x5b
 1614 01c0 00000000 		.4byte	.LFB36
 1615 01c4 12000000 		.4byte	.LFE36-.LFB36
 1616 01c8 01       		.uleb128 0x1
 1617 01c9 9C       		.byte	0x9c
 1618 01ca 0F       		.uleb128 0xf
 1619 01cb 30030000 		.4byte	.LASF27
 1620 01cf 02       		.byte	0x2
 1621 01d0 5F       		.byte	0x5f
 1622 01d1 00000000 		.4byte	.LFB37
 1623 01d5 34000000 		.4byte	.LFE37-.LFB37
 1624 01d9 01       		.uleb128 0x1
 1625 01da 9C       		.byte	0x9c
 1626 01db 10       		.uleb128 0x10
 1627 01dc A0010000 		.4byte	.LASF29
 1628 01e0 02       		.byte	0x2
 1629 01e1 65       		.byte	0x65
 1630 01e2 00000000 		.4byte	.LFB38
 1631 01e6 34000000 		.4byte	.LFE38-.LFB38
 1632 01ea 01       		.uleb128 0x1
 1633 01eb 9C       		.byte	0x9c
 1634 01ec FC010000 		.4byte	0x1fc
 1635 01f0 11       		.uleb128 0x11
 1636 01f1 97010000 		.4byte	.LASF57
 1637 01f5 02       		.byte	0x2
 1638 01f6 66       		.byte	0x66
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 35


 1639 01f7 8C000000 		.4byte	0x8c
 1640 01fb 00       		.byte	0
 1641 01fc 0F       		.uleb128 0xf
 1642 01fd 9E000000 		.4byte	.LASF28
 1643 0201 02       		.byte	0x2
 1644 0202 75       		.byte	0x75
 1645 0203 00000000 		.4byte	.LFB39
 1646 0207 26000000 		.4byte	.LFE39-.LFB39
 1647 020b 01       		.uleb128 0x1
 1648 020c 9C       		.byte	0x9c
 1649 020d 10       		.uleb128 0x10
 1650 020e 19030000 		.4byte	.LASF30
 1651 0212 02       		.byte	0x2
 1652 0213 7B       		.byte	0x7b
 1653 0214 00000000 		.4byte	.LFB40
 1654 0218 3E000000 		.4byte	.LFE40-.LFB40
 1655 021c 01       		.uleb128 0x1
 1656 021d 9C       		.byte	0x9c
 1657 021e 3F020000 		.4byte	0x23f
 1658 0222 08       		.uleb128 0x8
 1659 0223 53010000 		.4byte	.LASF31
 1660 0227 02       		.byte	0x2
 1661 0228 7B       		.byte	0x7b
 1662 0229 81000000 		.4byte	0x81
 1663 022d 02       		.uleb128 0x2
 1664 022e 91       		.byte	0x91
 1665 022f 77       		.sleb128 -9
 1666 0230 08       		.uleb128 0x8
 1667 0231 D1020000 		.4byte	.LASF32
 1668 0235 02       		.byte	0x2
 1669 0236 7B       		.byte	0x7b
 1670 0237 81000000 		.4byte	0x81
 1671 023b 02       		.uleb128 0x2
 1672 023c 91       		.byte	0x91
 1673 023d 76       		.sleb128 -10
 1674 023e 00       		.byte	0
 1675 023f 09       		.uleb128 0x9
 1676 0240 07000000 		.4byte	.LASF34
 1677 0244 02       		.byte	0x2
 1678 0245 81       		.byte	0x81
 1679 0246 8C000000 		.4byte	0x8c
 1680 024a 00000000 		.4byte	.LFB41
 1681 024e 58000000 		.4byte	.LFE41-.LFB41
 1682 0252 01       		.uleb128 0x1
 1683 0253 9C       		.byte	0x9c
 1684 0254 75020000 		.4byte	0x275
 1685 0258 08       		.uleb128 0x8
 1686 0259 67010000 		.4byte	.LASF35
 1687 025d 02       		.byte	0x2
 1688 025e 81       		.byte	0x81
 1689 025f 75020000 		.4byte	0x275
 1690 0263 02       		.uleb128 0x2
 1691 0264 91       		.byte	0x91
 1692 0265 74       		.sleb128 -12
 1693 0266 12       		.uleb128 0x12
 1694 0267 6C656E00 		.ascii	"len\000"
 1695 026b 02       		.byte	0x2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 36


 1696 026c 81       		.byte	0x81
 1697 026d 81000000 		.4byte	0x81
 1698 0271 02       		.uleb128 0x2
 1699 0272 91       		.byte	0x91
 1700 0273 73       		.sleb128 -13
 1701 0274 00       		.byte	0
 1702 0275 05       		.uleb128 0x5
 1703 0276 04       		.byte	0x4
 1704 0277 81000000 		.4byte	0x81
 1705 027b 09       		.uleb128 0x9
 1706 027c 45030000 		.4byte	.LASF36
 1707 0280 02       		.byte	0x2
 1708 0281 8C       		.byte	0x8c
 1709 0282 8C000000 		.4byte	0x8c
 1710 0286 00000000 		.4byte	.LFB42
 1711 028a 44000000 		.4byte	.LFE42-.LFB42
 1712 028e 01       		.uleb128 0x1
 1713 028f 9C       		.byte	0x9c
 1714 0290 B1020000 		.4byte	0x2b1
 1715 0294 08       		.uleb128 0x8
 1716 0295 67010000 		.4byte	.LASF35
 1717 0299 02       		.byte	0x2
 1718 029a 8C       		.byte	0x8c
 1719 029b 75020000 		.4byte	0x275
 1720 029f 02       		.uleb128 0x2
 1721 02a0 91       		.byte	0x91
 1722 02a1 74       		.sleb128 -12
 1723 02a2 12       		.uleb128 0x12
 1724 02a3 6C656E00 		.ascii	"len\000"
 1725 02a7 02       		.byte	0x2
 1726 02a8 8C       		.byte	0x8c
 1727 02a9 81000000 		.4byte	0x81
 1728 02ad 02       		.uleb128 0x2
 1729 02ae 91       		.byte	0x91
 1730 02af 73       		.sleb128 -13
 1731 02b0 00       		.byte	0
 1732 02b1 10       		.uleb128 0x10
 1733 02b2 21000000 		.4byte	.LASF37
 1734 02b6 02       		.byte	0x2
 1735 02b7 9C       		.byte	0x9c
 1736 02b8 00000000 		.4byte	.LFB43
 1737 02bc 2C010000 		.4byte	.LFE43-.LFB43
 1738 02c0 01       		.uleb128 0x1
 1739 02c1 9C       		.byte	0x9c
 1740 02c2 41030000 		.4byte	0x341
 1741 02c6 08       		.uleb128 0x8
 1742 02c7 02020000 		.4byte	.LASF38
 1743 02cb 02       		.byte	0x2
 1744 02cc 9C       		.byte	0x9c
 1745 02cd 81000000 		.4byte	0x81
 1746 02d1 03       		.uleb128 0x3
 1747 02d2 91       		.byte	0x91
 1748 02d3 EF7D     		.sleb128 -273
 1749 02d5 0A       		.uleb128 0xa
 1750 02d6 5D010000 		.4byte	.LASF39
 1751 02da 02       		.byte	0x2
 1752 02db 9D       		.byte	0x9d
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 37


 1753 02dc 41030000 		.4byte	0x341
 1754 02e0 03       		.uleb128 0x3
 1755 02e1 91       		.byte	0x91
 1756 02e2 F47D     		.sleb128 -268
 1757 02e4 13       		.uleb128 0x13
 1758 02e5 00000000 		.4byte	.LASF58
 1759 02e9 06       		.byte	0x6
 1760 02ea 00       		.byte	0
 1761 02eb 73000000 		.4byte	0x73
 1762 02ef FA020000 		.4byte	0x2fa
 1763 02f3 14       		.uleb128 0x14
 1764 02f4 BE000000 		.4byte	0xbe
 1765 02f8 15       		.uleb128 0x15
 1766 02f9 00       		.byte	0
 1767 02fa 16       		.uleb128 0x16
 1768 02fb 38000000 		.4byte	.LBB3
 1769 02ff 3C000000 		.4byte	.LBE3-.LBB3
 1770 0303 14030000 		.4byte	0x314
 1771 0307 0C       		.uleb128 0xc
 1772 0308 6300     		.ascii	"c\000"
 1773 030a 02       		.byte	0x2
 1774 030b A1       		.byte	0xa1
 1775 030c 81000000 		.4byte	0x81
 1776 0310 02       		.uleb128 0x2
 1777 0311 91       		.byte	0x91
 1778 0312 77       		.sleb128 -9
 1779 0313 00       		.byte	0
 1780 0314 0B       		.uleb128 0xb
 1781 0315 7A000000 		.4byte	.LBB4
 1782 0319 96000000 		.4byte	.LBE4-.LBB4
 1783 031d 0C       		.uleb128 0xc
 1784 031e 6A00     		.ascii	"j\000"
 1785 0320 02       		.byte	0x2
 1786 0321 A3       		.byte	0xa3
 1787 0322 81000000 		.4byte	0x81
 1788 0326 02       		.uleb128 0x2
 1789 0327 91       		.byte	0x91
 1790 0328 76       		.sleb128 -10
 1791 0329 0B       		.uleb128 0xb
 1792 032a 98000000 		.4byte	.LBB5
 1793 032e 54000000 		.4byte	.LBE5-.LBB5
 1794 0332 0C       		.uleb128 0xc
 1795 0333 6B00     		.ascii	"k\000"
 1796 0335 02       		.byte	0x2
 1797 0336 A5       		.byte	0xa5
 1798 0337 81000000 		.4byte	0x81
 1799 033b 02       		.uleb128 0x2
 1800 033c 91       		.byte	0x91
 1801 033d 75       		.sleb128 -11
 1802 033e 00       		.byte	0
 1803 033f 00       		.byte	0
 1804 0340 00       		.byte	0
 1805 0341 0D       		.uleb128 0xd
 1806 0342 81000000 		.4byte	0x81
 1807 0346 51030000 		.4byte	0x351
 1808 034a 0E       		.uleb128 0xe
 1809 034b B7000000 		.4byte	0xb7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 38


 1810 034f FF       		.byte	0xff
 1811 0350 00       		.byte	0
 1812 0351 10       		.uleb128 0x10
 1813 0352 C6010000 		.4byte	.LASF40
 1814 0356 02       		.byte	0x2
 1815 0357 AE       		.byte	0xae
 1816 0358 00000000 		.4byte	.LFB44
 1817 035c 60000000 		.4byte	.LFE44-.LFB44
 1818 0360 01       		.uleb128 0x1
 1819 0361 9C       		.byte	0x9c
 1820 0362 91030000 		.4byte	0x391
 1821 0366 08       		.uleb128 0x8
 1822 0367 E7010000 		.4byte	.LASF41
 1823 036b 02       		.byte	0x2
 1824 036c AE       		.byte	0xae
 1825 036d 8C000000 		.4byte	0x8c
 1826 0371 02       		.uleb128 0x2
 1827 0372 91       		.byte	0x91
 1828 0373 76       		.sleb128 -10
 1829 0374 08       		.uleb128 0x8
 1830 0375 1A000000 		.4byte	.LASF42
 1831 0379 02       		.byte	0x2
 1832 037a AE       		.byte	0xae
 1833 037b 81000000 		.4byte	0x81
 1834 037f 02       		.uleb128 0x2
 1835 0380 91       		.byte	0x91
 1836 0381 75       		.sleb128 -11
 1837 0382 08       		.uleb128 0x8
 1838 0383 AE010000 		.4byte	.LASF18
 1839 0387 02       		.byte	0x2
 1840 0388 AE       		.byte	0xae
 1841 0389 81000000 		.4byte	0x81
 1842 038d 02       		.uleb128 0x2
 1843 038e 91       		.byte	0x91
 1844 038f 74       		.sleb128 -12
 1845 0390 00       		.byte	0
 1846 0391 10       		.uleb128 0x10
 1847 0392 13010000 		.4byte	.LASF43
 1848 0396 02       		.byte	0x2
 1849 0397 BD       		.byte	0xbd
 1850 0398 00000000 		.4byte	.LFB45
 1851 039c 72000000 		.4byte	.LFE45-.LFB45
 1852 03a0 01       		.uleb128 0x1
 1853 03a1 9C       		.byte	0x9c
 1854 03a2 D1030000 		.4byte	0x3d1
 1855 03a6 08       		.uleb128 0x8
 1856 03a7 E7010000 		.4byte	.LASF41
 1857 03ab 02       		.byte	0x2
 1858 03ac BD       		.byte	0xbd
 1859 03ad 8C000000 		.4byte	0x8c
 1860 03b1 02       		.uleb128 0x2
 1861 03b2 91       		.byte	0x91
 1862 03b3 76       		.sleb128 -10
 1863 03b4 08       		.uleb128 0x8
 1864 03b5 1A000000 		.4byte	.LASF42
 1865 03b9 02       		.byte	0x2
 1866 03ba BD       		.byte	0xbd
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 39


 1867 03bb 81000000 		.4byte	0x81
 1868 03bf 02       		.uleb128 0x2
 1869 03c0 91       		.byte	0x91
 1870 03c1 75       		.sleb128 -11
 1871 03c2 08       		.uleb128 0x8
 1872 03c3 AE010000 		.4byte	.LASF18
 1873 03c7 02       		.byte	0x2
 1874 03c8 BD       		.byte	0xbd
 1875 03c9 8C000000 		.4byte	0x8c
 1876 03cd 02       		.uleb128 0x2
 1877 03ce 91       		.byte	0x91
 1878 03cf 72       		.sleb128 -14
 1879 03d0 00       		.byte	0
 1880 03d1 10       		.uleb128 0x10
 1881 03d2 E0020000 		.4byte	.LASF44
 1882 03d6 02       		.byte	0x2
 1883 03d7 CD       		.byte	0xcd
 1884 03d8 00000000 		.4byte	.LFB46
 1885 03dc 92000000 		.4byte	.LFE46-.LFB46
 1886 03e0 01       		.uleb128 0x1
 1887 03e1 9C       		.byte	0x9c
 1888 03e2 35040000 		.4byte	0x435
 1889 03e6 08       		.uleb128 0x8
 1890 03e7 E7010000 		.4byte	.LASF41
 1891 03eb 02       		.byte	0x2
 1892 03ec CD       		.byte	0xcd
 1893 03ed 8C000000 		.4byte	0x8c
 1894 03f1 02       		.uleb128 0x2
 1895 03f2 91       		.byte	0x91
 1896 03f3 6E       		.sleb128 -18
 1897 03f4 08       		.uleb128 0x8
 1898 03f5 1A000000 		.4byte	.LASF42
 1899 03f9 02       		.byte	0x2
 1900 03fa CD       		.byte	0xcd
 1901 03fb 81000000 		.4byte	0x81
 1902 03ff 02       		.uleb128 0x2
 1903 0400 91       		.byte	0x91
 1904 0401 6D       		.sleb128 -19
 1905 0402 08       		.uleb128 0x8
 1906 0403 7B000000 		.4byte	.LASF45
 1907 0407 02       		.byte	0x2
 1908 0408 CD       		.byte	0xcd
 1909 0409 75020000 		.4byte	0x275
 1910 040d 02       		.uleb128 0x2
 1911 040e 91       		.byte	0x91
 1912 040f 68       		.sleb128 -24
 1913 0410 12       		.uleb128 0x12
 1914 0411 6C656E00 		.ascii	"len\000"
 1915 0415 02       		.byte	0x2
 1916 0416 CD       		.byte	0xcd
 1917 0417 81000000 		.4byte	0x81
 1918 041b 02       		.uleb128 0x2
 1919 041c 91       		.byte	0x91
 1920 041d 6C       		.sleb128 -20
 1921 041e 0B       		.uleb128 0xb
 1922 041f 4E000000 		.4byte	.LBB6
 1923 0423 38000000 		.4byte	.LBE6-.LBB6
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 40


 1924 0427 0C       		.uleb128 0xc
 1925 0428 6B00     		.ascii	"k\000"
 1926 042a 02       		.byte	0x2
 1927 042b D7       		.byte	0xd7
 1928 042c 81000000 		.4byte	0x81
 1929 0430 02       		.uleb128 0x2
 1930 0431 91       		.byte	0x91
 1931 0432 77       		.sleb128 -9
 1932 0433 00       		.byte	0
 1933 0434 00       		.byte	0
 1934 0435 09       		.uleb128 0x9
 1935 0436 0C030000 		.4byte	.LASF46
 1936 043a 02       		.byte	0x2
 1937 043b DE       		.byte	0xde
 1938 043c 81000000 		.4byte	0x81
 1939 0440 00000000 		.4byte	.LFB47
 1940 0444 64000000 		.4byte	.LFE47-.LFB47
 1941 0448 01       		.uleb128 0x1
 1942 0449 9C       		.byte	0x9c
 1943 044a 79040000 		.4byte	0x479
 1944 044e 08       		.uleb128 0x8
 1945 044f E7010000 		.4byte	.LASF41
 1946 0453 02       		.byte	0x2
 1947 0454 DE       		.byte	0xde
 1948 0455 8C000000 		.4byte	0x8c
 1949 0459 02       		.uleb128 0x2
 1950 045a 91       		.byte	0x91
 1951 045b 66       		.sleb128 -26
 1952 045c 08       		.uleb128 0x8
 1953 045d 1A000000 		.4byte	.LASF42
 1954 0461 02       		.byte	0x2
 1955 0462 DE       		.byte	0xde
 1956 0463 81000000 		.4byte	0x81
 1957 0467 02       		.uleb128 0x2
 1958 0468 91       		.byte	0x91
 1959 0469 65       		.sleb128 -27
 1960 046a 0A       		.uleb128 0xa
 1961 046b 84030000 		.4byte	.LASF47
 1962 046f 02       		.byte	0x2
 1963 0470 E8       		.byte	0xe8
 1964 0471 81000000 		.4byte	0x81
 1965 0475 02       		.uleb128 0x2
 1966 0476 91       		.byte	0x91
 1967 0477 6F       		.sleb128 -17
 1968 0478 00       		.byte	0
 1969 0479 09       		.uleb128 0x9
 1970 047a 61030000 		.4byte	.LASF48
 1971 047e 02       		.byte	0x2
 1972 047f ED       		.byte	0xed
 1973 0480 8C000000 		.4byte	0x8c
 1974 0484 00000000 		.4byte	.LFB48
 1975 0488 80000000 		.4byte	.LFE48-.LFB48
 1976 048c 01       		.uleb128 0x1
 1977 048d 9C       		.byte	0x9c
 1978 048e BD040000 		.4byte	0x4bd
 1979 0492 08       		.uleb128 0x8
 1980 0493 E7010000 		.4byte	.LASF41
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 41


 1981 0497 02       		.byte	0x2
 1982 0498 ED       		.byte	0xed
 1983 0499 8C000000 		.4byte	0x8c
 1984 049d 02       		.uleb128 0x2
 1985 049e 91       		.byte	0x91
 1986 049f 6E       		.sleb128 -18
 1987 04a0 08       		.uleb128 0x8
 1988 04a1 1A000000 		.4byte	.LASF42
 1989 04a5 02       		.byte	0x2
 1990 04a6 ED       		.byte	0xed
 1991 04a7 81000000 		.4byte	0x81
 1992 04ab 02       		.uleb128 0x2
 1993 04ac 91       		.byte	0x91
 1994 04ad 6D       		.sleb128 -19
 1995 04ae 0A       		.uleb128 0xa
 1996 04af 84030000 		.4byte	.LASF47
 1997 04b3 02       		.byte	0x2
 1998 04b4 EE       		.byte	0xee
 1999 04b5 8C000000 		.4byte	0x8c
 2000 04b9 02       		.uleb128 0x2
 2001 04ba 91       		.byte	0x91
 2002 04bb 76       		.sleb128 -10
 2003 04bc 00       		.byte	0
 2004 04bd 10       		.uleb128 0x10
 2005 04be B2020000 		.4byte	.LASF49
 2006 04c2 02       		.byte	0x2
 2007 04c3 FE       		.byte	0xfe
 2008 04c4 00000000 		.4byte	.LFB49
 2009 04c8 8C000000 		.4byte	.LFE49-.LFB49
 2010 04cc 01       		.uleb128 0x1
 2011 04cd 9C       		.byte	0x9c
 2012 04ce 22050000 		.4byte	0x522
 2013 04d2 08       		.uleb128 0x8
 2014 04d3 E7010000 		.4byte	.LASF41
 2015 04d7 02       		.byte	0x2
 2016 04d8 FE       		.byte	0xfe
 2017 04d9 8C000000 		.4byte	0x8c
 2018 04dd 02       		.uleb128 0x2
 2019 04de 91       		.byte	0x91
 2020 04df 66       		.sleb128 -26
 2021 04e0 08       		.uleb128 0x8
 2022 04e1 1A000000 		.4byte	.LASF42
 2023 04e5 02       		.byte	0x2
 2024 04e6 FE       		.byte	0xfe
 2025 04e7 81000000 		.4byte	0x81
 2026 04eb 02       		.uleb128 0x2
 2027 04ec 91       		.byte	0x91
 2028 04ed 65       		.sleb128 -27
 2029 04ee 08       		.uleb128 0x8
 2030 04ef DE010000 		.4byte	.LASF50
 2031 04f3 02       		.byte	0x2
 2032 04f4 FE       		.byte	0xfe
 2033 04f5 75020000 		.4byte	0x275
 2034 04f9 02       		.uleb128 0x2
 2035 04fa 91       		.byte	0x91
 2036 04fb 60       		.sleb128 -32
 2037 04fc 12       		.uleb128 0x12
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 42


 2038 04fd 6C656E00 		.ascii	"len\000"
 2039 0501 02       		.byte	0x2
 2040 0502 FE       		.byte	0xfe
 2041 0503 81000000 		.4byte	0x81
 2042 0507 02       		.uleb128 0x2
 2043 0508 91       		.byte	0x91
 2044 0509 64       		.sleb128 -28
 2045 050a 0B       		.uleb128 0xb
 2046 050b 46000000 		.4byte	.LBB7
 2047 050f 3A000000 		.4byte	.LBE7-.LBB7
 2048 0513 17       		.uleb128 0x17
 2049 0514 6B00     		.ascii	"k\000"
 2050 0516 02       		.byte	0x2
 2051 0517 0A01     		.2byte	0x10a
 2052 0519 81000000 		.4byte	0x81
 2053 051d 02       		.uleb128 0x2
 2054 051e 91       		.byte	0x91
 2055 051f 6F       		.sleb128 -17
 2056 0520 00       		.byte	0
 2057 0521 00       		.byte	0
 2058 0522 0A       		.uleb128 0xa
 2059 0523 49000000 		.4byte	.LASF51
 2060 0527 02       		.byte	0x2
 2061 0528 17       		.byte	0x17
 2062 0529 8C000000 		.4byte	0x8c
 2063 052d 05       		.uleb128 0x5
 2064 052e 03       		.byte	0x3
 2065 052f 00000000 		.4byte	wiznetTxPointer
 2066 0533 0A       		.uleb128 0xa
 2067 0534 FC020000 		.4byte	.LASF52
 2068 0538 02       		.byte	0x2
 2069 0539 18       		.byte	0x18
 2070 053a 8C000000 		.4byte	0x8c
 2071 053e 05       		.uleb128 0x5
 2072 053f 03       		.byte	0x3
 2073 0540 02000000 		.4byte	wiznetRxPointer
 2074 0544 00       		.byte	0
 2075              		.section	.debug_abbrev,"",%progbits
 2076              	.Ldebug_abbrev0:
 2077 0000 01       		.uleb128 0x1
 2078 0001 11       		.uleb128 0x11
 2079 0002 01       		.byte	0x1
 2080 0003 25       		.uleb128 0x25
 2081 0004 0E       		.uleb128 0xe
 2082 0005 13       		.uleb128 0x13
 2083 0006 0B       		.uleb128 0xb
 2084 0007 03       		.uleb128 0x3
 2085 0008 0E       		.uleb128 0xe
 2086 0009 1B       		.uleb128 0x1b
 2087 000a 0E       		.uleb128 0xe
 2088 000b 55       		.uleb128 0x55
 2089 000c 17       		.uleb128 0x17
 2090 000d 11       		.uleb128 0x11
 2091 000e 01       		.uleb128 0x1
 2092 000f 10       		.uleb128 0x10
 2093 0010 17       		.uleb128 0x17
 2094 0011 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 43


 2095 0012 00       		.byte	0
 2096 0013 02       		.uleb128 0x2
 2097 0014 24       		.uleb128 0x24
 2098 0015 00       		.byte	0
 2099 0016 0B       		.uleb128 0xb
 2100 0017 0B       		.uleb128 0xb
 2101 0018 3E       		.uleb128 0x3e
 2102 0019 0B       		.uleb128 0xb
 2103 001a 03       		.uleb128 0x3
 2104 001b 0E       		.uleb128 0xe
 2105 001c 00       		.byte	0
 2106 001d 00       		.byte	0
 2107 001e 03       		.uleb128 0x3
 2108 001f 16       		.uleb128 0x16
 2109 0020 00       		.byte	0
 2110 0021 03       		.uleb128 0x3
 2111 0022 0E       		.uleb128 0xe
 2112 0023 3A       		.uleb128 0x3a
 2113 0024 0B       		.uleb128 0xb
 2114 0025 3B       		.uleb128 0x3b
 2115 0026 0B       		.uleb128 0xb
 2116 0027 49       		.uleb128 0x49
 2117 0028 13       		.uleb128 0x13
 2118 0029 00       		.byte	0
 2119 002a 00       		.byte	0
 2120 002b 04       		.uleb128 0x4
 2121 002c 24       		.uleb128 0x24
 2122 002d 00       		.byte	0
 2123 002e 0B       		.uleb128 0xb
 2124 002f 0B       		.uleb128 0xb
 2125 0030 3E       		.uleb128 0x3e
 2126 0031 0B       		.uleb128 0xb
 2127 0032 03       		.uleb128 0x3
 2128 0033 08       		.uleb128 0x8
 2129 0034 00       		.byte	0
 2130 0035 00       		.byte	0
 2131 0036 05       		.uleb128 0x5
 2132 0037 0F       		.uleb128 0xf
 2133 0038 00       		.byte	0
 2134 0039 0B       		.uleb128 0xb
 2135 003a 0B       		.uleb128 0xb
 2136 003b 49       		.uleb128 0x49
 2137 003c 13       		.uleb128 0x13
 2138 003d 00       		.byte	0
 2139 003e 00       		.byte	0
 2140 003f 06       		.uleb128 0x6
 2141 0040 26       		.uleb128 0x26
 2142 0041 00       		.byte	0
 2143 0042 49       		.uleb128 0x49
 2144 0043 13       		.uleb128 0x13
 2145 0044 00       		.byte	0
 2146 0045 00       		.byte	0
 2147 0046 07       		.uleb128 0x7
 2148 0047 2E       		.uleb128 0x2e
 2149 0048 01       		.byte	0x1
 2150 0049 03       		.uleb128 0x3
 2151 004a 0E       		.uleb128 0xe
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 44


 2152 004b 3A       		.uleb128 0x3a
 2153 004c 0B       		.uleb128 0xb
 2154 004d 3B       		.uleb128 0x3b
 2155 004e 0B       		.uleb128 0xb
 2156 004f 27       		.uleb128 0x27
 2157 0050 19       		.uleb128 0x19
 2158 0051 49       		.uleb128 0x49
 2159 0052 13       		.uleb128 0x13
 2160 0053 11       		.uleb128 0x11
 2161 0054 01       		.uleb128 0x1
 2162 0055 12       		.uleb128 0x12
 2163 0056 06       		.uleb128 0x6
 2164 0057 40       		.uleb128 0x40
 2165 0058 18       		.uleb128 0x18
 2166 0059 9642     		.uleb128 0x2116
 2167 005b 19       		.uleb128 0x19
 2168 005c 01       		.uleb128 0x1
 2169 005d 13       		.uleb128 0x13
 2170 005e 00       		.byte	0
 2171 005f 00       		.byte	0
 2172 0060 08       		.uleb128 0x8
 2173 0061 05       		.uleb128 0x5
 2174 0062 00       		.byte	0
 2175 0063 03       		.uleb128 0x3
 2176 0064 0E       		.uleb128 0xe
 2177 0065 3A       		.uleb128 0x3a
 2178 0066 0B       		.uleb128 0xb
 2179 0067 3B       		.uleb128 0x3b
 2180 0068 0B       		.uleb128 0xb
 2181 0069 49       		.uleb128 0x49
 2182 006a 13       		.uleb128 0x13
 2183 006b 02       		.uleb128 0x2
 2184 006c 18       		.uleb128 0x18
 2185 006d 00       		.byte	0
 2186 006e 00       		.byte	0
 2187 006f 09       		.uleb128 0x9
 2188 0070 2E       		.uleb128 0x2e
 2189 0071 01       		.byte	0x1
 2190 0072 3F       		.uleb128 0x3f
 2191 0073 19       		.uleb128 0x19
 2192 0074 03       		.uleb128 0x3
 2193 0075 0E       		.uleb128 0xe
 2194 0076 3A       		.uleb128 0x3a
 2195 0077 0B       		.uleb128 0xb
 2196 0078 3B       		.uleb128 0x3b
 2197 0079 0B       		.uleb128 0xb
 2198 007a 27       		.uleb128 0x27
 2199 007b 19       		.uleb128 0x19
 2200 007c 49       		.uleb128 0x49
 2201 007d 13       		.uleb128 0x13
 2202 007e 11       		.uleb128 0x11
 2203 007f 01       		.uleb128 0x1
 2204 0080 12       		.uleb128 0x12
 2205 0081 06       		.uleb128 0x6
 2206 0082 40       		.uleb128 0x40
 2207 0083 18       		.uleb128 0x18
 2208 0084 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 45


 2209 0086 19       		.uleb128 0x19
 2210 0087 01       		.uleb128 0x1
 2211 0088 13       		.uleb128 0x13
 2212 0089 00       		.byte	0
 2213 008a 00       		.byte	0
 2214 008b 0A       		.uleb128 0xa
 2215 008c 34       		.uleb128 0x34
 2216 008d 00       		.byte	0
 2217 008e 03       		.uleb128 0x3
 2218 008f 0E       		.uleb128 0xe
 2219 0090 3A       		.uleb128 0x3a
 2220 0091 0B       		.uleb128 0xb
 2221 0092 3B       		.uleb128 0x3b
 2222 0093 0B       		.uleb128 0xb
 2223 0094 49       		.uleb128 0x49
 2224 0095 13       		.uleb128 0x13
 2225 0096 02       		.uleb128 0x2
 2226 0097 18       		.uleb128 0x18
 2227 0098 00       		.byte	0
 2228 0099 00       		.byte	0
 2229 009a 0B       		.uleb128 0xb
 2230 009b 0B       		.uleb128 0xb
 2231 009c 01       		.byte	0x1
 2232 009d 11       		.uleb128 0x11
 2233 009e 01       		.uleb128 0x1
 2234 009f 12       		.uleb128 0x12
 2235 00a0 06       		.uleb128 0x6
 2236 00a1 00       		.byte	0
 2237 00a2 00       		.byte	0
 2238 00a3 0C       		.uleb128 0xc
 2239 00a4 34       		.uleb128 0x34
 2240 00a5 00       		.byte	0
 2241 00a6 03       		.uleb128 0x3
 2242 00a7 08       		.uleb128 0x8
 2243 00a8 3A       		.uleb128 0x3a
 2244 00a9 0B       		.uleb128 0xb
 2245 00aa 3B       		.uleb128 0x3b
 2246 00ab 0B       		.uleb128 0xb
 2247 00ac 49       		.uleb128 0x49
 2248 00ad 13       		.uleb128 0x13
 2249 00ae 02       		.uleb128 0x2
 2250 00af 18       		.uleb128 0x18
 2251 00b0 00       		.byte	0
 2252 00b1 00       		.byte	0
 2253 00b2 0D       		.uleb128 0xd
 2254 00b3 01       		.uleb128 0x1
 2255 00b4 01       		.byte	0x1
 2256 00b5 49       		.uleb128 0x49
 2257 00b6 13       		.uleb128 0x13
 2258 00b7 01       		.uleb128 0x1
 2259 00b8 13       		.uleb128 0x13
 2260 00b9 00       		.byte	0
 2261 00ba 00       		.byte	0
 2262 00bb 0E       		.uleb128 0xe
 2263 00bc 21       		.uleb128 0x21
 2264 00bd 00       		.byte	0
 2265 00be 49       		.uleb128 0x49
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 46


 2266 00bf 13       		.uleb128 0x13
 2267 00c0 2F       		.uleb128 0x2f
 2268 00c1 0B       		.uleb128 0xb
 2269 00c2 00       		.byte	0
 2270 00c3 00       		.byte	0
 2271 00c4 0F       		.uleb128 0xf
 2272 00c5 2E       		.uleb128 0x2e
 2273 00c6 00       		.byte	0
 2274 00c7 3F       		.uleb128 0x3f
 2275 00c8 19       		.uleb128 0x19
 2276 00c9 03       		.uleb128 0x3
 2277 00ca 0E       		.uleb128 0xe
 2278 00cb 3A       		.uleb128 0x3a
 2279 00cc 0B       		.uleb128 0xb
 2280 00cd 3B       		.uleb128 0x3b
 2281 00ce 0B       		.uleb128 0xb
 2282 00cf 27       		.uleb128 0x27
 2283 00d0 19       		.uleb128 0x19
 2284 00d1 11       		.uleb128 0x11
 2285 00d2 01       		.uleb128 0x1
 2286 00d3 12       		.uleb128 0x12
 2287 00d4 06       		.uleb128 0x6
 2288 00d5 40       		.uleb128 0x40
 2289 00d6 18       		.uleb128 0x18
 2290 00d7 9642     		.uleb128 0x2116
 2291 00d9 19       		.uleb128 0x19
 2292 00da 00       		.byte	0
 2293 00db 00       		.byte	0
 2294 00dc 10       		.uleb128 0x10
 2295 00dd 2E       		.uleb128 0x2e
 2296 00de 01       		.byte	0x1
 2297 00df 3F       		.uleb128 0x3f
 2298 00e0 19       		.uleb128 0x19
 2299 00e1 03       		.uleb128 0x3
 2300 00e2 0E       		.uleb128 0xe
 2301 00e3 3A       		.uleb128 0x3a
 2302 00e4 0B       		.uleb128 0xb
 2303 00e5 3B       		.uleb128 0x3b
 2304 00e6 0B       		.uleb128 0xb
 2305 00e7 27       		.uleb128 0x27
 2306 00e8 19       		.uleb128 0x19
 2307 00e9 11       		.uleb128 0x11
 2308 00ea 01       		.uleb128 0x1
 2309 00eb 12       		.uleb128 0x12
 2310 00ec 06       		.uleb128 0x6
 2311 00ed 40       		.uleb128 0x40
 2312 00ee 18       		.uleb128 0x18
 2313 00ef 9642     		.uleb128 0x2116
 2314 00f1 19       		.uleb128 0x19
 2315 00f2 01       		.uleb128 0x1
 2316 00f3 13       		.uleb128 0x13
 2317 00f4 00       		.byte	0
 2318 00f5 00       		.byte	0
 2319 00f6 11       		.uleb128 0x11
 2320 00f7 34       		.uleb128 0x34
 2321 00f8 00       		.byte	0
 2322 00f9 03       		.uleb128 0x3
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 47


 2323 00fa 0E       		.uleb128 0xe
 2324 00fb 3A       		.uleb128 0x3a
 2325 00fc 0B       		.uleb128 0xb
 2326 00fd 3B       		.uleb128 0x3b
 2327 00fe 0B       		.uleb128 0xb
 2328 00ff 49       		.uleb128 0x49
 2329 0100 13       		.uleb128 0x13
 2330 0101 00       		.byte	0
 2331 0102 00       		.byte	0
 2332 0103 12       		.uleb128 0x12
 2333 0104 05       		.uleb128 0x5
 2334 0105 00       		.byte	0
 2335 0106 03       		.uleb128 0x3
 2336 0107 08       		.uleb128 0x8
 2337 0108 3A       		.uleb128 0x3a
 2338 0109 0B       		.uleb128 0xb
 2339 010a 3B       		.uleb128 0x3b
 2340 010b 0B       		.uleb128 0xb
 2341 010c 49       		.uleb128 0x49
 2342 010d 13       		.uleb128 0x13
 2343 010e 02       		.uleb128 0x2
 2344 010f 18       		.uleb128 0x18
 2345 0110 00       		.byte	0
 2346 0111 00       		.byte	0
 2347 0112 13       		.uleb128 0x13
 2348 0113 2E       		.uleb128 0x2e
 2349 0114 01       		.byte	0x1
 2350 0115 3F       		.uleb128 0x3f
 2351 0116 19       		.uleb128 0x19
 2352 0117 03       		.uleb128 0x3
 2353 0118 0E       		.uleb128 0xe
 2354 0119 3A       		.uleb128 0x3a
 2355 011a 0B       		.uleb128 0xb
 2356 011b 3B       		.uleb128 0x3b
 2357 011c 0B       		.uleb128 0xb
 2358 011d 27       		.uleb128 0x27
 2359 011e 19       		.uleb128 0x19
 2360 011f 49       		.uleb128 0x49
 2361 0120 13       		.uleb128 0x13
 2362 0121 3C       		.uleb128 0x3c
 2363 0122 19       		.uleb128 0x19
 2364 0123 01       		.uleb128 0x1
 2365 0124 13       		.uleb128 0x13
 2366 0125 00       		.byte	0
 2367 0126 00       		.byte	0
 2368 0127 14       		.uleb128 0x14
 2369 0128 05       		.uleb128 0x5
 2370 0129 00       		.byte	0
 2371 012a 49       		.uleb128 0x49
 2372 012b 13       		.uleb128 0x13
 2373 012c 00       		.byte	0
 2374 012d 00       		.byte	0
 2375 012e 15       		.uleb128 0x15
 2376 012f 18       		.uleb128 0x18
 2377 0130 00       		.byte	0
 2378 0131 00       		.byte	0
 2379 0132 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 48


 2380 0133 16       		.uleb128 0x16
 2381 0134 0B       		.uleb128 0xb
 2382 0135 01       		.byte	0x1
 2383 0136 11       		.uleb128 0x11
 2384 0137 01       		.uleb128 0x1
 2385 0138 12       		.uleb128 0x12
 2386 0139 06       		.uleb128 0x6
 2387 013a 01       		.uleb128 0x1
 2388 013b 13       		.uleb128 0x13
 2389 013c 00       		.byte	0
 2390 013d 00       		.byte	0
 2391 013e 17       		.uleb128 0x17
 2392 013f 34       		.uleb128 0x34
 2393 0140 00       		.byte	0
 2394 0141 03       		.uleb128 0x3
 2395 0142 08       		.uleb128 0x8
 2396 0143 3A       		.uleb128 0x3a
 2397 0144 0B       		.uleb128 0xb
 2398 0145 3B       		.uleb128 0x3b
 2399 0146 05       		.uleb128 0x5
 2400 0147 49       		.uleb128 0x49
 2401 0148 13       		.uleb128 0x13
 2402 0149 02       		.uleb128 0x2
 2403 014a 18       		.uleb128 0x18
 2404 014b 00       		.byte	0
 2405 014c 00       		.byte	0
 2406 014d 00       		.byte	0
 2407              		.section	.debug_aranges,"",%progbits
 2408 0000 9C000000 		.4byte	0x9c
 2409 0004 0200     		.2byte	0x2
 2410 0006 00000000 		.4byte	.Ldebug_info0
 2411 000a 04       		.byte	0x4
 2412 000b 00       		.byte	0
 2413 000c 0000     		.2byte	0
 2414 000e 0000     		.2byte	0
 2415 0010 00000000 		.4byte	.LFB33
 2416 0014 34000000 		.4byte	.LFE33-.LFB33
 2417 0018 00000000 		.4byte	.LFB34
 2418 001c 64010000 		.4byte	.LFE34-.LFB34
 2419 0020 00000000 		.4byte	.LFB35
 2420 0024 12000000 		.4byte	.LFE35-.LFB35
 2421 0028 00000000 		.4byte	.LFB36
 2422 002c 12000000 		.4byte	.LFE36-.LFB36
 2423 0030 00000000 		.4byte	.LFB37
 2424 0034 34000000 		.4byte	.LFE37-.LFB37
 2425 0038 00000000 		.4byte	.LFB38
 2426 003c 34000000 		.4byte	.LFE38-.LFB38
 2427 0040 00000000 		.4byte	.LFB39
 2428 0044 26000000 		.4byte	.LFE39-.LFB39
 2429 0048 00000000 		.4byte	.LFB40
 2430 004c 3E000000 		.4byte	.LFE40-.LFB40
 2431 0050 00000000 		.4byte	.LFB41
 2432 0054 58000000 		.4byte	.LFE41-.LFB41
 2433 0058 00000000 		.4byte	.LFB42
 2434 005c 44000000 		.4byte	.LFE42-.LFB42
 2435 0060 00000000 		.4byte	.LFB43
 2436 0064 2C010000 		.4byte	.LFE43-.LFB43
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 49


 2437 0068 00000000 		.4byte	.LFB44
 2438 006c 60000000 		.4byte	.LFE44-.LFB44
 2439 0070 00000000 		.4byte	.LFB45
 2440 0074 72000000 		.4byte	.LFE45-.LFB45
 2441 0078 00000000 		.4byte	.LFB46
 2442 007c 92000000 		.4byte	.LFE46-.LFB46
 2443 0080 00000000 		.4byte	.LFB47
 2444 0084 64000000 		.4byte	.LFE47-.LFB47
 2445 0088 00000000 		.4byte	.LFB48
 2446 008c 80000000 		.4byte	.LFE48-.LFB48
 2447 0090 00000000 		.4byte	.LFB49
 2448 0094 8C000000 		.4byte	.LFE49-.LFB49
 2449 0098 00000000 		.4byte	0
 2450 009c 00000000 		.4byte	0
 2451              		.section	.debug_ranges,"",%progbits
 2452              	.Ldebug_ranges0:
 2453 0000 00000000 		.4byte	.LFB33
 2454 0004 34000000 		.4byte	.LFE33
 2455 0008 00000000 		.4byte	.LFB34
 2456 000c 64010000 		.4byte	.LFE34
 2457 0010 00000000 		.4byte	.LFB35
 2458 0014 12000000 		.4byte	.LFE35
 2459 0018 00000000 		.4byte	.LFB36
 2460 001c 12000000 		.4byte	.LFE36
 2461 0020 00000000 		.4byte	.LFB37
 2462 0024 34000000 		.4byte	.LFE37
 2463 0028 00000000 		.4byte	.LFB38
 2464 002c 34000000 		.4byte	.LFE38
 2465 0030 00000000 		.4byte	.LFB39
 2466 0034 26000000 		.4byte	.LFE39
 2467 0038 00000000 		.4byte	.LFB40
 2468 003c 3E000000 		.4byte	.LFE40
 2469 0040 00000000 		.4byte	.LFB41
 2470 0044 58000000 		.4byte	.LFE41
 2471 0048 00000000 		.4byte	.LFB42
 2472 004c 44000000 		.4byte	.LFE42
 2473 0050 00000000 		.4byte	.LFB43
 2474 0054 2C010000 		.4byte	.LFE43
 2475 0058 00000000 		.4byte	.LFB44
 2476 005c 60000000 		.4byte	.LFE44
 2477 0060 00000000 		.4byte	.LFB45
 2478 0064 72000000 		.4byte	.LFE45
 2479 0068 00000000 		.4byte	.LFB46
 2480 006c 92000000 		.4byte	.LFE46
 2481 0070 00000000 		.4byte	.LFB47
 2482 0074 64000000 		.4byte	.LFE47
 2483 0078 00000000 		.4byte	.LFB48
 2484 007c 80000000 		.4byte	.LFE48
 2485 0080 00000000 		.4byte	.LFB49
 2486 0084 8C000000 		.4byte	.LFE49
 2487 0088 00000000 		.4byte	0
 2488 008c 00000000 		.4byte	0
 2489              		.section	.debug_line,"",%progbits
 2490              	.Ldebug_line0:
 2491 0000 6E030000 		.section	.debug_str,"MS",%progbits,1
 2491      02006201 
 2491      00000201 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 50


 2491      FB0E0D00 
 2491      01010101 
 2492              	.LASF58:
 2493 0000 7072696E 		.ascii	"printf\000"
 2493      746600
 2494              	.LASF34:
 2495 0007 77697A6E 		.ascii	"wiznetReadUdpFrame\000"
 2495      65745265 
 2495      61645564 
 2495      70467261 
 2495      6D6500
 2496              	.LASF42:
 2497 001a 626C6B53 		.ascii	"blkSel\000"
 2497      656C00
 2498              	.LASF37:
 2499 0021 77697A6E 		.ascii	"wiznetPrintRegisters\000"
 2499      65745072 
 2499      696E7452 
 2499      65676973 
 2499      74657273 
 2500              	.LASF3:
 2501 0036 5F5F7569 		.ascii	"__uint8_t\000"
 2501      6E74385F 
 2501      7400
 2502              	.LASF6:
 2503 0040 6C6F6E67 		.ascii	"long int\000"
 2503      20696E74 
 2503      00
 2504              	.LASF51:
 2505 0049 77697A6E 		.ascii	"wiznetTxPointer\000"
 2505      65745478 
 2505      506F696E 
 2505      74657200 
 2506              	.LASF9:
 2507 0059 6C6F6E67 		.ascii	"long long unsigned int\000"
 2507      206C6F6E 
 2507      6720756E 
 2507      7369676E 
 2507      65642069 
 2508              	.LASF25:
 2509 0070 77697A6E 		.ascii	"wiznetOpen\000"
 2509      65744F70 
 2509      656E00
 2510              	.LASF45:
 2511 007b 73726341 		.ascii	"srcArray\000"
 2511      72726179 
 2511      00
 2512              	.LASF8:
 2513 0084 6C6F6E67 		.ascii	"long long int\000"
 2513      206C6F6E 
 2513      6720696E 
 2513      7400
 2514              	.LASF0:
 2515 0092 7369676E 		.ascii	"signed char\000"
 2515      65642063 
 2515      68617200 
 2516              	.LASF28:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 51


 2517 009e 77697A6E 		.ascii	"wiznetClearInterrupts\000"
 2517      6574436C 
 2517      65617249 
 2517      6E746572 
 2517      72757074 
 2518              	.LASF55:
 2519 00b4 433A5C55 		.ascii	"C:\\Users\\Samuel\\Documents\\GitHub\\BYU-MarsRover"
 2519      73657273 
 2519      5C53616D 
 2519      75656C5C 
 2519      446F6375 
 2520 00e2 5C41726D 		.ascii	"\\Arm\\arm_controller_v2\\arm_controller_v2.1.cydsn"
 2520      5C61726D 
 2520      5F636F6E 
 2520      74726F6C 
 2520      6C65725F 
 2521 0112 00       		.ascii	"\000"
 2522              	.LASF43:
 2523 0113 77697A6E 		.ascii	"wiznetWrite16b\000"
 2523      65745772 
 2523      69746531 
 2523      366200
 2524              	.LASF13:
 2525 0122 75696E74 		.ascii	"uint8\000"
 2525      3800
 2526              	.LASF12:
 2527 0128 75696E74 		.ascii	"uint16_t\000"
 2527      31365F74 
 2527      00
 2528              	.LASF15:
 2529 0131 646F7562 		.ascii	"double\000"
 2529      6C6500
 2530              	.LASF23:
 2531 0138 75647043 		.ascii	"udpConfig\000"
 2531      6F6E6669 
 2531      6700
 2532              	.LASF24:
 2533 0142 77697A6E 		.ascii	"wiznetOldMacAddr\000"
 2533      65744F6C 
 2533      644D6163 
 2533      41646472 
 2533      00
 2534              	.LASF31:
 2535 0153 636F6D6D 		.ascii	"commonInt\000"
 2535      6F6E496E 
 2535      7400
 2536              	.LASF39:
 2537 015d 72656164 		.ascii	"readArray\000"
 2537      41727261 
 2537      7900
 2538              	.LASF35:
 2539 0167 61727261 		.ascii	"array\000"
 2539      7900
 2540              	.LASF10:
 2541 016d 756E7369 		.ascii	"unsigned int\000"
 2541      676E6564 
 2541      20696E74 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 52


 2541      00
 2542              	.LASF21:
 2543 017a 64737455 		.ascii	"dstUdpPort\000"
 2543      6470506F 
 2543      727400
 2544              	.LASF7:
 2545 0185 6C6F6E67 		.ascii	"long unsigned int\000"
 2545      20756E73 
 2545      69676E65 
 2545      6420696E 
 2545      7400
 2546              	.LASF57:
 2547 0197 72656376 		.ascii	"recvSize\000"
 2547      53697A65 
 2547      00
 2548              	.LASF29:
 2549 01a0 77697A6E 		.ascii	"wiznetReceive\000"
 2549      65745265 
 2549      63656976 
 2549      6500
 2550              	.LASF18:
 2551 01ae 64617461 		.ascii	"data\000"
 2551      00
 2552              	.LASF5:
 2553 01b3 73686F72 		.ascii	"short unsigned int\000"
 2553      7420756E 
 2553      7369676E 
 2553      65642069 
 2553      6E7400
 2554              	.LASF40:
 2555 01c6 77697A6E 		.ascii	"wiznetWrite8b\000"
 2555      65745772 
 2555      69746538 
 2555      6200
 2556              	.LASF2:
 2557 01d4 73686F72 		.ascii	"short int\000"
 2557      7420696E 
 2557      7400
 2558              	.LASF50:
 2559 01de 64737441 		.ascii	"dstArray\000"
 2559      72726179 
 2559      00
 2560              	.LASF41:
 2561 01e7 72656741 		.ascii	"regAddr\000"
 2561      64647200 
 2562              	.LASF20:
 2563 01ef 64737449 		.ascii	"dstIpAddr\000"
 2563      70416464 
 2563      7200
 2564              	.LASF17:
 2565 01f9 73697A65 		.ascii	"sizetype\000"
 2565      74797065 
 2565      00
 2566              	.LASF38:
 2567 0202 626C6B53 		.ascii	"blkSelect\000"
 2567      656C6563 
 2567      7400
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 53


 2568              	.LASF14:
 2569 020c 666C6F61 		.ascii	"float\000"
 2569      7400
 2570              	.LASF1:
 2571 0212 756E7369 		.ascii	"unsigned char\000"
 2571      676E6564 
 2571      20636861 
 2571      7200
 2572              	.LASF53:
 2573 0220 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2573      4320342E 
 2573      382E3420 
 2573      32303134 
 2573      30353236 
 2574 0253 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2574      20726576 
 2574      6973696F 
 2574      6E203231 
 2574      31333538 
 2575 0286 30202D73 		.ascii	"0 -std=gnu99 -ffunction-sections\000"
 2575      74643D67 
 2575      6E753939 
 2575      202D6666 
 2575      756E6374 
 2576              	.LASF33:
 2577 02a7 77697A6E 		.ascii	"wiznetInit\000"
 2577      6574496E 
 2577      697400
 2578              	.LASF49:
 2579 02b2 77697A6E 		.ascii	"wiznetReadArray\000"
 2579      65745265 
 2579      61644172 
 2579      72617900 
 2580              	.LASF54:
 2581 02c2 2E5C7769 		.ascii	".\\wiznet5500.c\000"
 2581      7A6E6574 
 2581      35353030 
 2581      2E6300
 2582              	.LASF32:
 2583 02d1 736F636B 		.ascii	"socketInt\000"
 2583      6574496E 
 2583      7400
 2584              	.LASF16:
 2585 02db 63686172 		.ascii	"char\000"
 2585      00
 2586              	.LASF44:
 2587 02e0 77697A6E 		.ascii	"wiznetWriteArray\000"
 2587      65745772 
 2587      69746541 
 2587      72726179 
 2587      00
 2588              	.LASF4:
 2589 02f1 5F5F7569 		.ascii	"__uint16_t\000"
 2589      6E743136 
 2589      5F7400
 2590              	.LASF52:
 2591 02fc 77697A6E 		.ascii	"wiznetRxPointer\000"
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccnKhLJ8.s 			page 54


 2591      65745278 
 2591      506F696E 
 2591      74657200 
 2592              	.LASF46:
 2593 030c 77697A6E 		.ascii	"wiznetRead8b\000"
 2593      65745265 
 2593      61643862 
 2593      00
 2594              	.LASF30:
 2595 0319 77697A6E 		.ascii	"wiznetConfigInterrupts\000"
 2595      6574436F 
 2595      6E666967 
 2595      496E7465 
 2595      72727570 
 2596              	.LASF27:
 2597 0330 77697A6E 		.ascii	"wiznetSend\000"
 2597      65745365 
 2597      6E6400
 2598              	.LASF19:
 2599 033b 6F776E49 		.ascii	"ownIpAddr\000"
 2599      70416464 
 2599      7200
 2600              	.LASF36:
 2601 0345 77697A6E 		.ascii	"wiznetWriteUdpFrame\000"
 2601      65745772 
 2601      69746555 
 2601      64704672 
 2601      616D6500 
 2602              	.LASF11:
 2603 0359 75696E74 		.ascii	"uint8_t\000"
 2603      385F7400 
 2604              	.LASF48:
 2605 0361 77697A6E 		.ascii	"wiznetRead16b\000"
 2605      65745265 
 2605      61643136 
 2605      6200
 2606              	.LASF22:
 2607 036f 636D6441 		.ascii	"cmdArray\000"
 2607      72726179 
 2607      00
 2608              	.LASF26:
 2609 0378 77697A6E 		.ascii	"wiznetClose\000"
 2609      6574436C 
 2609      6F736500 
 2610              	.LASF47:
 2611 0384 72657375 		.ascii	"result\000"
 2611      6C7400
 2612              	.LASF56:
 2613 038b 7472616E 		.ascii	"transferSPI\000"
 2613      73666572 
 2613      53504900 
 2614              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br

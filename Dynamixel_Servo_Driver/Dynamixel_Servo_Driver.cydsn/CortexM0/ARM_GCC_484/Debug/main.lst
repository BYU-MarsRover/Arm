ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.main,"ax",%progbits
  18              		.align	2
  19              		.global	main
  20              		.code	16
  21              		.thumb_func
  22              		.type	main, %function
  23              	main:
  24              	.LFB33:
  25              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * 2015 BYU Mars Rover
   3:.\main.c      ****  * Dynamixel Wrist PWM to UART Driver
   4:.\main.c      ****  * Written by Jake Johnson
   5:.\main.c      ****  * 
   6:.\main.c      ****  * Copyright BYU Mars Rover Team, 2015
   7:.\main.c      ****  * All Rights Reserved
   8:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   9:.\main.c      ****  *
  10:.\main.c      ****  * Note: Channel_1, Channel 2 are 5V PWM inputs; tx is 5V servo output
  11:.\main.c      ****  * Note: This only writes basic movement instructions to the Dynamixel
  12:.\main.c      ****  *       It does not read the status messages sent by the servos.  
  13:.\main.c      ****  *       To do that, a tri-state buffer will need to be implemented.
  14:.\main.c      ****  * 
  15:.\main.c      ****  *
  16:.\main.c      ****  * 
  17:.\main.c      ****  * ========================================
  18:.\main.c      **** */
  19:.\main.c      **** #include <project.h>
  20:.\main.c      **** 
  21:.\main.c      **** // Functon declarations for basic Dynamixel instructions
  22:.\main.c      **** 
  23:.\main.c      **** void ServoGoalPosition( uint8 servoID, uint16 position);
  24:.\main.c      **** void ServoSpeed( uint8 servoID, uint16 speed);
  25:.\main.c      **** void ReadRequest(uint8 id, uint16 address, uint8 length);
  26:.\main.c      **** void UartWriteLED( uint8 ledvalue);
  27:.\main.c      **** void SetServoTorque( uint8 servoID, uint16 torque);
  28:.\main.c      **** 
  29:.\main.c      **** int main()
  30:.\main.c      **** {
  26              		.loc 1 30 0
  27              		.cfi_startproc
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 2


  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 82B0     		sub	sp, sp, #8
  33              		.cfi_def_cfa_offset 16
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  31:.\main.c      **** 
  32:.\main.c      ****     // Initializations of the FPGA hardware logic blocks
  33:.\main.c      ****     
  34:.\main.c      ****     UART_1_Start();
  36              		.loc 1 34 0
  37 0006 FFF7FEFF 		bl	UART_1_Start
  35:.\main.c      ****     Timer_1_Start();
  38              		.loc 1 35 0
  39 000a FFF7FEFF 		bl	Timer_1_Start
  36:.\main.c      ****     Timer_2_Start();
  40              		.loc 1 36 0
  41 000e FFF7FEFF 		bl	Timer_2_Start
  37:.\main.c      ****     
  38:.\main.c      ****     // Initialize the servo to speed of 100
  39:.\main.c      ****     
  40:.\main.c      ****     ServoSpeed(0xFE, 100);
  42              		.loc 1 40 0
  43 0012 FE20     		mov	r0, #254
  44 0014 6421     		mov	r1, #100
  45 0016 FFF7FEFF 		bl	ServoSpeed
  41:.\main.c      ****     
  42:.\main.c      ****     
  43:.\main.c      ****      CyGlobalIntEnable; // Uncomment this line to enable global interrupts. */
  46              		.loc 1 43 0
  47              	@ 43 ".\main.c" 1
  48 001a 62B6     		CPSIE   i
  49              	@ 0 "" 2
  50              		.code	16
  51              	.L5:
  52              	.LBB2:
  44:.\main.c      ****     for(;;)
  45:.\main.c      ****     {
  46:.\main.c      ****         
  47:.\main.c      ****         uint16 timer1 = Timer_1_ReadCapture(); // Read in the latest captured pulse width for chann
  53              		.loc 1 47 0
  54 001c FFF7FEFF 		bl	Timer_1_ReadCapture
  55 0020 021C     		mov	r2, r0
  56 0022 BB1D     		add	r3, r7, #6
  57 0024 1A80     		strh	r2, [r3]
  48:.\main.c      ****         if (timer1 >= 1000 && timer1 <= 2000){ // Low pass filter it
  58              		.loc 1 48 0
  59 0026 BB1D     		add	r3, r7, #6
  60 0028 1A88     		ldrh	r2, [r3]
  61 002a 1F4B     		ldr	r3, .L6
  62 002c 9A42     		cmp	r2, r3
  63 002e 12D9     		bls	.L2
  64              		.loc 1 48 0 is_stmt 0 discriminator 1
  65 0030 BB1D     		add	r3, r7, #6
  66 0032 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 3


  67 0034 FA23     		mov	r3, #250
  68 0036 DB00     		lsl	r3, r3, #3
  69 0038 9A42     		cmp	r2, r3
  70 003a 0CD8     		bhi	.L2
  49:.\main.c      ****             CyDelay(4); // This delay is to wait for the hardware block to send out the data, and t
  71              		.loc 1 49 0 is_stmt 1
  72 003c 0420     		mov	r0, #4
  73 003e FFF7FEFF 		bl	CyDelay
  50:.\main.c      ****             ServoGoalPosition(0x02, timer1);
  74              		.loc 1 50 0
  75 0042 BB1D     		add	r3, r7, #6
  76 0044 1B88     		ldrh	r3, [r3]
  77 0046 0220     		mov	r0, #2
  78 0048 191C     		mov	r1, r3
  79 004a FFF7FEFF 		bl	ServoGoalPosition
  51:.\main.c      ****             LED_Write(1);
  80              		.loc 1 51 0
  81 004e 0120     		mov	r0, #1
  82 0050 FFF7FEFF 		bl	LED_Write
  83 0054 02E0     		b	.L3
  84              	.L2:
  52:.\main.c      ****             
  53:.\main.c      ****         }
  54:.\main.c      ****         else{
  55:.\main.c      ****             LED_Write(0);
  85              		.loc 1 55 0
  86 0056 0020     		mov	r0, #0
  87 0058 FFF7FEFF 		bl	LED_Write
  88              	.L3:
  56:.\main.c      ****         }
  57:.\main.c      ****         uint16 timer2 = Timer_2_ReadCapture();
  89              		.loc 1 57 0
  90 005c FFF7FEFF 		bl	Timer_2_ReadCapture
  91 0060 021C     		mov	r2, r0
  92 0062 3B1D     		add	r3, r7, #4
  93 0064 1A80     		strh	r2, [r3]
  58:.\main.c      ****         if (timer2 >= 1000 && timer2 <= 2000){
  94              		.loc 1 58 0
  95 0066 3B1D     		add	r3, r7, #4
  96 0068 1A88     		ldrh	r2, [r3]
  97 006a 0F4B     		ldr	r3, .L6
  98 006c 9A42     		cmp	r2, r3
  99 006e 19D9     		bls	.L4
 100              		.loc 1 58 0 is_stmt 0 discriminator 1
 101 0070 3B1D     		add	r3, r7, #4
 102 0072 1A88     		ldrh	r2, [r3]
 103 0074 FA23     		mov	r3, #250
 104 0076 DB00     		lsl	r3, r3, #3
 105 0078 9A42     		cmp	r2, r3
 106 007a 13D8     		bhi	.L4
  59:.\main.c      ****             timer2 = (timer2-1000)*3;
 107              		.loc 1 59 0 is_stmt 1
 108 007c 3B1D     		add	r3, r7, #4
 109 007e 1B88     		ldrh	r3, [r3]
 110 0080 0A4A     		ldr	r2, .L6+4
 111 0082 9B18     		add	r3, r3, r2
 112 0084 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 4


 113 0086 391D     		add	r1, r7, #4
 114 0088 1A1C     		add	r2, r3, #0
 115 008a 9218     		add	r2, r2, r2
 116 008c D318     		add	r3, r2, r3
 117 008e 0B80     		strh	r3, [r1]
  60:.\main.c      ****             CyDelay(4);
 118              		.loc 1 60 0
 119 0090 0420     		mov	r0, #4
 120 0092 FFF7FEFF 		bl	CyDelay
  61:.\main.c      ****             ServoGoalPosition(0x01, timer2);
 121              		.loc 1 61 0
 122 0096 3B1D     		add	r3, r7, #4
 123 0098 1B88     		ldrh	r3, [r3]
 124 009a 0120     		mov	r0, #1
 125 009c 191C     		mov	r1, r3
 126 009e FFF7FEFF 		bl	ServoGoalPosition
 127              	.LBE2:
  62:.\main.c      ****         }
  63:.\main.c      **** 
  64:.\main.c      ****         
  65:.\main.c      **** // This is a piece of code that will reset the torque on the servo to it's maximum value
  66:.\main.c      ****         
  67:.\main.c      **** //        UartWriteLED(1);
  68:.\main.c      **** //        SetServoTorque(0xFE, 0x03FF);       
  69:.\main.c      **** //        LED_Write(1);
  70:.\main.c      **** //        CyDelay(1000);
  71:.\main.c      **** //        ServoGoalPosition(0x02, 1000);
  72:.\main.c      **** //        LED_Write(0);
  73:.\main.c      **** //        UartWriteLED(0);
  74:.\main.c      **** //        CyDelay(1000);
  75:.\main.c      ****             
  76:.\main.c      ****         
  77:.\main.c      ****         
  78:.\main.c      ****         
  79:.\main.c      ****         
  80:.\main.c      ****         
  81:.\main.c      ****     }
 128              		.loc 1 81 0
 129 00a2 BBE7     		b	.L5
 130              	.L4:
 131 00a4 BAE7     		b	.L5
 132              	.L7:
 133 00a6 C046     		.align	2
 134              	.L6:
 135 00a8 E7030000 		.word	999
 136 00ac 18FCFFFF 		.word	-1000
 137              		.cfi_endproc
 138              	.LFE33:
 139              		.size	main, .-main
 140              		.section	.text.ServoGoalPosition,"ax",%progbits
 141              		.align	2
 142              		.global	ServoGoalPosition
 143              		.code	16
 144              		.thumb_func
 145              		.type	ServoGoalPosition, %function
 146              	ServoGoalPosition:
 147              	.LFB34:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 5


  82:.\main.c      **** }
  83:.\main.c      ****     
  84:.\main.c      ****     void ServoGoalPosition( uint8 servoID, uint16 position){
 148              		.loc 1 84 0
 149              		.cfi_startproc
 150 0000 80B5     		push	{r7, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 86B0     		sub	sp, sp, #24
 155              		.cfi_def_cfa_offset 32
 156 0004 00AF     		add	r7, sp, #0
 157              		.cfi_def_cfa_register 7
 158 0006 0A1C     		mov	r2, r1
 159 0008 FB1D     		add	r3, r7, #7
 160 000a 011C     		add	r1, r0, #0
 161 000c 1970     		strb	r1, [r3]
 162 000e 3B1D     		add	r3, r7, #4
 163 0010 1A80     		strh	r2, [r3]
  85:.\main.c      ****     uint8 array[9];
  86:.\main.c      ****     
  87:.\main.c      ****     array[0] = 0xFF;
 164              		.loc 1 87 0
 165 0012 3B1C     		mov	r3, r7
 166 0014 0C33     		add	r3, r3, #12
 167 0016 FF22     		mov	r2, #255
 168 0018 1A70     		strb	r2, [r3]
  88:.\main.c      ****     array[1] = 0xFF;
 169              		.loc 1 88 0
 170 001a 3B1C     		mov	r3, r7
 171 001c 0C33     		add	r3, r3, #12
 172 001e FF22     		mov	r2, #255
 173 0020 5A70     		strb	r2, [r3, #1]
  89:.\main.c      ****     array[2] = servoID; //this is a broadcast ID.  Change for daisychained servos.
 174              		.loc 1 89 0
 175 0022 3B1C     		mov	r3, r7
 176 0024 0C33     		add	r3, r3, #12
 177 0026 FA1D     		add	r2, r7, #7
 178 0028 1278     		ldrb	r2, [r2]
 179 002a 9A70     		strb	r2, [r3, #2]
  90:.\main.c      ****     array[3] = 0x05;
 180              		.loc 1 90 0
 181 002c 3B1C     		mov	r3, r7
 182 002e 0C33     		add	r3, r3, #12
 183 0030 0522     		mov	r2, #5
 184 0032 DA70     		strb	r2, [r3, #3]
  91:.\main.c      ****     array[4] = 0x03; //write instruction
 185              		.loc 1 91 0
 186 0034 3B1C     		mov	r3, r7
 187 0036 0C33     		add	r3, r3, #12
 188 0038 0322     		mov	r2, #3
 189 003a 1A71     		strb	r2, [r3, #4]
  92:.\main.c      ****     array[5] = 0x1E;
 190              		.loc 1 92 0
 191 003c 3B1C     		mov	r3, r7
 192 003e 0C33     		add	r3, r3, #12
 193 0040 1E22     		mov	r2, #30
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 6


 194 0042 5A71     		strb	r2, [r3, #5]
  93:.\main.c      ****     array[6] = position;
 195              		.loc 1 93 0
 196 0044 3B1D     		add	r3, r7, #4
 197 0046 1B88     		ldrh	r3, [r3]
 198 0048 DAB2     		uxtb	r2, r3
 199 004a 3B1C     		mov	r3, r7
 200 004c 0C33     		add	r3, r3, #12
 201 004e 9A71     		strb	r2, [r3, #6]
  94:.\main.c      ****     array[7] = position >> 8;
 202              		.loc 1 94 0
 203 0050 3B1D     		add	r3, r7, #4
 204 0052 1B88     		ldrh	r3, [r3]
 205 0054 1B0A     		lsr	r3, r3, #8
 206 0056 9BB2     		uxth	r3, r3
 207 0058 DAB2     		uxtb	r2, r3
 208 005a 3B1C     		mov	r3, r7
 209 005c 0C33     		add	r3, r3, #12
 210 005e DA71     		strb	r2, [r3, #7]
  95:.\main.c      ****     array[8] = ~(servoID + 0x05 + 0x1E + array[6] + array[7] + 0x03);
 211              		.loc 1 95 0
 212 0060 3B1C     		mov	r3, r7
 213 0062 0C33     		add	r3, r3, #12
 214 0064 9A79     		ldrb	r2, [r3, #6]
 215 0066 FB1D     		add	r3, r7, #7
 216 0068 1B78     		ldrb	r3, [r3]
 217 006a D318     		add	r3, r2, r3
 218 006c DAB2     		uxtb	r2, r3
 219 006e 3B1C     		mov	r3, r7
 220 0070 0C33     		add	r3, r3, #12
 221 0072 DB79     		ldrb	r3, [r3, #7]
 222 0074 D318     		add	r3, r2, r3
 223 0076 DBB2     		uxtb	r3, r3
 224 0078 2633     		add	r3, r3, #38
 225 007a DBB2     		uxtb	r3, r3
 226 007c DB43     		mvn	r3, r3
 227 007e DAB2     		uxtb	r2, r3
 228 0080 3B1C     		mov	r3, r7
 229 0082 0C33     		add	r3, r3, #12
 230 0084 1A72     		strb	r2, [r3, #8]
  96:.\main.c      ****     
  97:.\main.c      ****     UART_1_PutArray(array, 0x09);
 231              		.loc 1 97 0
 232 0086 3B1C     		mov	r3, r7
 233 0088 0C33     		add	r3, r3, #12
 234 008a 181C     		mov	r0, r3
 235 008c 0921     		mov	r1, #9
 236 008e FFF7FEFF 		bl	UART_1_PutArray
  98:.\main.c      ****     
  99:.\main.c      **** }
 237              		.loc 1 99 0
 238 0092 BD46     		mov	sp, r7
 239 0094 06B0     		add	sp, sp, #24
 240              		@ sp needed
 241 0096 80BD     		pop	{r7, pc}
 242              		.cfi_endproc
 243              	.LFE34:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 7


 244              		.size	ServoGoalPosition, .-ServoGoalPosition
 245              		.section	.text.SetServoTorque,"ax",%progbits
 246              		.align	2
 247              		.global	SetServoTorque
 248              		.code	16
 249              		.thumb_func
 250              		.type	SetServoTorque, %function
 251              	SetServoTorque:
 252              	.LFB35:
 100:.\main.c      ****     
 101:.\main.c      **** void SetServoTorque( uint8 servoID, uint16 torque){
 253              		.loc 1 101 0
 254              		.cfi_startproc
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 86B0     		sub	sp, sp, #24
 260              		.cfi_def_cfa_offset 32
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 263 0006 0A1C     		mov	r2, r1
 264 0008 FB1D     		add	r3, r7, #7
 265 000a 011C     		add	r1, r0, #0
 266 000c 1970     		strb	r1, [r3]
 267 000e 3B1D     		add	r3, r7, #4
 268 0010 1A80     		strh	r2, [r3]
 102:.\main.c      ****     uint8 array[9];
 103:.\main.c      ****     
 104:.\main.c      ****     array[0] = 0xFF;
 269              		.loc 1 104 0
 270 0012 3B1C     		mov	r3, r7
 271 0014 0C33     		add	r3, r3, #12
 272 0016 FF22     		mov	r2, #255
 273 0018 1A70     		strb	r2, [r3]
 105:.\main.c      ****     array[1] = 0xFF;
 274              		.loc 1 105 0
 275 001a 3B1C     		mov	r3, r7
 276 001c 0C33     		add	r3, r3, #12
 277 001e FF22     		mov	r2, #255
 278 0020 5A70     		strb	r2, [r3, #1]
 106:.\main.c      ****     array[2] = servoID; 
 279              		.loc 1 106 0
 280 0022 3B1C     		mov	r3, r7
 281 0024 0C33     		add	r3, r3, #12
 282 0026 FA1D     		add	r2, r7, #7
 283 0028 1278     		ldrb	r2, [r2]
 284 002a 9A70     		strb	r2, [r3, #2]
 107:.\main.c      ****     array[3] = 0x05;
 285              		.loc 1 107 0
 286 002c 3B1C     		mov	r3, r7
 287 002e 0C33     		add	r3, r3, #12
 288 0030 0522     		mov	r2, #5
 289 0032 DA70     		strb	r2, [r3, #3]
 108:.\main.c      ****     array[4] = 0x03; //write instruction
 290              		.loc 1 108 0
 291 0034 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 8


 292 0036 0C33     		add	r3, r3, #12
 293 0038 0322     		mov	r2, #3
 294 003a 1A71     		strb	r2, [r3, #4]
 109:.\main.c      ****     array[5] = 0x0E;
 295              		.loc 1 109 0
 296 003c 3B1C     		mov	r3, r7
 297 003e 0C33     		add	r3, r3, #12
 298 0040 0E22     		mov	r2, #14
 299 0042 5A71     		strb	r2, [r3, #5]
 110:.\main.c      ****     array[6] = torque;
 300              		.loc 1 110 0
 301 0044 3B1D     		add	r3, r7, #4
 302 0046 1B88     		ldrh	r3, [r3]
 303 0048 DAB2     		uxtb	r2, r3
 304 004a 3B1C     		mov	r3, r7
 305 004c 0C33     		add	r3, r3, #12
 306 004e 9A71     		strb	r2, [r3, #6]
 111:.\main.c      ****     array[7] = torque >> 8;
 307              		.loc 1 111 0
 308 0050 3B1D     		add	r3, r7, #4
 309 0052 1B88     		ldrh	r3, [r3]
 310 0054 1B0A     		lsr	r3, r3, #8
 311 0056 9BB2     		uxth	r3, r3
 312 0058 DAB2     		uxtb	r2, r3
 313 005a 3B1C     		mov	r3, r7
 314 005c 0C33     		add	r3, r3, #12
 315 005e DA71     		strb	r2, [r3, #7]
 112:.\main.c      ****     array[8] = ~(servoID + 0x05 + 0x0E + array[6] + array[7] + 0x03);
 316              		.loc 1 112 0
 317 0060 3B1C     		mov	r3, r7
 318 0062 0C33     		add	r3, r3, #12
 319 0064 9A79     		ldrb	r2, [r3, #6]
 320 0066 FB1D     		add	r3, r7, #7
 321 0068 1B78     		ldrb	r3, [r3]
 322 006a D318     		add	r3, r2, r3
 323 006c DAB2     		uxtb	r2, r3
 324 006e 3B1C     		mov	r3, r7
 325 0070 0C33     		add	r3, r3, #12
 326 0072 DB79     		ldrb	r3, [r3, #7]
 327 0074 D318     		add	r3, r2, r3
 328 0076 DBB2     		uxtb	r3, r3
 329 0078 1633     		add	r3, r3, #22
 330 007a DBB2     		uxtb	r3, r3
 331 007c DB43     		mvn	r3, r3
 332 007e DAB2     		uxtb	r2, r3
 333 0080 3B1C     		mov	r3, r7
 334 0082 0C33     		add	r3, r3, #12
 335 0084 1A72     		strb	r2, [r3, #8]
 113:.\main.c      ****     
 114:.\main.c      ****     UART_1_PutArray(array, 0x09);
 336              		.loc 1 114 0
 337 0086 3B1C     		mov	r3, r7
 338 0088 0C33     		add	r3, r3, #12
 339 008a 181C     		mov	r0, r3
 340 008c 0921     		mov	r1, #9
 341 008e FFF7FEFF 		bl	UART_1_PutArray
 115:.\main.c      ****     
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 9


 116:.\main.c      **** }    
 342              		.loc 1 116 0
 343 0092 BD46     		mov	sp, r7
 344 0094 06B0     		add	sp, sp, #24
 345              		@ sp needed
 346 0096 80BD     		pop	{r7, pc}
 347              		.cfi_endproc
 348              	.LFE35:
 349              		.size	SetServoTorque, .-SetServoTorque
 350              		.section	.text.ServoSpeed,"ax",%progbits
 351              		.align	2
 352              		.global	ServoSpeed
 353              		.code	16
 354              		.thumb_func
 355              		.type	ServoSpeed, %function
 356              	ServoSpeed:
 357              	.LFB36:
 117:.\main.c      **** 
 118:.\main.c      **** void ServoSpeed( uint8 servoID, uint16 speed){
 358              		.loc 1 118 0
 359              		.cfi_startproc
 360 0000 80B5     		push	{r7, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 86B0     		sub	sp, sp, #24
 365              		.cfi_def_cfa_offset 32
 366 0004 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
 368 0006 0A1C     		mov	r2, r1
 369 0008 FB1D     		add	r3, r7, #7
 370 000a 011C     		add	r1, r0, #0
 371 000c 1970     		strb	r1, [r3]
 372 000e 3B1D     		add	r3, r7, #4
 373 0010 1A80     		strh	r2, [r3]
 119:.\main.c      ****     uint8 array[9];
 120:.\main.c      ****     
 121:.\main.c      ****     array[0] = 0xFF;
 374              		.loc 1 121 0
 375 0012 3B1C     		mov	r3, r7
 376 0014 0C33     		add	r3, r3, #12
 377 0016 FF22     		mov	r2, #255
 378 0018 1A70     		strb	r2, [r3]
 122:.\main.c      ****     array[1] = 0xFF;
 379              		.loc 1 122 0
 380 001a 3B1C     		mov	r3, r7
 381 001c 0C33     		add	r3, r3, #12
 382 001e FF22     		mov	r2, #255
 383 0020 5A70     		strb	r2, [r3, #1]
 123:.\main.c      ****     array[2] = servoID; //this is a broadcast ID.  Change for daisychained servos.
 384              		.loc 1 123 0
 385 0022 3B1C     		mov	r3, r7
 386 0024 0C33     		add	r3, r3, #12
 387 0026 FA1D     		add	r2, r7, #7
 388 0028 1278     		ldrb	r2, [r2]
 389 002a 9A70     		strb	r2, [r3, #2]
 124:.\main.c      ****     array[3] = 0x05;
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 10


 390              		.loc 1 124 0
 391 002c 3B1C     		mov	r3, r7
 392 002e 0C33     		add	r3, r3, #12
 393 0030 0522     		mov	r2, #5
 394 0032 DA70     		strb	r2, [r3, #3]
 125:.\main.c      ****     array[4] = 0x03; //write instruction
 395              		.loc 1 125 0
 396 0034 3B1C     		mov	r3, r7
 397 0036 0C33     		add	r3, r3, #12
 398 0038 0322     		mov	r2, #3
 399 003a 1A71     		strb	r2, [r3, #4]
 126:.\main.c      ****     array[5] = 0x20;
 400              		.loc 1 126 0
 401 003c 3B1C     		mov	r3, r7
 402 003e 0C33     		add	r3, r3, #12
 403 0040 2022     		mov	r2, #32
 404 0042 5A71     		strb	r2, [r3, #5]
 127:.\main.c      ****     array[6] = speed;
 405              		.loc 1 127 0
 406 0044 3B1D     		add	r3, r7, #4
 407 0046 1B88     		ldrh	r3, [r3]
 408 0048 DAB2     		uxtb	r2, r3
 409 004a 3B1C     		mov	r3, r7
 410 004c 0C33     		add	r3, r3, #12
 411 004e 9A71     		strb	r2, [r3, #6]
 128:.\main.c      ****     array[7] = speed >> 8;
 412              		.loc 1 128 0
 413 0050 3B1D     		add	r3, r7, #4
 414 0052 1B88     		ldrh	r3, [r3]
 415 0054 1B0A     		lsr	r3, r3, #8
 416 0056 9BB2     		uxth	r3, r3
 417 0058 DAB2     		uxtb	r2, r3
 418 005a 3B1C     		mov	r3, r7
 419 005c 0C33     		add	r3, r3, #12
 420 005e DA71     		strb	r2, [r3, #7]
 129:.\main.c      ****     array[8] = ~(servoID + 0x05 + 0x20 + array[6] + array[7] + 0x03);
 421              		.loc 1 129 0
 422 0060 3B1C     		mov	r3, r7
 423 0062 0C33     		add	r3, r3, #12
 424 0064 9A79     		ldrb	r2, [r3, #6]
 425 0066 FB1D     		add	r3, r7, #7
 426 0068 1B78     		ldrb	r3, [r3]
 427 006a D318     		add	r3, r2, r3
 428 006c DAB2     		uxtb	r2, r3
 429 006e 3B1C     		mov	r3, r7
 430 0070 0C33     		add	r3, r3, #12
 431 0072 DB79     		ldrb	r3, [r3, #7]
 432 0074 D318     		add	r3, r2, r3
 433 0076 DBB2     		uxtb	r3, r3
 434 0078 2833     		add	r3, r3, #40
 435 007a DBB2     		uxtb	r3, r3
 436 007c DB43     		mvn	r3, r3
 437 007e DAB2     		uxtb	r2, r3
 438 0080 3B1C     		mov	r3, r7
 439 0082 0C33     		add	r3, r3, #12
 440 0084 1A72     		strb	r2, [r3, #8]
 130:.\main.c      ****     
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 11


 131:.\main.c      ****     UART_1_PutArray(array, 0x09);
 441              		.loc 1 131 0
 442 0086 3B1C     		mov	r3, r7
 443 0088 0C33     		add	r3, r3, #12
 444 008a 181C     		mov	r0, r3
 445 008c 0921     		mov	r1, #9
 446 008e FFF7FEFF 		bl	UART_1_PutArray
 132:.\main.c      ****     
 133:.\main.c      **** }
 447              		.loc 1 133 0
 448 0092 BD46     		mov	sp, r7
 449 0094 06B0     		add	sp, sp, #24
 450              		@ sp needed
 451 0096 80BD     		pop	{r7, pc}
 452              		.cfi_endproc
 453              	.LFE36:
 454              		.size	ServoSpeed, .-ServoSpeed
 455              		.section	.text.ReadRequest,"ax",%progbits
 456              		.align	2
 457              		.global	ReadRequest
 458              		.code	16
 459              		.thumb_func
 460              		.type	ReadRequest, %function
 461              	ReadRequest:
 462              	.LFB37:
 134:.\main.c      **** 
 135:.\main.c      **** void ReadRequest(uint8 id,uint16 address, uint8 length){ // note that this uses a broadcast ID - it
 463              		.loc 1 135 0
 464              		.cfi_startproc
 465 0000 80B5     		push	{r7, lr}
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 7, -8
 468              		.cfi_offset 14, -4
 469 0002 84B0     		sub	sp, sp, #16
 470              		.cfi_def_cfa_offset 24
 471 0004 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
 473 0006 FB1D     		add	r3, r7, #7
 474 0008 1870     		strb	r0, [r3]
 475 000a 3B1D     		add	r3, r7, #4
 476 000c 1980     		strh	r1, [r3]
 477 000e BB1D     		add	r3, r7, #6
 478 0010 1A70     		strb	r2, [r3]
 136:.\main.c      ****     uint8 array[8];
 137:.\main.c      ****     
 138:.\main.c      ****     array[0] = 0xFE;
 479              		.loc 1 138 0
 480 0012 3B1C     		mov	r3, r7
 481 0014 0833     		add	r3, r3, #8
 482 0016 FE22     		mov	r2, #254
 483 0018 1A70     		strb	r2, [r3]
 139:.\main.c      ****     array[1] = 0xFE;
 484              		.loc 1 139 0
 485 001a 3B1C     		mov	r3, r7
 486 001c 0833     		add	r3, r3, #8
 487 001e FE22     		mov	r2, #254
 488 0020 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 12


 140:.\main.c      ****     array[2] = id; //this is a broadcast ID.  Change for daisychained servos.
 489              		.loc 1 140 0
 490 0022 3B1C     		mov	r3, r7
 491 0024 0833     		add	r3, r3, #8
 492 0026 FA1D     		add	r2, r7, #7
 493 0028 1278     		ldrb	r2, [r2]
 494 002a 9A70     		strb	r2, [r3, #2]
 141:.\main.c      ****     array[3] = 0x04; //length = number of parameters + 2
 495              		.loc 1 141 0
 496 002c 3B1C     		mov	r3, r7
 497 002e 0833     		add	r3, r3, #8
 498 0030 0422     		mov	r2, #4
 499 0032 DA70     		strb	r2, [r3, #3]
 142:.\main.c      ****     array[4] = 0x02; //write instruction
 500              		.loc 1 142 0
 501 0034 3B1C     		mov	r3, r7
 502 0036 0833     		add	r3, r3, #8
 503 0038 0222     		mov	r2, #2
 504 003a 1A71     		strb	r2, [r3, #4]
 143:.\main.c      ****     array[5] = address;
 505              		.loc 1 143 0
 506 003c 3B1D     		add	r3, r7, #4
 507 003e 1B88     		ldrh	r3, [r3]
 508 0040 DAB2     		uxtb	r2, r3
 509 0042 3B1C     		mov	r3, r7
 510 0044 0833     		add	r3, r3, #8
 511 0046 5A71     		strb	r2, [r3, #5]
 144:.\main.c      ****     array[6] = length;
 512              		.loc 1 144 0
 513 0048 3B1C     		mov	r3, r7
 514 004a 0833     		add	r3, r3, #8
 515 004c BA1D     		add	r2, r7, #6
 516 004e 1278     		ldrb	r2, [r2]
 517 0050 9A71     		strb	r2, [r3, #6]
 145:.\main.c      ****     array[7]= ~(id + 0x04 + address + length +0x02);
 518              		.loc 1 145 0
 519 0052 3B1D     		add	r3, r7, #4
 520 0054 1B88     		ldrh	r3, [r3]
 521 0056 DAB2     		uxtb	r2, r3
 522 0058 FB1D     		add	r3, r7, #7
 523 005a 1B78     		ldrb	r3, [r3]
 524 005c D318     		add	r3, r2, r3
 525 005e DAB2     		uxtb	r2, r3
 526 0060 BB1D     		add	r3, r7, #6
 527 0062 1B78     		ldrb	r3, [r3]
 528 0064 D318     		add	r3, r2, r3
 529 0066 DBB2     		uxtb	r3, r3
 530 0068 0633     		add	r3, r3, #6
 531 006a DBB2     		uxtb	r3, r3
 532 006c DB43     		mvn	r3, r3
 533 006e DAB2     		uxtb	r2, r3
 534 0070 3B1C     		mov	r3, r7
 535 0072 0833     		add	r3, r3, #8
 536 0074 DA71     		strb	r2, [r3, #7]
 146:.\main.c      ****  
 147:.\main.c      ****     
 148:.\main.c      ****     UART_1_PutArray(array, 0x08);
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 13


 537              		.loc 1 148 0
 538 0076 3B1C     		mov	r3, r7
 539 0078 0833     		add	r3, r3, #8
 540 007a 181C     		mov	r0, r3
 541 007c 0821     		mov	r1, #8
 542 007e FFF7FEFF 		bl	UART_1_PutArray
 149:.\main.c      ****     
 150:.\main.c      **** }
 543              		.loc 1 150 0
 544 0082 BD46     		mov	sp, r7
 545 0084 04B0     		add	sp, sp, #16
 546              		@ sp needed
 547 0086 80BD     		pop	{r7, pc}
 548              		.cfi_endproc
 549              	.LFE37:
 550              		.size	ReadRequest, .-ReadRequest
 551              		.section	.text.UartWriteLED,"ax",%progbits
 552              		.align	2
 553              		.global	UartWriteLED
 554              		.code	16
 555              		.thumb_func
 556              		.type	UartWriteLED, %function
 557              	UartWriteLED:
 558              	.LFB38:
 151:.\main.c      **** 
 152:.\main.c      **** void UartWriteLED( uint8 ledvalue){
 559              		.loc 1 152 0
 560              		.cfi_startproc
 561 0000 80B5     		push	{r7, lr}
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 565 0002 84B0     		sub	sp, sp, #16
 566              		.cfi_def_cfa_offset 24
 567 0004 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 569 0006 021C     		mov	r2, r0
 570 0008 FB1D     		add	r3, r7, #7
 571 000a 1A70     		strb	r2, [r3]
 153:.\main.c      ****     uint8 array[8];
 154:.\main.c      ****     
 155:.\main.c      ****     array[0] = 0xFE;
 572              		.loc 1 155 0
 573 000c 3B1C     		mov	r3, r7
 574 000e 0833     		add	r3, r3, #8
 575 0010 FE22     		mov	r2, #254
 576 0012 1A70     		strb	r2, [r3]
 156:.\main.c      ****     array[1] = 0xFE;
 577              		.loc 1 156 0
 578 0014 3B1C     		mov	r3, r7
 579 0016 0833     		add	r3, r3, #8
 580 0018 FE22     		mov	r2, #254
 581 001a 5A70     		strb	r2, [r3, #1]
 157:.\main.c      ****     array[2] = 0x0FE; //this is a broadcast ID.  Change for daisychained servos.
 582              		.loc 1 157 0
 583 001c 3B1C     		mov	r3, r7
 584 001e 0833     		add	r3, r3, #8
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 14


 585 0020 FE22     		mov	r2, #254
 586 0022 9A70     		strb	r2, [r3, #2]
 158:.\main.c      ****     array[3] = 0x04;
 587              		.loc 1 158 0
 588 0024 3B1C     		mov	r3, r7
 589 0026 0833     		add	r3, r3, #8
 590 0028 0422     		mov	r2, #4
 591 002a DA70     		strb	r2, [r3, #3]
 159:.\main.c      ****     array[4] = 0x03; //write instruction
 592              		.loc 1 159 0
 593 002c 3B1C     		mov	r3, r7
 594 002e 0833     		add	r3, r3, #8
 595 0030 0322     		mov	r2, #3
 596 0032 1A71     		strb	r2, [r3, #4]
 160:.\main.c      ****     array[5] = 0x19;
 597              		.loc 1 160 0
 598 0034 3B1C     		mov	r3, r7
 599 0036 0833     		add	r3, r3, #8
 600 0038 1922     		mov	r2, #25
 601 003a 5A71     		strb	r2, [r3, #5]
 161:.\main.c      ****     array[6] = ledvalue;
 602              		.loc 1 161 0
 603 003c 3B1C     		mov	r3, r7
 604 003e 0833     		add	r3, r3, #8
 605 0040 FA1D     		add	r2, r7, #7
 606 0042 1278     		ldrb	r2, [r2]
 607 0044 9A71     		strb	r2, [r3, #6]
 162:.\main.c      ****     array[7] = ~(0x0FE + 0x04 + 0x19 + ledvalue + 0x03);
 608              		.loc 1 162 0
 609 0046 FB1D     		add	r3, r7, #7
 610 0048 1B78     		ldrb	r3, [r3]
 611 004a 1E33     		add	r3, r3, #30
 612 004c DBB2     		uxtb	r3, r3
 613 004e DB43     		mvn	r3, r3
 614 0050 DAB2     		uxtb	r2, r3
 615 0052 3B1C     		mov	r3, r7
 616 0054 0833     		add	r3, r3, #8
 617 0056 DA71     		strb	r2, [r3, #7]
 163:.\main.c      ****     
 164:.\main.c      ****     UART_1_PutArray(array, 0x08);
 618              		.loc 1 164 0
 619 0058 3B1C     		mov	r3, r7
 620 005a 0833     		add	r3, r3, #8
 621 005c 181C     		mov	r0, r3
 622 005e 0821     		mov	r1, #8
 623 0060 FFF7FEFF 		bl	UART_1_PutArray
 165:.\main.c      ****     
 166:.\main.c      **** }
 624              		.loc 1 166 0
 625 0064 BD46     		mov	sp, r7
 626 0066 04B0     		add	sp, sp, #16
 627              		@ sp needed
 628 0068 80BD     		pop	{r7, pc}
 629              		.cfi_endproc
 630              	.LFE38:
 631              		.size	UartWriteLED, .-UartWriteLED
 632 006a C046     		.text
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 15


 633              	.Letext0:
 634              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 635              		.section	.debug_info,"",%progbits
 636              	.Ldebug_info0:
 637 0000 35020000 		.4byte	0x235
 638 0004 0400     		.2byte	0x4
 639 0006 00000000 		.4byte	.Ldebug_abbrev0
 640 000a 04       		.byte	0x4
 641 000b 01       		.uleb128 0x1
 642 000c 44000000 		.4byte	.LASF30
 643 0010 01       		.byte	0x1
 644 0011 00010000 		.4byte	.LASF31
 645 0015 78010000 		.4byte	.LASF32
 646 0019 00000000 		.4byte	.Ldebug_ranges0+0
 647 001d 00000000 		.4byte	0
 648 0021 00000000 		.4byte	.Ldebug_line0
 649 0025 02       		.uleb128 0x2
 650 0026 01       		.byte	0x1
 651 0027 06       		.byte	0x6
 652 0028 FE010000 		.4byte	.LASF0
 653 002c 02       		.uleb128 0x2
 654 002d 01       		.byte	0x1
 655 002e 08       		.byte	0x8
 656 002f C0000000 		.4byte	.LASF1
 657 0033 02       		.uleb128 0x2
 658 0034 02       		.byte	0x2
 659 0035 05       		.byte	0x5
 660 0036 2C000000 		.4byte	.LASF2
 661 003a 02       		.uleb128 0x2
 662 003b 02       		.byte	0x2
 663 003c 07       		.byte	0x7
 664 003d 19000000 		.4byte	.LASF3
 665 0041 02       		.uleb128 0x2
 666 0042 04       		.byte	0x4
 667 0043 05       		.byte	0x5
 668 0044 F5010000 		.4byte	.LASF4
 669 0048 02       		.uleb128 0x2
 670 0049 04       		.byte	0x4
 671 004a 07       		.byte	0x7
 672 004b CE000000 		.4byte	.LASF5
 673 004f 02       		.uleb128 0x2
 674 0050 08       		.byte	0x8
 675 0051 05       		.byte	0x5
 676 0052 59010000 		.4byte	.LASF6
 677 0056 02       		.uleb128 0x2
 678 0057 08       		.byte	0x8
 679 0058 07       		.byte	0x7
 680 0059 33010000 		.4byte	.LASF7
 681 005d 03       		.uleb128 0x3
 682 005e 04       		.byte	0x4
 683 005f 05       		.byte	0x5
 684 0060 696E7400 		.ascii	"int\000"
 685 0064 02       		.uleb128 0x2
 686 0065 04       		.byte	0x4
 687 0066 07       		.byte	0x7
 688 0067 1E010000 		.4byte	.LASF8
 689 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 16


 690 006c E0000000 		.4byte	.LASF9
 691 0070 02       		.byte	0x2
 692 0071 A1       		.byte	0xa1
 693 0072 2C000000 		.4byte	0x2c
 694 0076 04       		.uleb128 0x4
 695 0077 09010000 		.4byte	.LASF10
 696 007b 02       		.byte	0x2
 697 007c A2       		.byte	0xa2
 698 007d 3A000000 		.4byte	0x3a
 699 0081 02       		.uleb128 0x2
 700 0082 04       		.byte	0x4
 701 0083 04       		.byte	0x4
 702 0084 3E000000 		.4byte	.LASF11
 703 0088 02       		.uleb128 0x2
 704 0089 08       		.byte	0x8
 705 008a 04       		.byte	0x4
 706 008b EC000000 		.4byte	.LASF12
 707 008f 02       		.uleb128 0x2
 708 0090 01       		.byte	0x1
 709 0091 08       		.byte	0x8
 710 0092 67010000 		.4byte	.LASF13
 711 0096 02       		.uleb128 0x2
 712 0097 04       		.byte	0x4
 713 0098 07       		.byte	0x7
 714 0099 50010000 		.4byte	.LASF14
 715 009d 05       		.uleb128 0x5
 716 009e 19010000 		.4byte	.LASF17
 717 00a2 01       		.byte	0x1
 718 00a3 1D       		.byte	0x1d
 719 00a4 5D000000 		.4byte	0x5d
 720 00a8 00000000 		.4byte	.LFB33
 721 00ac B0000000 		.4byte	.LFE33-.LFB33
 722 00b0 01       		.uleb128 0x1
 723 00b1 9C       		.byte	0x9c
 724 00b2 DD000000 		.4byte	0xdd
 725 00b6 06       		.uleb128 0x6
 726 00b7 1C000000 		.4byte	.LBB2
 727 00bb 86000000 		.4byte	.LBE2-.LBB2
 728 00bf 07       		.uleb128 0x7
 729 00c0 0B000000 		.4byte	.LASF15
 730 00c4 01       		.byte	0x1
 731 00c5 2F       		.byte	0x2f
 732 00c6 76000000 		.4byte	0x76
 733 00ca 02       		.uleb128 0x2
 734 00cb 91       		.byte	0x91
 735 00cc 76       		.sleb128 -10
 736 00cd 07       		.uleb128 0x7
 737 00ce 12000000 		.4byte	.LASF16
 738 00d2 01       		.byte	0x1
 739 00d3 39       		.byte	0x39
 740 00d4 76000000 		.4byte	0x76
 741 00d8 02       		.uleb128 0x2
 742 00d9 91       		.byte	0x91
 743 00da 74       		.sleb128 -12
 744 00db 00       		.byte	0
 745 00dc 00       		.byte	0
 746 00dd 08       		.uleb128 0x8
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 17


 747 00de 0A020000 		.4byte	.LASF18
 748 00e2 01       		.byte	0x1
 749 00e3 54       		.byte	0x54
 750 00e4 00000000 		.4byte	.LFB34
 751 00e8 98000000 		.4byte	.LFE34-.LFB34
 752 00ec 01       		.uleb128 0x1
 753 00ed 9C       		.byte	0x9c
 754 00ee 1D010000 		.4byte	0x11d
 755 00f2 09       		.uleb128 0x9
 756 00f3 36000000 		.4byte	.LASF19
 757 00f7 01       		.byte	0x1
 758 00f8 54       		.byte	0x54
 759 00f9 6B000000 		.4byte	0x6b
 760 00fd 02       		.uleb128 0x2
 761 00fe 91       		.byte	0x91
 762 00ff 67       		.sleb128 -25
 763 0100 09       		.uleb128 0x9
 764 0101 10010000 		.4byte	.LASF20
 765 0105 01       		.byte	0x1
 766 0106 54       		.byte	0x54
 767 0107 76000000 		.4byte	0x76
 768 010b 02       		.uleb128 0x2
 769 010c 91       		.byte	0x91
 770 010d 64       		.sleb128 -28
 771 010e 07       		.uleb128 0x7
 772 010f E6000000 		.4byte	.LASF21
 773 0113 01       		.byte	0x1
 774 0114 55       		.byte	0x55
 775 0115 1D010000 		.4byte	0x11d
 776 0119 02       		.uleb128 0x2
 777 011a 91       		.byte	0x91
 778 011b 6C       		.sleb128 -20
 779 011c 00       		.byte	0
 780 011d 0A       		.uleb128 0xa
 781 011e 6B000000 		.4byte	0x6b
 782 0122 2D010000 		.4byte	0x12d
 783 0126 0B       		.uleb128 0xb
 784 0127 96000000 		.4byte	0x96
 785 012b 08       		.byte	0x8
 786 012c 00       		.byte	0
 787 012d 08       		.uleb128 0x8
 788 012e E6010000 		.4byte	.LASF22
 789 0132 01       		.byte	0x1
 790 0133 65       		.byte	0x65
 791 0134 00000000 		.4byte	.LFB35
 792 0138 98000000 		.4byte	.LFE35-.LFB35
 793 013c 01       		.uleb128 0x1
 794 013d 9C       		.byte	0x9c
 795 013e 6D010000 		.4byte	0x16d
 796 0142 09       		.uleb128 0x9
 797 0143 36000000 		.4byte	.LASF19
 798 0147 01       		.byte	0x1
 799 0148 65       		.byte	0x65
 800 0149 6B000000 		.4byte	0x6b
 801 014d 02       		.uleb128 0x2
 802 014e 91       		.byte	0x91
 803 014f 67       		.sleb128 -25
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 18


 804 0150 09       		.uleb128 0x9
 805 0151 DF010000 		.4byte	.LASF23
 806 0155 01       		.byte	0x1
 807 0156 65       		.byte	0x65
 808 0157 76000000 		.4byte	0x76
 809 015b 02       		.uleb128 0x2
 810 015c 91       		.byte	0x91
 811 015d 64       		.sleb128 -28
 812 015e 07       		.uleb128 0x7
 813 015f E6000000 		.4byte	.LASF21
 814 0163 01       		.byte	0x1
 815 0164 66       		.byte	0x66
 816 0165 1D010000 		.4byte	0x11d
 817 0169 02       		.uleb128 0x2
 818 016a 91       		.byte	0x91
 819 016b 6C       		.sleb128 -20
 820 016c 00       		.byte	0
 821 016d 08       		.uleb128 0x8
 822 016e 00000000 		.4byte	.LASF24
 823 0172 01       		.byte	0x1
 824 0173 76       		.byte	0x76
 825 0174 00000000 		.4byte	.LFB36
 826 0178 98000000 		.4byte	.LFE36-.LFB36
 827 017c 01       		.uleb128 0x1
 828 017d 9C       		.byte	0x9c
 829 017e AD010000 		.4byte	0x1ad
 830 0182 09       		.uleb128 0x9
 831 0183 36000000 		.4byte	.LASF19
 832 0187 01       		.byte	0x1
 833 0188 76       		.byte	0x76
 834 0189 6B000000 		.4byte	0x6b
 835 018d 02       		.uleb128 0x2
 836 018e 91       		.byte	0x91
 837 018f 67       		.sleb128 -25
 838 0190 09       		.uleb128 0x9
 839 0191 4A010000 		.4byte	.LASF25
 840 0195 01       		.byte	0x1
 841 0196 76       		.byte	0x76
 842 0197 76000000 		.4byte	0x76
 843 019b 02       		.uleb128 0x2
 844 019c 91       		.byte	0x91
 845 019d 64       		.sleb128 -28
 846 019e 07       		.uleb128 0x7
 847 019f E6000000 		.4byte	.LASF21
 848 01a3 01       		.byte	0x1
 849 01a4 77       		.byte	0x77
 850 01a5 1D010000 		.4byte	0x11d
 851 01a9 02       		.uleb128 0x2
 852 01aa 91       		.byte	0x91
 853 01ab 6C       		.sleb128 -20
 854 01ac 00       		.byte	0
 855 01ad 08       		.uleb128 0x8
 856 01ae 6C010000 		.4byte	.LASF26
 857 01b2 01       		.byte	0x1
 858 01b3 87       		.byte	0x87
 859 01b4 00000000 		.4byte	.LFB37
 860 01b8 88000000 		.4byte	.LFE37-.LFB37
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 19


 861 01bc 01       		.uleb128 0x1
 862 01bd 9C       		.byte	0x9c
 863 01be FA010000 		.4byte	0x1fa
 864 01c2 0C       		.uleb128 0xc
 865 01c3 696400   		.ascii	"id\000"
 866 01c6 01       		.byte	0x1
 867 01c7 87       		.byte	0x87
 868 01c8 6B000000 		.4byte	0x6b
 869 01cc 02       		.uleb128 0x2
 870 01cd 91       		.byte	0x91
 871 01ce 6F       		.sleb128 -17
 872 01cf 09       		.uleb128 0x9
 873 01d0 2B010000 		.4byte	.LASF27
 874 01d4 01       		.byte	0x1
 875 01d5 87       		.byte	0x87
 876 01d6 76000000 		.4byte	0x76
 877 01da 02       		.uleb128 0x2
 878 01db 91       		.byte	0x91
 879 01dc 6C       		.sleb128 -20
 880 01dd 09       		.uleb128 0x9
 881 01de 1C020000 		.4byte	.LASF28
 882 01e2 01       		.byte	0x1
 883 01e3 87       		.byte	0x87
 884 01e4 6B000000 		.4byte	0x6b
 885 01e8 02       		.uleb128 0x2
 886 01e9 91       		.byte	0x91
 887 01ea 6E       		.sleb128 -18
 888 01eb 07       		.uleb128 0x7
 889 01ec E6000000 		.4byte	.LASF21
 890 01f0 01       		.byte	0x1
 891 01f1 88       		.byte	0x88
 892 01f2 FA010000 		.4byte	0x1fa
 893 01f6 02       		.uleb128 0x2
 894 01f7 91       		.byte	0x91
 895 01f8 70       		.sleb128 -16
 896 01f9 00       		.byte	0
 897 01fa 0A       		.uleb128 0xa
 898 01fb 6B000000 		.4byte	0x6b
 899 01ff 0A020000 		.4byte	0x20a
 900 0203 0B       		.uleb128 0xb
 901 0204 96000000 		.4byte	0x96
 902 0208 07       		.byte	0x7
 903 0209 00       		.byte	0
 904 020a 0D       		.uleb128 0xd
 905 020b F3000000 		.4byte	.LASF33
 906 020f 01       		.byte	0x1
 907 0210 98       		.byte	0x98
 908 0211 00000000 		.4byte	.LFB38
 909 0215 6A000000 		.4byte	.LFE38-.LFB38
 910 0219 01       		.uleb128 0x1
 911 021a 9C       		.byte	0x9c
 912 021b 09       		.uleb128 0x9
 913 021c 23020000 		.4byte	.LASF29
 914 0220 01       		.byte	0x1
 915 0221 98       		.byte	0x98
 916 0222 6B000000 		.4byte	0x6b
 917 0226 02       		.uleb128 0x2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 20


 918 0227 91       		.byte	0x91
 919 0228 6F       		.sleb128 -17
 920 0229 07       		.uleb128 0x7
 921 022a E6000000 		.4byte	.LASF21
 922 022e 01       		.byte	0x1
 923 022f 99       		.byte	0x99
 924 0230 FA010000 		.4byte	0x1fa
 925 0234 02       		.uleb128 0x2
 926 0235 91       		.byte	0x91
 927 0236 70       		.sleb128 -16
 928 0237 00       		.byte	0
 929 0238 00       		.byte	0
 930              		.section	.debug_abbrev,"",%progbits
 931              	.Ldebug_abbrev0:
 932 0000 01       		.uleb128 0x1
 933 0001 11       		.uleb128 0x11
 934 0002 01       		.byte	0x1
 935 0003 25       		.uleb128 0x25
 936 0004 0E       		.uleb128 0xe
 937 0005 13       		.uleb128 0x13
 938 0006 0B       		.uleb128 0xb
 939 0007 03       		.uleb128 0x3
 940 0008 0E       		.uleb128 0xe
 941 0009 1B       		.uleb128 0x1b
 942 000a 0E       		.uleb128 0xe
 943 000b 55       		.uleb128 0x55
 944 000c 17       		.uleb128 0x17
 945 000d 11       		.uleb128 0x11
 946 000e 01       		.uleb128 0x1
 947 000f 10       		.uleb128 0x10
 948 0010 17       		.uleb128 0x17
 949 0011 00       		.byte	0
 950 0012 00       		.byte	0
 951 0013 02       		.uleb128 0x2
 952 0014 24       		.uleb128 0x24
 953 0015 00       		.byte	0
 954 0016 0B       		.uleb128 0xb
 955 0017 0B       		.uleb128 0xb
 956 0018 3E       		.uleb128 0x3e
 957 0019 0B       		.uleb128 0xb
 958 001a 03       		.uleb128 0x3
 959 001b 0E       		.uleb128 0xe
 960 001c 00       		.byte	0
 961 001d 00       		.byte	0
 962 001e 03       		.uleb128 0x3
 963 001f 24       		.uleb128 0x24
 964 0020 00       		.byte	0
 965 0021 0B       		.uleb128 0xb
 966 0022 0B       		.uleb128 0xb
 967 0023 3E       		.uleb128 0x3e
 968 0024 0B       		.uleb128 0xb
 969 0025 03       		.uleb128 0x3
 970 0026 08       		.uleb128 0x8
 971 0027 00       		.byte	0
 972 0028 00       		.byte	0
 973 0029 04       		.uleb128 0x4
 974 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 21


 975 002b 00       		.byte	0
 976 002c 03       		.uleb128 0x3
 977 002d 0E       		.uleb128 0xe
 978 002e 3A       		.uleb128 0x3a
 979 002f 0B       		.uleb128 0xb
 980 0030 3B       		.uleb128 0x3b
 981 0031 0B       		.uleb128 0xb
 982 0032 49       		.uleb128 0x49
 983 0033 13       		.uleb128 0x13
 984 0034 00       		.byte	0
 985 0035 00       		.byte	0
 986 0036 05       		.uleb128 0x5
 987 0037 2E       		.uleb128 0x2e
 988 0038 01       		.byte	0x1
 989 0039 3F       		.uleb128 0x3f
 990 003a 19       		.uleb128 0x19
 991 003b 03       		.uleb128 0x3
 992 003c 0E       		.uleb128 0xe
 993 003d 3A       		.uleb128 0x3a
 994 003e 0B       		.uleb128 0xb
 995 003f 3B       		.uleb128 0x3b
 996 0040 0B       		.uleb128 0xb
 997 0041 49       		.uleb128 0x49
 998 0042 13       		.uleb128 0x13
 999 0043 11       		.uleb128 0x11
 1000 0044 01       		.uleb128 0x1
 1001 0045 12       		.uleb128 0x12
 1002 0046 06       		.uleb128 0x6
 1003 0047 40       		.uleb128 0x40
 1004 0048 18       		.uleb128 0x18
 1005 0049 9642     		.uleb128 0x2116
 1006 004b 19       		.uleb128 0x19
 1007 004c 01       		.uleb128 0x1
 1008 004d 13       		.uleb128 0x13
 1009 004e 00       		.byte	0
 1010 004f 00       		.byte	0
 1011 0050 06       		.uleb128 0x6
 1012 0051 0B       		.uleb128 0xb
 1013 0052 01       		.byte	0x1
 1014 0053 11       		.uleb128 0x11
 1015 0054 01       		.uleb128 0x1
 1016 0055 12       		.uleb128 0x12
 1017 0056 06       		.uleb128 0x6
 1018 0057 00       		.byte	0
 1019 0058 00       		.byte	0
 1020 0059 07       		.uleb128 0x7
 1021 005a 34       		.uleb128 0x34
 1022 005b 00       		.byte	0
 1023 005c 03       		.uleb128 0x3
 1024 005d 0E       		.uleb128 0xe
 1025 005e 3A       		.uleb128 0x3a
 1026 005f 0B       		.uleb128 0xb
 1027 0060 3B       		.uleb128 0x3b
 1028 0061 0B       		.uleb128 0xb
 1029 0062 49       		.uleb128 0x49
 1030 0063 13       		.uleb128 0x13
 1031 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 22


 1032 0065 18       		.uleb128 0x18
 1033 0066 00       		.byte	0
 1034 0067 00       		.byte	0
 1035 0068 08       		.uleb128 0x8
 1036 0069 2E       		.uleb128 0x2e
 1037 006a 01       		.byte	0x1
 1038 006b 3F       		.uleb128 0x3f
 1039 006c 19       		.uleb128 0x19
 1040 006d 03       		.uleb128 0x3
 1041 006e 0E       		.uleb128 0xe
 1042 006f 3A       		.uleb128 0x3a
 1043 0070 0B       		.uleb128 0xb
 1044 0071 3B       		.uleb128 0x3b
 1045 0072 0B       		.uleb128 0xb
 1046 0073 27       		.uleb128 0x27
 1047 0074 19       		.uleb128 0x19
 1048 0075 11       		.uleb128 0x11
 1049 0076 01       		.uleb128 0x1
 1050 0077 12       		.uleb128 0x12
 1051 0078 06       		.uleb128 0x6
 1052 0079 40       		.uleb128 0x40
 1053 007a 18       		.uleb128 0x18
 1054 007b 9642     		.uleb128 0x2116
 1055 007d 19       		.uleb128 0x19
 1056 007e 01       		.uleb128 0x1
 1057 007f 13       		.uleb128 0x13
 1058 0080 00       		.byte	0
 1059 0081 00       		.byte	0
 1060 0082 09       		.uleb128 0x9
 1061 0083 05       		.uleb128 0x5
 1062 0084 00       		.byte	0
 1063 0085 03       		.uleb128 0x3
 1064 0086 0E       		.uleb128 0xe
 1065 0087 3A       		.uleb128 0x3a
 1066 0088 0B       		.uleb128 0xb
 1067 0089 3B       		.uleb128 0x3b
 1068 008a 0B       		.uleb128 0xb
 1069 008b 49       		.uleb128 0x49
 1070 008c 13       		.uleb128 0x13
 1071 008d 02       		.uleb128 0x2
 1072 008e 18       		.uleb128 0x18
 1073 008f 00       		.byte	0
 1074 0090 00       		.byte	0
 1075 0091 0A       		.uleb128 0xa
 1076 0092 01       		.uleb128 0x1
 1077 0093 01       		.byte	0x1
 1078 0094 49       		.uleb128 0x49
 1079 0095 13       		.uleb128 0x13
 1080 0096 01       		.uleb128 0x1
 1081 0097 13       		.uleb128 0x13
 1082 0098 00       		.byte	0
 1083 0099 00       		.byte	0
 1084 009a 0B       		.uleb128 0xb
 1085 009b 21       		.uleb128 0x21
 1086 009c 00       		.byte	0
 1087 009d 49       		.uleb128 0x49
 1088 009e 13       		.uleb128 0x13
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 23


 1089 009f 2F       		.uleb128 0x2f
 1090 00a0 0B       		.uleb128 0xb
 1091 00a1 00       		.byte	0
 1092 00a2 00       		.byte	0
 1093 00a3 0C       		.uleb128 0xc
 1094 00a4 05       		.uleb128 0x5
 1095 00a5 00       		.byte	0
 1096 00a6 03       		.uleb128 0x3
 1097 00a7 08       		.uleb128 0x8
 1098 00a8 3A       		.uleb128 0x3a
 1099 00a9 0B       		.uleb128 0xb
 1100 00aa 3B       		.uleb128 0x3b
 1101 00ab 0B       		.uleb128 0xb
 1102 00ac 49       		.uleb128 0x49
 1103 00ad 13       		.uleb128 0x13
 1104 00ae 02       		.uleb128 0x2
 1105 00af 18       		.uleb128 0x18
 1106 00b0 00       		.byte	0
 1107 00b1 00       		.byte	0
 1108 00b2 0D       		.uleb128 0xd
 1109 00b3 2E       		.uleb128 0x2e
 1110 00b4 01       		.byte	0x1
 1111 00b5 3F       		.uleb128 0x3f
 1112 00b6 19       		.uleb128 0x19
 1113 00b7 03       		.uleb128 0x3
 1114 00b8 0E       		.uleb128 0xe
 1115 00b9 3A       		.uleb128 0x3a
 1116 00ba 0B       		.uleb128 0xb
 1117 00bb 3B       		.uleb128 0x3b
 1118 00bc 0B       		.uleb128 0xb
 1119 00bd 27       		.uleb128 0x27
 1120 00be 19       		.uleb128 0x19
 1121 00bf 11       		.uleb128 0x11
 1122 00c0 01       		.uleb128 0x1
 1123 00c1 12       		.uleb128 0x12
 1124 00c2 06       		.uleb128 0x6
 1125 00c3 40       		.uleb128 0x40
 1126 00c4 18       		.uleb128 0x18
 1127 00c5 9642     		.uleb128 0x2116
 1128 00c7 19       		.uleb128 0x19
 1129 00c8 00       		.byte	0
 1130 00c9 00       		.byte	0
 1131 00ca 00       		.byte	0
 1132              		.section	.debug_aranges,"",%progbits
 1133 0000 44000000 		.4byte	0x44
 1134 0004 0200     		.2byte	0x2
 1135 0006 00000000 		.4byte	.Ldebug_info0
 1136 000a 04       		.byte	0x4
 1137 000b 00       		.byte	0
 1138 000c 0000     		.2byte	0
 1139 000e 0000     		.2byte	0
 1140 0010 00000000 		.4byte	.LFB33
 1141 0014 B0000000 		.4byte	.LFE33-.LFB33
 1142 0018 00000000 		.4byte	.LFB34
 1143 001c 98000000 		.4byte	.LFE34-.LFB34
 1144 0020 00000000 		.4byte	.LFB35
 1145 0024 98000000 		.4byte	.LFE35-.LFB35
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 24


 1146 0028 00000000 		.4byte	.LFB36
 1147 002c 98000000 		.4byte	.LFE36-.LFB36
 1148 0030 00000000 		.4byte	.LFB37
 1149 0034 88000000 		.4byte	.LFE37-.LFB37
 1150 0038 00000000 		.4byte	.LFB38
 1151 003c 6A000000 		.4byte	.LFE38-.LFB38
 1152 0040 00000000 		.4byte	0
 1153 0044 00000000 		.4byte	0
 1154              		.section	.debug_ranges,"",%progbits
 1155              	.Ldebug_ranges0:
 1156 0000 00000000 		.4byte	.LFB33
 1157 0004 B0000000 		.4byte	.LFE33
 1158 0008 00000000 		.4byte	.LFB34
 1159 000c 98000000 		.4byte	.LFE34
 1160 0010 00000000 		.4byte	.LFB35
 1161 0014 98000000 		.4byte	.LFE35
 1162 0018 00000000 		.4byte	.LFB36
 1163 001c 98000000 		.4byte	.LFE36
 1164 0020 00000000 		.4byte	.LFB37
 1165 0024 88000000 		.4byte	.LFE37
 1166 0028 00000000 		.4byte	.LFB38
 1167 002c 6A000000 		.4byte	.LFE38
 1168 0030 00000000 		.4byte	0
 1169 0034 00000000 		.4byte	0
 1170              		.section	.debug_line,"",%progbits
 1171              	.Ldebug_line0:
 1172 0000 04010000 		.section	.debug_str,"MS",%progbits,1
 1172      02004500 
 1172      00000201 
 1172      FB0E0D00 
 1172      01010101 
 1173              	.LASF24:
 1174 0000 53657276 		.ascii	"ServoSpeed\000"
 1174      6F537065 
 1174      656400
 1175              	.LASF15:
 1176 000b 74696D65 		.ascii	"timer1\000"
 1176      723100
 1177              	.LASF16:
 1178 0012 74696D65 		.ascii	"timer2\000"
 1178      723200
 1179              	.LASF3:
 1180 0019 73686F72 		.ascii	"short unsigned int\000"
 1180      7420756E 
 1180      7369676E 
 1180      65642069 
 1180      6E7400
 1181              	.LASF2:
 1182 002c 73686F72 		.ascii	"short int\000"
 1182      7420696E 
 1182      7400
 1183              	.LASF19:
 1184 0036 73657276 		.ascii	"servoID\000"
 1184      6F494400 
 1185              	.LASF11:
 1186 003e 666C6F61 		.ascii	"float\000"
 1186      7400
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 25


 1187              	.LASF30:
 1188 0044 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1188      4320342E 
 1188      382E3420 
 1188      32303134 
 1188      30353236 
 1189 0077 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1189      20726576 
 1189      6973696F 
 1189      6E203231 
 1189      31333538 
 1190 00aa 30202D66 		.ascii	"0 -ffunction-sections\000"
 1190      66756E63 
 1190      74696F6E 
 1190      2D736563 
 1190      74696F6E 
 1191              	.LASF1:
 1192 00c0 756E7369 		.ascii	"unsigned char\000"
 1192      676E6564 
 1192      20636861 
 1192      7200
 1193              	.LASF5:
 1194 00ce 6C6F6E67 		.ascii	"long unsigned int\000"
 1194      20756E73 
 1194      69676E65 
 1194      6420696E 
 1194      7400
 1195              	.LASF9:
 1196 00e0 75696E74 		.ascii	"uint8\000"
 1196      3800
 1197              	.LASF21:
 1198 00e6 61727261 		.ascii	"array\000"
 1198      7900
 1199              	.LASF12:
 1200 00ec 646F7562 		.ascii	"double\000"
 1200      6C6500
 1201              	.LASF33:
 1202 00f3 55617274 		.ascii	"UartWriteLED\000"
 1202      57726974 
 1202      654C4544 
 1202      00
 1203              	.LASF31:
 1204 0100 2E5C6D61 		.ascii	".\\main.c\000"
 1204      696E2E63 
 1204      00
 1205              	.LASF10:
 1206 0109 75696E74 		.ascii	"uint16\000"
 1206      313600
 1207              	.LASF20:
 1208 0110 706F7369 		.ascii	"position\000"
 1208      74696F6E 
 1208      00
 1209              	.LASF17:
 1210 0119 6D61696E 		.ascii	"main\000"
 1210      00
 1211              	.LASF8:
 1212 011e 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 26


 1212      676E6564 
 1212      20696E74 
 1212      00
 1213              	.LASF27:
 1214 012b 61646472 		.ascii	"address\000"
 1214      65737300 
 1215              	.LASF7:
 1216 0133 6C6F6E67 		.ascii	"long long unsigned int\000"
 1216      206C6F6E 
 1216      6720756E 
 1216      7369676E 
 1216      65642069 
 1217              	.LASF25:
 1218 014a 73706565 		.ascii	"speed\000"
 1218      6400
 1219              	.LASF14:
 1220 0150 73697A65 		.ascii	"sizetype\000"
 1220      74797065 
 1220      00
 1221              	.LASF6:
 1222 0159 6C6F6E67 		.ascii	"long long int\000"
 1222      206C6F6E 
 1222      6720696E 
 1222      7400
 1223              	.LASF13:
 1224 0167 63686172 		.ascii	"char\000"
 1224      00
 1225              	.LASF26:
 1226 016c 52656164 		.ascii	"ReadRequest\000"
 1226      52657175 
 1226      65737400 
 1227              	.LASF32:
 1228 0178 433A5C55 		.ascii	"C:\\Users\\Samuel\\Documents\\GitHub\\BYU-MarsRover"
 1228      73657273 
 1228      5C53616D 
 1228      75656C5C 
 1228      446F6375 
 1229 01a6 5C41726D 		.ascii	"\\Arm\\Dynamixel_Servo_Driver\\Dynamixel_Servo_Driv"
 1229      5C44796E 
 1229      616D6978 
 1229      656C5F53 
 1229      6572766F 
 1230 01d6 65722E63 		.ascii	"er.cydsn\000"
 1230      7964736E 
 1230      00
 1231              	.LASF23:
 1232 01df 746F7271 		.ascii	"torque\000"
 1232      756500
 1233              	.LASF22:
 1234 01e6 53657453 		.ascii	"SetServoTorque\000"
 1234      6572766F 
 1234      546F7271 
 1234      756500
 1235              	.LASF4:
 1236 01f5 6C6F6E67 		.ascii	"long int\000"
 1236      20696E74 
 1236      00
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccuWQPss.s 			page 27


 1237              	.LASF0:
 1238 01fe 7369676E 		.ascii	"signed char\000"
 1238      65642063 
 1238      68617200 
 1239              	.LASF18:
 1240 020a 53657276 		.ascii	"ServoGoalPosition\000"
 1240      6F476F61 
 1240      6C506F73 
 1240      6974696F 
 1240      6E00
 1241              	.LASF28:
 1242 021c 6C656E67 		.ascii	"length\000"
 1242      746800
 1243              	.LASF29:
 1244 0223 6C656476 		.ascii	"ledvalue\000"
 1244      616C7565 
 1244      00
 1245              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
